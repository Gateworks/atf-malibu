#ifndef __CAVM_CSRS_CST_CCMPLX_ROM_H__
#define __CAVM_CSRS_CST_CCMPLX_ROM_H__
/* This file is auto-generated. Do not edit */

/***********************license start***********************************
* Copyright (C) 2018 Marvell
* SPDX-License-Identifier: BSD-3-Clause
* https://spdx.org/licenses
***********************license end**************************************/


/**
 * @file
 *
 * Configuration and status register (CSR) address and type definitions for
 * OcteonTX CST_CCMPLX_ROM.
 *
 * This file is auto generated. Do not edit.
 *
 */

/**
 * Register (NCB32b) cst_ccmplx_rom_authstatus
 *
 * CST Ccmplx Rom Authstatus Register
 * Reports the current status of the authentication control signals.
 */
union cavm_cst_ccmplx_rom_authstatus
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_authstatus_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_12_31        : 20;
        uint32_t hnid                  : 2;  /**< [ 11: 10](RO) Hypervisor non-invasive debug. */
        uint32_t hid                   : 2;  /**< [  9:  8](RO) Hypervisor invasive debug. */
        uint32_t snid                  : 2;  /**< [  7:  6](RO) Secure non-invasive debug. */
        uint32_t sid                   : 2;  /**< [  5:  4](RO) Secure invasive debug. */
        uint32_t nsnid                 : 2;  /**< [  3:  2](RO) Non-secure non-invasive debug. */
        uint32_t nsid                  : 2;  /**< [  1:  0](RO) Non-secure invasive debug. */
#else /* Word 0 - Little Endian */
        uint32_t nsid                  : 2;  /**< [  1:  0](RO) Non-secure invasive debug. */
        uint32_t nsnid                 : 2;  /**< [  3:  2](RO) Non-secure non-invasive debug. */
        uint32_t sid                   : 2;  /**< [  5:  4](RO) Secure invasive debug. */
        uint32_t snid                  : 2;  /**< [  7:  6](RO) Secure non-invasive debug. */
        uint32_t hid                   : 2;  /**< [  9:  8](RO) Hypervisor invasive debug. */
        uint32_t hnid                  : 2;  /**< [ 11: 10](RO) Hypervisor non-invasive debug. */
        uint32_t reserved_12_31        : 20;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_authstatus_s cn; */
};
typedef union cavm_cst_ccmplx_rom_authstatus cavm_cst_ccmplx_rom_authstatus_t;

#define CAVM_CST_CCMPLX_ROM_AUTHSTATUS CAVM_CST_CCMPLX_ROM_AUTHSTATUS_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_AUTHSTATUS_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_AUTHSTATUS_FUNC(void)
{
    return 0x87a000000fb8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_AUTHSTATUS cavm_cst_ccmplx_rom_authstatus_t
#define bustype_CAVM_CST_CCMPLX_ROM_AUTHSTATUS CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_AUTHSTATUS "CST_CCMPLX_ROM_AUTHSTATUS"
#define busnum_CAVM_CST_CCMPLX_ROM_AUTHSTATUS 0
#define arguments_CAVM_CST_CCMPLX_ROM_AUTHSTATUS -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_cidr0
 *
 * CST Ccmplx Rom Cidr0 Register
 * The CIDR0 register is part of the set of component identification registers.
 */
union cavm_cst_ccmplx_rom_cidr0
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_cidr0_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t prmbl_0               : 8;  /**< [  7:  0](RO) Preamble. Returns 0x0D. */
#else /* Word 0 - Little Endian */
        uint32_t prmbl_0               : 8;  /**< [  7:  0](RO) Preamble. Returns 0x0D. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_cidr0_s cn; */
};
typedef union cavm_cst_ccmplx_rom_cidr0 cavm_cst_ccmplx_rom_cidr0_t;

#define CAVM_CST_CCMPLX_ROM_CIDR0 CAVM_CST_CCMPLX_ROM_CIDR0_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_CIDR0_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_CIDR0_FUNC(void)
{
    return 0x87a000000ff0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_CIDR0 cavm_cst_ccmplx_rom_cidr0_t
#define bustype_CAVM_CST_CCMPLX_ROM_CIDR0 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_CIDR0 "CST_CCMPLX_ROM_CIDR0"
#define busnum_CAVM_CST_CCMPLX_ROM_CIDR0 0
#define arguments_CAVM_CST_CCMPLX_ROM_CIDR0 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_cidr1
 *
 * CST Ccmplx Rom Cidr1 Register
 * The CIDR1 register is part of the set of component identification registers.
 */
union cavm_cst_ccmplx_rom_cidr1
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_cidr1_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t class_f               : 4;  /**< [  7:  4](RO) Component class. Returns 0x9, indicating this is a CoreSight component. */
        uint32_t prmbl_1               : 4;  /**< [  3:  0](RO) Preamble. Returns 0x0. */
#else /* Word 0 - Little Endian */
        uint32_t prmbl_1               : 4;  /**< [  3:  0](RO) Preamble. Returns 0x0. */
        uint32_t class_f               : 4;  /**< [  7:  4](RO) Component class. Returns 0x9, indicating this is a CoreSight component. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_cidr1_s cn; */
};
typedef union cavm_cst_ccmplx_rom_cidr1 cavm_cst_ccmplx_rom_cidr1_t;

#define CAVM_CST_CCMPLX_ROM_CIDR1 CAVM_CST_CCMPLX_ROM_CIDR1_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_CIDR1_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_CIDR1_FUNC(void)
{
    return 0x87a000000ff4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_CIDR1 cavm_cst_ccmplx_rom_cidr1_t
#define bustype_CAVM_CST_CCMPLX_ROM_CIDR1 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_CIDR1 "CST_CCMPLX_ROM_CIDR1"
#define busnum_CAVM_CST_CCMPLX_ROM_CIDR1 0
#define arguments_CAVM_CST_CCMPLX_ROM_CIDR1 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_cidr2
 *
 * CST Ccmplx Rom Cidr2 Register
 * The CIDR2 register is part of the set of component identification registers.
 */
union cavm_cst_ccmplx_rom_cidr2
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_cidr2_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t prmbl_2               : 8;  /**< [  7:  0](RO) Preamble. Returns 0x05. */
#else /* Word 0 - Little Endian */
        uint32_t prmbl_2               : 8;  /**< [  7:  0](RO) Preamble. Returns 0x05. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_cidr2_s cn; */
};
typedef union cavm_cst_ccmplx_rom_cidr2 cavm_cst_ccmplx_rom_cidr2_t;

#define CAVM_CST_CCMPLX_ROM_CIDR2 CAVM_CST_CCMPLX_ROM_CIDR2_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_CIDR2_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_CIDR2_FUNC(void)
{
    return 0x87a000000ff8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_CIDR2 cavm_cst_ccmplx_rom_cidr2_t
#define bustype_CAVM_CST_CCMPLX_ROM_CIDR2 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_CIDR2 "CST_CCMPLX_ROM_CIDR2"
#define busnum_CAVM_CST_CCMPLX_ROM_CIDR2 0
#define arguments_CAVM_CST_CCMPLX_ROM_CIDR2 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_cidr3
 *
 * CST Ccmplx Rom Cidr3 Register
 * The CIDR3 register is part of the set of component identification registers.
 */
union cavm_cst_ccmplx_rom_cidr3
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_cidr3_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t prmbl_3               : 8;  /**< [  7:  0](RO) Preamble. Returns 0xB1. */
#else /* Word 0 - Little Endian */
        uint32_t prmbl_3               : 8;  /**< [  7:  0](RO) Preamble. Returns 0xB1. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_cidr3_s cn; */
};
typedef union cavm_cst_ccmplx_rom_cidr3 cavm_cst_ccmplx_rom_cidr3_t;

#define CAVM_CST_CCMPLX_ROM_CIDR3 CAVM_CST_CCMPLX_ROM_CIDR3_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_CIDR3_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_CIDR3_FUNC(void)
{
    return 0x87a000000ffcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_CIDR3 cavm_cst_ccmplx_rom_cidr3_t
#define bustype_CAVM_CST_CCMPLX_ROM_CIDR3 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_CIDR3 "CST_CCMPLX_ROM_CIDR3"
#define busnum_CAVM_CST_CCMPLX_ROM_CIDR3 0
#define arguments_CAVM_CST_CCMPLX_ROM_CIDR3 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_devarch
 *
 * CST Ccmplx Rom Devarch Register
 * Identifies the architect and architecture of a CoreSight component. The architect
 * might differ from the designer of a component, for example Arm defines the
 * architecture but another company designs and implements the component.
 */
union cavm_cst_ccmplx_rom_devarch
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_devarch_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t architect             : 11; /**< [ 31: 21](RO) Returns 0x23b, denoting Arm as architect of the component. */
        uint32_t present               : 1;  /**< [ 20: 20](RO) Returns 1, indicating that the DEVARCH register is present. */
        uint32_t revision              : 4;  /**< [ 19: 16](RO) Architecture revision. Returns the revision of the architecture that the ARCHID field specifies. */
        uint32_t archid                : 16; /**< [ 15:  0](RO) Architecture ID. Returns 0x0af7, identifying ROM Table Architecture v0. */
#else /* Word 0 - Little Endian */
        uint32_t archid                : 16; /**< [ 15:  0](RO) Architecture ID. Returns 0x0af7, identifying ROM Table Architecture v0. */
        uint32_t revision              : 4;  /**< [ 19: 16](RO) Architecture revision. Returns the revision of the architecture that the ARCHID field specifies. */
        uint32_t present               : 1;  /**< [ 20: 20](RO) Returns 1, indicating that the DEVARCH register is present. */
        uint32_t architect             : 11; /**< [ 31: 21](RO) Returns 0x23b, denoting Arm as architect of the component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_devarch_s cn; */
};
typedef union cavm_cst_ccmplx_rom_devarch cavm_cst_ccmplx_rom_devarch_t;

#define CAVM_CST_CCMPLX_ROM_DEVARCH CAVM_CST_CCMPLX_ROM_DEVARCH_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_DEVARCH_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_DEVARCH_FUNC(void)
{
    return 0x87a000000fbcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_DEVARCH cavm_cst_ccmplx_rom_devarch_t
#define bustype_CAVM_CST_CCMPLX_ROM_DEVARCH CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_DEVARCH "CST_CCMPLX_ROM_DEVARCH"
#define busnum_CAVM_CST_CCMPLX_ROM_DEVARCH 0
#define arguments_CAVM_CST_CCMPLX_ROM_DEVARCH -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_devid
 *
 * CST Ccmplx Rom Devid Register
 * This register is IMPLEMENTATION DEFINED for each Part Number and Designer. The
 * register indicates the capabilities of the component.
 */
union cavm_cst_ccmplx_rom_devid
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_devid_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_6_31         : 26;
        uint32_t prr                   : 1;  /**< [  5:  5](RO) Indicates that power request functionality is included. Set by the GPR_PRESENT parameter. */
        uint32_t sysmem                : 1;  /**< [  4:  4](RO) Indicates whether system memory is present on the bus. Set by the SYSMEM parameter. */
        uint32_t reserved_3            : 1;
        uint32_t format                : 3;  /**< [  2:  0](RO) Indicates that this is a 32-bit ROM table. */
#else /* Word 0 - Little Endian */
        uint32_t format                : 3;  /**< [  2:  0](RO) Indicates that this is a 32-bit ROM table. */
        uint32_t reserved_3            : 1;
        uint32_t sysmem                : 1;  /**< [  4:  4](RO) Indicates whether system memory is present on the bus. Set by the SYSMEM parameter. */
        uint32_t prr                   : 1;  /**< [  5:  5](RO) Indicates that power request functionality is included. Set by the GPR_PRESENT parameter. */
        uint32_t reserved_6_31         : 26;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_devid_s cn; */
};
typedef union cavm_cst_ccmplx_rom_devid cavm_cst_ccmplx_rom_devid_t;

#define CAVM_CST_CCMPLX_ROM_DEVID CAVM_CST_CCMPLX_ROM_DEVID_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_DEVID_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_DEVID_FUNC(void)
{
    return 0x87a000000fc8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_DEVID cavm_cst_ccmplx_rom_devid_t
#define bustype_CAVM_CST_CCMPLX_ROM_DEVID CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_DEVID "CST_CCMPLX_ROM_DEVID"
#define busnum_CAVM_CST_CCMPLX_ROM_DEVID 0
#define arguments_CAVM_CST_CCMPLX_ROM_DEVID -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_pidr0
 *
 * CST Ccmplx Rom Pidr0 Register
 * The PIDR0 register is part of the set of peripheral identification registers.
 */
union cavm_cst_ccmplx_rom_pidr0
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_pidr0_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t part_0                : 8;  /**< [  7:  0](RO) Part number, bits[7:0]. Set by the configuration inputs part_number[7:0] */
#else /* Word 0 - Little Endian */
        uint32_t part_0                : 8;  /**< [  7:  0](RO) Part number, bits[7:0]. Set by the configuration inputs part_number[7:0] */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_pidr0_s cn; */
};
typedef union cavm_cst_ccmplx_rom_pidr0 cavm_cst_ccmplx_rom_pidr0_t;

#define CAVM_CST_CCMPLX_ROM_PIDR0 CAVM_CST_CCMPLX_ROM_PIDR0_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR0_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR0_FUNC(void)
{
    return 0x87a000000fe0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_PIDR0 cavm_cst_ccmplx_rom_pidr0_t
#define bustype_CAVM_CST_CCMPLX_ROM_PIDR0 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_PIDR0 "CST_CCMPLX_ROM_PIDR0"
#define busnum_CAVM_CST_CCMPLX_ROM_PIDR0 0
#define arguments_CAVM_CST_CCMPLX_ROM_PIDR0 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_pidr1
 *
 * CST Ccmplx Rom Pidr1 Register
 * The PIDR1 register is part of the set of peripheral identification registers.
 */
union cavm_cst_ccmplx_rom_pidr1
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_pidr1_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t des_0                 : 4;  /**< [  7:  4](RO) JEP106 identification code, bits[3:0]. Set by the configuration inputs
                                                                 jep106_id[3:0]. Together, with PIDR4.DES_2 and PIDR2.DES_1, they indicate the
                                                                 designer of the component and not the implementer, except where the two are the
                                                                 same. */
        uint32_t part_1                : 4;  /**< [  3:  0](RO) Part number, bits[11:8]. Set by the configuration inputs part_number[11:8]. */
#else /* Word 0 - Little Endian */
        uint32_t part_1                : 4;  /**< [  3:  0](RO) Part number, bits[11:8]. Set by the configuration inputs part_number[11:8]. */
        uint32_t des_0                 : 4;  /**< [  7:  4](RO) JEP106 identification code, bits[3:0]. Set by the configuration inputs
                                                                 jep106_id[3:0]. Together, with PIDR4.DES_2 and PIDR2.DES_1, they indicate the
                                                                 designer of the component and not the implementer, except where the two are the
                                                                 same. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_pidr1_s cn; */
};
typedef union cavm_cst_ccmplx_rom_pidr1 cavm_cst_ccmplx_rom_pidr1_t;

#define CAVM_CST_CCMPLX_ROM_PIDR1 CAVM_CST_CCMPLX_ROM_PIDR1_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR1_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR1_FUNC(void)
{
    return 0x87a000000fe4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_PIDR1 cavm_cst_ccmplx_rom_pidr1_t
#define bustype_CAVM_CST_CCMPLX_ROM_PIDR1 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_PIDR1 "CST_CCMPLX_ROM_PIDR1"
#define busnum_CAVM_CST_CCMPLX_ROM_PIDR1 0
#define arguments_CAVM_CST_CCMPLX_ROM_PIDR1 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_pidr2
 *
 * CST Ccmplx Rom Pidr2 Register
 * The PIDR2 register is part of the set of peripheral identification registers.
 */
union cavm_cst_ccmplx_rom_pidr2
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_pidr2_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t revision              : 4;  /**< [  7:  4](RO) Revision. Set by the configuration inputs revision[3:0]. */
        uint32_t jedec                 : 1;  /**< [  3:  3](RO) 1 - Always set. Indicates that a JEDEC assigned value is used. */
        uint32_t des_1                 : 3;  /**< [  2:  0](RO) JEP106 identification code, bits[6:4]. Set by the configuration inputs
                                                                 jep106_id[6:4]. Together, with PIDR4.DES_2 and PIDR1.DES_0, they indicate the
                                                                 designer of the component and not the implementer, except where the two are the
                                                                 same. */
#else /* Word 0 - Little Endian */
        uint32_t des_1                 : 3;  /**< [  2:  0](RO) JEP106 identification code, bits[6:4]. Set by the configuration inputs
                                                                 jep106_id[6:4]. Together, with PIDR4.DES_2 and PIDR1.DES_0, they indicate the
                                                                 designer of the component and not the implementer, except where the two are the
                                                                 same. */
        uint32_t jedec                 : 1;  /**< [  3:  3](RO) 1 - Always set. Indicates that a JEDEC assigned value is used. */
        uint32_t revision              : 4;  /**< [  7:  4](RO) Revision. Set by the configuration inputs revision[3:0]. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_pidr2_s cn; */
};
typedef union cavm_cst_ccmplx_rom_pidr2 cavm_cst_ccmplx_rom_pidr2_t;

#define CAVM_CST_CCMPLX_ROM_PIDR2 CAVM_CST_CCMPLX_ROM_PIDR2_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR2_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR2_FUNC(void)
{
    return 0x87a000000fe8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_PIDR2 cavm_cst_ccmplx_rom_pidr2_t
#define bustype_CAVM_CST_CCMPLX_ROM_PIDR2 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_PIDR2 "CST_CCMPLX_ROM_PIDR2"
#define busnum_CAVM_CST_CCMPLX_ROM_PIDR2 0
#define arguments_CAVM_CST_CCMPLX_ROM_PIDR2 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_pidr3
 *
 * CST Ccmplx Rom Pidr3 Register
 * The PIDR3 register is part of the set of peripheral identification registers.
 */
union cavm_cst_ccmplx_rom_pidr3
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_pidr3_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t revand                : 4;  /**< [  7:  4](RO) This field indicates minor errata fixes specific to this design, for example
                                                                 metal fixes after implementation. In most cases this field is 0x0. */
        uint32_t cmod                  : 4;  /**< [  3:  0](RO) Customer Modified. Where the component is reusable IP, this value indicates if
                                                                 the customer has modified the behavior of the component. In most cases this
                                                                 field is 0x0. */
#else /* Word 0 - Little Endian */
        uint32_t cmod                  : 4;  /**< [  3:  0](RO) Customer Modified. Where the component is reusable IP, this value indicates if
                                                                 the customer has modified the behavior of the component. In most cases this
                                                                 field is 0x0. */
        uint32_t revand                : 4;  /**< [  7:  4](RO) This field indicates minor errata fixes specific to this design, for example
                                                                 metal fixes after implementation. In most cases this field is 0x0. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_pidr3_s cn; */
};
typedef union cavm_cst_ccmplx_rom_pidr3 cavm_cst_ccmplx_rom_pidr3_t;

#define CAVM_CST_CCMPLX_ROM_PIDR3 CAVM_CST_CCMPLX_ROM_PIDR3_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR3_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR3_FUNC(void)
{
    return 0x87a000000fecll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_PIDR3 cavm_cst_ccmplx_rom_pidr3_t
#define bustype_CAVM_CST_CCMPLX_ROM_PIDR3 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_PIDR3 "CST_CCMPLX_ROM_PIDR3"
#define busnum_CAVM_CST_CCMPLX_ROM_PIDR3 0
#define arguments_CAVM_CST_CCMPLX_ROM_PIDR3 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_pidr4
 *
 * CST Ccmplx Rom Pidr4 Register
 * The PIDR4 register is part of the set of peripheral identification registers.
 */
union cavm_cst_ccmplx_rom_pidr4
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_pidr4_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t size                  : 4;  /**< [  7:  4](RO) Indicates the memory size that is used by this component. Returns 0 indicating
                                                                 that the component uses an UNKNOWN number of 4KB blocks. Using the SIZE field to
                                                                 indicate the size of the component is deprecated. */
        uint32_t des_2                 : 4;  /**< [  3:  0](RO) JEP106 continuation code. Together, with PIDR2.DES_1 and PIDR1.DES_0, they
                                                                 indicate the designer of the component and not the implementer, except where the
                                                                 two are the same. */
#else /* Word 0 - Little Endian */
        uint32_t des_2                 : 4;  /**< [  3:  0](RO) JEP106 continuation code. Together, with PIDR2.DES_1 and PIDR1.DES_0, they
                                                                 indicate the designer of the component and not the implementer, except where the
                                                                 two are the same. */
        uint32_t size                  : 4;  /**< [  7:  4](RO) Indicates the memory size that is used by this component. Returns 0 indicating
                                                                 that the component uses an UNKNOWN number of 4KB blocks. Using the SIZE field to
                                                                 indicate the size of the component is deprecated. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_pidr4_s cn; */
};
typedef union cavm_cst_ccmplx_rom_pidr4 cavm_cst_ccmplx_rom_pidr4_t;

#define CAVM_CST_CCMPLX_ROM_PIDR4 CAVM_CST_CCMPLX_ROM_PIDR4_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR4_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR4_FUNC(void)
{
    return 0x87a000000fd0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_PIDR4 cavm_cst_ccmplx_rom_pidr4_t
#define bustype_CAVM_CST_CCMPLX_ROM_PIDR4 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_PIDR4 "CST_CCMPLX_ROM_PIDR4"
#define busnum_CAVM_CST_CCMPLX_ROM_PIDR4 0
#define arguments_CAVM_CST_CCMPLX_ROM_PIDR4 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_pidr5
 *
 * CST Ccmplx Rom Pidr5 Register
 * The PIDR5 register is part of the set of peripheral identification registers.
 */
union cavm_cst_ccmplx_rom_pidr5
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_pidr5_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t pidr5                 : 8;  /**< [  7:  0](RO) Reserved. */
#else /* Word 0 - Little Endian */
        uint32_t pidr5                 : 8;  /**< [  7:  0](RO) Reserved. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_pidr5_s cn; */
};
typedef union cavm_cst_ccmplx_rom_pidr5 cavm_cst_ccmplx_rom_pidr5_t;

#define CAVM_CST_CCMPLX_ROM_PIDR5 CAVM_CST_CCMPLX_ROM_PIDR5_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR5_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR5_FUNC(void)
{
    return 0x87a000000fd4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_PIDR5 cavm_cst_ccmplx_rom_pidr5_t
#define bustype_CAVM_CST_CCMPLX_ROM_PIDR5 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_PIDR5 "CST_CCMPLX_ROM_PIDR5"
#define busnum_CAVM_CST_CCMPLX_ROM_PIDR5 0
#define arguments_CAVM_CST_CCMPLX_ROM_PIDR5 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_pidr6
 *
 * CST Ccmplx Rom Pidr6 Register
 * The PIDR6 register is part of the set of peripheral identification registers.
 */
union cavm_cst_ccmplx_rom_pidr6
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_pidr6_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t pidr6                 : 8;  /**< [  7:  0](RO) Reserved. */
#else /* Word 0 - Little Endian */
        uint32_t pidr6                 : 8;  /**< [  7:  0](RO) Reserved. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_pidr6_s cn; */
};
typedef union cavm_cst_ccmplx_rom_pidr6 cavm_cst_ccmplx_rom_pidr6_t;

#define CAVM_CST_CCMPLX_ROM_PIDR6 CAVM_CST_CCMPLX_ROM_PIDR6_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR6_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR6_FUNC(void)
{
    return 0x87a000000fd8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_PIDR6 cavm_cst_ccmplx_rom_pidr6_t
#define bustype_CAVM_CST_CCMPLX_ROM_PIDR6 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_PIDR6 "CST_CCMPLX_ROM_PIDR6"
#define busnum_CAVM_CST_CCMPLX_ROM_PIDR6 0
#define arguments_CAVM_CST_CCMPLX_ROM_PIDR6 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_pidr7
 *
 * CST Ccmplx Rom Pidr7 Register
 * The PIDR7 register is part of the set of peripheral identification registers.
 */
union cavm_cst_ccmplx_rom_pidr7
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_pidr7_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t reserved_8_31         : 24;
        uint32_t pidr7                 : 8;  /**< [  7:  0](RO) Reserved. */
#else /* Word 0 - Little Endian */
        uint32_t pidr7                 : 8;  /**< [  7:  0](RO) Reserved. */
        uint32_t reserved_8_31         : 24;
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_pidr7_s cn; */
};
typedef union cavm_cst_ccmplx_rom_pidr7 cavm_cst_ccmplx_rom_pidr7_t;

#define CAVM_CST_CCMPLX_ROM_PIDR7 CAVM_CST_CCMPLX_ROM_PIDR7_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR7_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_PIDR7_FUNC(void)
{
    return 0x87a000000fdcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_PIDR7 cavm_cst_ccmplx_rom_pidr7_t
#define bustype_CAVM_CST_CCMPLX_ROM_PIDR7 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_PIDR7 "CST_CCMPLX_ROM_PIDR7"
#define busnum_CAVM_CST_CCMPLX_ROM_PIDR7 0
#define arguments_CAVM_CST_CCMPLX_ROM_PIDR7 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry0
 *
 * CST Ccmplx Rom Romentry0 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry0
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry0_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry0_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry0 cavm_cst_ccmplx_rom_romentry0_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY0 CAVM_CST_CCMPLX_ROM_ROMENTRY0_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY0_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY0_FUNC(void)
{
    return 0x87a000000000ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY0 cavm_cst_ccmplx_rom_romentry0_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY0 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY0 "CST_CCMPLX_ROM_ROMENTRY0"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY0 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY0 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry1
 *
 * CST Ccmplx Rom Romentry1 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry1
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry1_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry1_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry1 cavm_cst_ccmplx_rom_romentry1_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY1 CAVM_CST_CCMPLX_ROM_ROMENTRY1_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY1_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY1_FUNC(void)
{
    return 0x87a000000004ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY1 cavm_cst_ccmplx_rom_romentry1_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY1 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY1 "CST_CCMPLX_ROM_ROMENTRY1"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY1 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY1 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry10
 *
 * CST Ccmplx Rom Romentry10 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry10
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry10_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry10_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry10 cavm_cst_ccmplx_rom_romentry10_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY10 CAVM_CST_CCMPLX_ROM_ROMENTRY10_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY10_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY10_FUNC(void)
{
    return 0x87a000000028ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY10 cavm_cst_ccmplx_rom_romentry10_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY10 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY10 "CST_CCMPLX_ROM_ROMENTRY10"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY10 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY10 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry100
 *
 * CST Ccmplx Rom Romentry100 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry100
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry100_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry100_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry100 cavm_cst_ccmplx_rom_romentry100_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY100 CAVM_CST_CCMPLX_ROM_ROMENTRY100_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY100_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY100_FUNC(void)
{
    return 0x87a000000190ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY100 cavm_cst_ccmplx_rom_romentry100_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY100 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY100 "CST_CCMPLX_ROM_ROMENTRY100"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY100 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY100 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry101
 *
 * CST Ccmplx Rom Romentry101 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry101
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry101_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry101_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry101 cavm_cst_ccmplx_rom_romentry101_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY101 CAVM_CST_CCMPLX_ROM_ROMENTRY101_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY101_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY101_FUNC(void)
{
    return 0x87a000000194ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY101 cavm_cst_ccmplx_rom_romentry101_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY101 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY101 "CST_CCMPLX_ROM_ROMENTRY101"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY101 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY101 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry102
 *
 * CST Ccmplx Rom Romentry102 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry102
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry102_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry102_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry102 cavm_cst_ccmplx_rom_romentry102_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY102 CAVM_CST_CCMPLX_ROM_ROMENTRY102_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY102_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY102_FUNC(void)
{
    return 0x87a000000198ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY102 cavm_cst_ccmplx_rom_romentry102_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY102 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY102 "CST_CCMPLX_ROM_ROMENTRY102"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY102 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY102 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry103
 *
 * CST Ccmplx Rom Romentry103 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry103
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry103_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry103_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry103 cavm_cst_ccmplx_rom_romentry103_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY103 CAVM_CST_CCMPLX_ROM_ROMENTRY103_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY103_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY103_FUNC(void)
{
    return 0x87a00000019cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY103 cavm_cst_ccmplx_rom_romentry103_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY103 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY103 "CST_CCMPLX_ROM_ROMENTRY103"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY103 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY103 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry104
 *
 * CST Ccmplx Rom Romentry104 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry104
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry104_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry104_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry104 cavm_cst_ccmplx_rom_romentry104_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY104 CAVM_CST_CCMPLX_ROM_ROMENTRY104_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY104_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY104_FUNC(void)
{
    return 0x87a0000001a0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY104 cavm_cst_ccmplx_rom_romentry104_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY104 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY104 "CST_CCMPLX_ROM_ROMENTRY104"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY104 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY104 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry105
 *
 * CST Ccmplx Rom Romentry105 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry105
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry105_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry105_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry105 cavm_cst_ccmplx_rom_romentry105_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY105 CAVM_CST_CCMPLX_ROM_ROMENTRY105_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY105_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY105_FUNC(void)
{
    return 0x87a0000001a4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY105 cavm_cst_ccmplx_rom_romentry105_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY105 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY105 "CST_CCMPLX_ROM_ROMENTRY105"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY105 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY105 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry106
 *
 * CST Ccmplx Rom Romentry106 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry106
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry106_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry106_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry106 cavm_cst_ccmplx_rom_romentry106_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY106 CAVM_CST_CCMPLX_ROM_ROMENTRY106_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY106_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY106_FUNC(void)
{
    return 0x87a0000001a8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY106 cavm_cst_ccmplx_rom_romentry106_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY106 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY106 "CST_CCMPLX_ROM_ROMENTRY106"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY106 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY106 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry107
 *
 * CST Ccmplx Rom Romentry107 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry107
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry107_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry107_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry107 cavm_cst_ccmplx_rom_romentry107_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY107 CAVM_CST_CCMPLX_ROM_ROMENTRY107_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY107_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY107_FUNC(void)
{
    return 0x87a0000001acll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY107 cavm_cst_ccmplx_rom_romentry107_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY107 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY107 "CST_CCMPLX_ROM_ROMENTRY107"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY107 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY107 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry108
 *
 * CST Ccmplx Rom Romentry108 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry108
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry108_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry108_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry108 cavm_cst_ccmplx_rom_romentry108_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY108 CAVM_CST_CCMPLX_ROM_ROMENTRY108_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY108_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY108_FUNC(void)
{
    return 0x87a0000001b0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY108 cavm_cst_ccmplx_rom_romentry108_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY108 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY108 "CST_CCMPLX_ROM_ROMENTRY108"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY108 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY108 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry109
 *
 * CST Ccmplx Rom Romentry109 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry109
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry109_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry109_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry109 cavm_cst_ccmplx_rom_romentry109_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY109 CAVM_CST_CCMPLX_ROM_ROMENTRY109_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY109_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY109_FUNC(void)
{
    return 0x87a0000001b4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY109 cavm_cst_ccmplx_rom_romentry109_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY109 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY109 "CST_CCMPLX_ROM_ROMENTRY109"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY109 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY109 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry11
 *
 * CST Ccmplx Rom Romentry11 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry11
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry11_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry11_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry11 cavm_cst_ccmplx_rom_romentry11_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY11 CAVM_CST_CCMPLX_ROM_ROMENTRY11_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY11_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY11_FUNC(void)
{
    return 0x87a00000002cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY11 cavm_cst_ccmplx_rom_romentry11_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY11 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY11 "CST_CCMPLX_ROM_ROMENTRY11"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY11 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY11 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry110
 *
 * CST Ccmplx Rom Romentry110 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry110
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry110_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry110_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry110 cavm_cst_ccmplx_rom_romentry110_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY110 CAVM_CST_CCMPLX_ROM_ROMENTRY110_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY110_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY110_FUNC(void)
{
    return 0x87a0000001b8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY110 cavm_cst_ccmplx_rom_romentry110_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY110 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY110 "CST_CCMPLX_ROM_ROMENTRY110"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY110 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY110 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry111
 *
 * CST Ccmplx Rom Romentry111 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry111
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry111_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry111_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry111 cavm_cst_ccmplx_rom_romentry111_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY111 CAVM_CST_CCMPLX_ROM_ROMENTRY111_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY111_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY111_FUNC(void)
{
    return 0x87a0000001bcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY111 cavm_cst_ccmplx_rom_romentry111_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY111 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY111 "CST_CCMPLX_ROM_ROMENTRY111"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY111 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY111 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry112
 *
 * CST Ccmplx Rom Romentry112 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry112
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry112_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry112_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry112 cavm_cst_ccmplx_rom_romentry112_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY112 CAVM_CST_CCMPLX_ROM_ROMENTRY112_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY112_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY112_FUNC(void)
{
    return 0x87a0000001c0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY112 cavm_cst_ccmplx_rom_romentry112_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY112 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY112 "CST_CCMPLX_ROM_ROMENTRY112"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY112 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY112 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry113
 *
 * CST Ccmplx Rom Romentry113 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry113
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry113_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry113_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry113 cavm_cst_ccmplx_rom_romentry113_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY113 CAVM_CST_CCMPLX_ROM_ROMENTRY113_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY113_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY113_FUNC(void)
{
    return 0x87a0000001c4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY113 cavm_cst_ccmplx_rom_romentry113_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY113 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY113 "CST_CCMPLX_ROM_ROMENTRY113"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY113 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY113 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry114
 *
 * CST Ccmplx Rom Romentry114 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry114
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry114_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry114_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry114 cavm_cst_ccmplx_rom_romentry114_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY114 CAVM_CST_CCMPLX_ROM_ROMENTRY114_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY114_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY114_FUNC(void)
{
    return 0x87a0000001c8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY114 cavm_cst_ccmplx_rom_romentry114_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY114 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY114 "CST_CCMPLX_ROM_ROMENTRY114"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY114 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY114 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry115
 *
 * CST Ccmplx Rom Romentry115 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry115
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry115_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry115_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry115 cavm_cst_ccmplx_rom_romentry115_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY115 CAVM_CST_CCMPLX_ROM_ROMENTRY115_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY115_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY115_FUNC(void)
{
    return 0x87a0000001ccll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY115 cavm_cst_ccmplx_rom_romentry115_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY115 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY115 "CST_CCMPLX_ROM_ROMENTRY115"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY115 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY115 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry116
 *
 * CST Ccmplx Rom Romentry116 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry116
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry116_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry116_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry116 cavm_cst_ccmplx_rom_romentry116_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY116 CAVM_CST_CCMPLX_ROM_ROMENTRY116_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY116_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY116_FUNC(void)
{
    return 0x87a0000001d0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY116 cavm_cst_ccmplx_rom_romentry116_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY116 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY116 "CST_CCMPLX_ROM_ROMENTRY116"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY116 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY116 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry117
 *
 * CST Ccmplx Rom Romentry117 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry117
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry117_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry117_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry117 cavm_cst_ccmplx_rom_romentry117_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY117 CAVM_CST_CCMPLX_ROM_ROMENTRY117_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY117_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY117_FUNC(void)
{
    return 0x87a0000001d4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY117 cavm_cst_ccmplx_rom_romentry117_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY117 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY117 "CST_CCMPLX_ROM_ROMENTRY117"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY117 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY117 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry118
 *
 * CST Ccmplx Rom Romentry118 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry118
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry118_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry118_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry118 cavm_cst_ccmplx_rom_romentry118_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY118 CAVM_CST_CCMPLX_ROM_ROMENTRY118_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY118_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY118_FUNC(void)
{
    return 0x87a0000001d8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY118 cavm_cst_ccmplx_rom_romentry118_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY118 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY118 "CST_CCMPLX_ROM_ROMENTRY118"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY118 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY118 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry119
 *
 * CST Ccmplx Rom Romentry119 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry119
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry119_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry119_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry119 cavm_cst_ccmplx_rom_romentry119_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY119 CAVM_CST_CCMPLX_ROM_ROMENTRY119_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY119_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY119_FUNC(void)
{
    return 0x87a0000001dcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY119 cavm_cst_ccmplx_rom_romentry119_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY119 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY119 "CST_CCMPLX_ROM_ROMENTRY119"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY119 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY119 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry12
 *
 * CST Ccmplx Rom Romentry12 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry12
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry12_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry12_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry12 cavm_cst_ccmplx_rom_romentry12_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY12 CAVM_CST_CCMPLX_ROM_ROMENTRY12_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY12_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY12_FUNC(void)
{
    return 0x87a000000030ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY12 cavm_cst_ccmplx_rom_romentry12_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY12 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY12 "CST_CCMPLX_ROM_ROMENTRY12"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY12 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY12 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry120
 *
 * CST Ccmplx Rom Romentry120 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry120
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry120_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry120_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry120 cavm_cst_ccmplx_rom_romentry120_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY120 CAVM_CST_CCMPLX_ROM_ROMENTRY120_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY120_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY120_FUNC(void)
{
    return 0x87a0000001e0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY120 cavm_cst_ccmplx_rom_romentry120_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY120 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY120 "CST_CCMPLX_ROM_ROMENTRY120"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY120 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY120 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry121
 *
 * CST Ccmplx Rom Romentry121 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry121
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry121_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry121_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry121 cavm_cst_ccmplx_rom_romentry121_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY121 CAVM_CST_CCMPLX_ROM_ROMENTRY121_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY121_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY121_FUNC(void)
{
    return 0x87a0000001e4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY121 cavm_cst_ccmplx_rom_romentry121_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY121 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY121 "CST_CCMPLX_ROM_ROMENTRY121"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY121 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY121 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry122
 *
 * CST Ccmplx Rom Romentry122 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry122
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry122_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry122_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry122 cavm_cst_ccmplx_rom_romentry122_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY122 CAVM_CST_CCMPLX_ROM_ROMENTRY122_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY122_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY122_FUNC(void)
{
    return 0x87a0000001e8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY122 cavm_cst_ccmplx_rom_romentry122_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY122 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY122 "CST_CCMPLX_ROM_ROMENTRY122"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY122 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY122 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry123
 *
 * CST Ccmplx Rom Romentry123 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry123
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry123_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry123_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry123 cavm_cst_ccmplx_rom_romentry123_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY123 CAVM_CST_CCMPLX_ROM_ROMENTRY123_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY123_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY123_FUNC(void)
{
    return 0x87a0000001ecll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY123 cavm_cst_ccmplx_rom_romentry123_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY123 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY123 "CST_CCMPLX_ROM_ROMENTRY123"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY123 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY123 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry124
 *
 * CST Ccmplx Rom Romentry124 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry124
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry124_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry124_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry124 cavm_cst_ccmplx_rom_romentry124_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY124 CAVM_CST_CCMPLX_ROM_ROMENTRY124_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY124_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY124_FUNC(void)
{
    return 0x87a0000001f0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY124 cavm_cst_ccmplx_rom_romentry124_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY124 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY124 "CST_CCMPLX_ROM_ROMENTRY124"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY124 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY124 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry125
 *
 * CST Ccmplx Rom Romentry125 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry125
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry125_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry125_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry125 cavm_cst_ccmplx_rom_romentry125_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY125 CAVM_CST_CCMPLX_ROM_ROMENTRY125_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY125_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY125_FUNC(void)
{
    return 0x87a0000001f4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY125 cavm_cst_ccmplx_rom_romentry125_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY125 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY125 "CST_CCMPLX_ROM_ROMENTRY125"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY125 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY125 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry126
 *
 * CST Ccmplx Rom Romentry126 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry126
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry126_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry126_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry126 cavm_cst_ccmplx_rom_romentry126_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY126 CAVM_CST_CCMPLX_ROM_ROMENTRY126_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY126_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY126_FUNC(void)
{
    return 0x87a0000001f8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY126 cavm_cst_ccmplx_rom_romentry126_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY126 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY126 "CST_CCMPLX_ROM_ROMENTRY126"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY126 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY126 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry127
 *
 * CST Ccmplx Rom Romentry127 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry127
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry127_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry127_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry127 cavm_cst_ccmplx_rom_romentry127_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY127 CAVM_CST_CCMPLX_ROM_ROMENTRY127_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY127_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY127_FUNC(void)
{
    return 0x87a0000001fcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY127 cavm_cst_ccmplx_rom_romentry127_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY127 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY127 "CST_CCMPLX_ROM_ROMENTRY127"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY127 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY127 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry128
 *
 * CST Ccmplx Rom Romentry128 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry128
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry128_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry128_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry128 cavm_cst_ccmplx_rom_romentry128_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY128 CAVM_CST_CCMPLX_ROM_ROMENTRY128_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY128_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY128_FUNC(void)
{
    return 0x87a000000200ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY128 cavm_cst_ccmplx_rom_romentry128_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY128 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY128 "CST_CCMPLX_ROM_ROMENTRY128"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY128 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY128 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry129
 *
 * CST Ccmplx Rom Romentry129 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry129
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry129_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry129_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry129 cavm_cst_ccmplx_rom_romentry129_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY129 CAVM_CST_CCMPLX_ROM_ROMENTRY129_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY129_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY129_FUNC(void)
{
    return 0x87a000000204ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY129 cavm_cst_ccmplx_rom_romentry129_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY129 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY129 "CST_CCMPLX_ROM_ROMENTRY129"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY129 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY129 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry13
 *
 * CST Ccmplx Rom Romentry13 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry13
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry13_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry13_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry13 cavm_cst_ccmplx_rom_romentry13_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY13 CAVM_CST_CCMPLX_ROM_ROMENTRY13_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY13_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY13_FUNC(void)
{
    return 0x87a000000034ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY13 cavm_cst_ccmplx_rom_romentry13_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY13 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY13 "CST_CCMPLX_ROM_ROMENTRY13"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY13 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY13 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry130
 *
 * CST Ccmplx Rom Romentry130 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry130
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry130_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry130_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry130 cavm_cst_ccmplx_rom_romentry130_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY130 CAVM_CST_CCMPLX_ROM_ROMENTRY130_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY130_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY130_FUNC(void)
{
    return 0x87a000000208ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY130 cavm_cst_ccmplx_rom_romentry130_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY130 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY130 "CST_CCMPLX_ROM_ROMENTRY130"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY130 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY130 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry131
 *
 * CST Ccmplx Rom Romentry131 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry131
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry131_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry131_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry131 cavm_cst_ccmplx_rom_romentry131_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY131 CAVM_CST_CCMPLX_ROM_ROMENTRY131_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY131_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY131_FUNC(void)
{
    return 0x87a00000020cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY131 cavm_cst_ccmplx_rom_romentry131_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY131 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY131 "CST_CCMPLX_ROM_ROMENTRY131"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY131 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY131 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry132
 *
 * CST Ccmplx Rom Romentry132 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry132
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry132_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry132_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry132 cavm_cst_ccmplx_rom_romentry132_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY132 CAVM_CST_CCMPLX_ROM_ROMENTRY132_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY132_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY132_FUNC(void)
{
    return 0x87a000000210ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY132 cavm_cst_ccmplx_rom_romentry132_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY132 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY132 "CST_CCMPLX_ROM_ROMENTRY132"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY132 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY132 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry133
 *
 * CST Ccmplx Rom Romentry133 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry133
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry133_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry133_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry133 cavm_cst_ccmplx_rom_romentry133_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY133 CAVM_CST_CCMPLX_ROM_ROMENTRY133_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY133_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY133_FUNC(void)
{
    return 0x87a000000214ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY133 cavm_cst_ccmplx_rom_romentry133_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY133 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY133 "CST_CCMPLX_ROM_ROMENTRY133"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY133 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY133 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry134
 *
 * CST Ccmplx Rom Romentry134 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry134
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry134_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry134_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry134 cavm_cst_ccmplx_rom_romentry134_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY134 CAVM_CST_CCMPLX_ROM_ROMENTRY134_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY134_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY134_FUNC(void)
{
    return 0x87a000000218ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY134 cavm_cst_ccmplx_rom_romentry134_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY134 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY134 "CST_CCMPLX_ROM_ROMENTRY134"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY134 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY134 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry135
 *
 * CST Ccmplx Rom Romentry135 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry135
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry135_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry135_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry135 cavm_cst_ccmplx_rom_romentry135_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY135 CAVM_CST_CCMPLX_ROM_ROMENTRY135_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY135_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY135_FUNC(void)
{
    return 0x87a00000021cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY135 cavm_cst_ccmplx_rom_romentry135_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY135 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY135 "CST_CCMPLX_ROM_ROMENTRY135"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY135 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY135 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry136
 *
 * CST Ccmplx Rom Romentry136 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry136
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry136_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry136_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry136 cavm_cst_ccmplx_rom_romentry136_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY136 CAVM_CST_CCMPLX_ROM_ROMENTRY136_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY136_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY136_FUNC(void)
{
    return 0x87a000000220ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY136 cavm_cst_ccmplx_rom_romentry136_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY136 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY136 "CST_CCMPLX_ROM_ROMENTRY136"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY136 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY136 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry137
 *
 * CST Ccmplx Rom Romentry137 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry137
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry137_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry137_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry137 cavm_cst_ccmplx_rom_romentry137_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY137 CAVM_CST_CCMPLX_ROM_ROMENTRY137_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY137_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY137_FUNC(void)
{
    return 0x87a000000224ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY137 cavm_cst_ccmplx_rom_romentry137_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY137 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY137 "CST_CCMPLX_ROM_ROMENTRY137"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY137 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY137 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry138
 *
 * CST Ccmplx Rom Romentry138 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry138
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry138_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry138_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry138 cavm_cst_ccmplx_rom_romentry138_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY138 CAVM_CST_CCMPLX_ROM_ROMENTRY138_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY138_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY138_FUNC(void)
{
    return 0x87a000000228ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY138 cavm_cst_ccmplx_rom_romentry138_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY138 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY138 "CST_CCMPLX_ROM_ROMENTRY138"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY138 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY138 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry139
 *
 * CST Ccmplx Rom Romentry139 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry139
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry139_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry139_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry139 cavm_cst_ccmplx_rom_romentry139_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY139 CAVM_CST_CCMPLX_ROM_ROMENTRY139_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY139_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY139_FUNC(void)
{
    return 0x87a00000022cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY139 cavm_cst_ccmplx_rom_romentry139_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY139 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY139 "CST_CCMPLX_ROM_ROMENTRY139"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY139 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY139 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry14
 *
 * CST Ccmplx Rom Romentry14 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry14
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry14_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry14_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry14 cavm_cst_ccmplx_rom_romentry14_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY14 CAVM_CST_CCMPLX_ROM_ROMENTRY14_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY14_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY14_FUNC(void)
{
    return 0x87a000000038ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY14 cavm_cst_ccmplx_rom_romentry14_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY14 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY14 "CST_CCMPLX_ROM_ROMENTRY14"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY14 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY14 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry140
 *
 * CST Ccmplx Rom Romentry140 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry140
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry140_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry140_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry140 cavm_cst_ccmplx_rom_romentry140_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY140 CAVM_CST_CCMPLX_ROM_ROMENTRY140_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY140_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY140_FUNC(void)
{
    return 0x87a000000230ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY140 cavm_cst_ccmplx_rom_romentry140_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY140 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY140 "CST_CCMPLX_ROM_ROMENTRY140"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY140 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY140 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry141
 *
 * CST Ccmplx Rom Romentry141 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry141
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry141_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry141_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry141 cavm_cst_ccmplx_rom_romentry141_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY141 CAVM_CST_CCMPLX_ROM_ROMENTRY141_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY141_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY141_FUNC(void)
{
    return 0x87a000000234ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY141 cavm_cst_ccmplx_rom_romentry141_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY141 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY141 "CST_CCMPLX_ROM_ROMENTRY141"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY141 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY141 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry142
 *
 * CST Ccmplx Rom Romentry142 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry142
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry142_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry142_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry142 cavm_cst_ccmplx_rom_romentry142_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY142 CAVM_CST_CCMPLX_ROM_ROMENTRY142_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY142_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY142_FUNC(void)
{
    return 0x87a000000238ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY142 cavm_cst_ccmplx_rom_romentry142_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY142 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY142 "CST_CCMPLX_ROM_ROMENTRY142"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY142 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY142 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry143
 *
 * CST Ccmplx Rom Romentry143 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry143
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry143_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry143_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry143 cavm_cst_ccmplx_rom_romentry143_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY143 CAVM_CST_CCMPLX_ROM_ROMENTRY143_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY143_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY143_FUNC(void)
{
    return 0x87a00000023cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY143 cavm_cst_ccmplx_rom_romentry143_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY143 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY143 "CST_CCMPLX_ROM_ROMENTRY143"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY143 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY143 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry144
 *
 * CST Ccmplx Rom Romentry144 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry144
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry144_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry144_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry144 cavm_cst_ccmplx_rom_romentry144_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY144 CAVM_CST_CCMPLX_ROM_ROMENTRY144_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY144_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY144_FUNC(void)
{
    return 0x87a000000240ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY144 cavm_cst_ccmplx_rom_romentry144_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY144 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY144 "CST_CCMPLX_ROM_ROMENTRY144"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY144 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY144 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry145
 *
 * CST Ccmplx Rom Romentry145 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry145
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry145_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry145_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry145 cavm_cst_ccmplx_rom_romentry145_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY145 CAVM_CST_CCMPLX_ROM_ROMENTRY145_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY145_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY145_FUNC(void)
{
    return 0x87a000000244ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY145 cavm_cst_ccmplx_rom_romentry145_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY145 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY145 "CST_CCMPLX_ROM_ROMENTRY145"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY145 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY145 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry146
 *
 * CST Ccmplx Rom Romentry146 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry146
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry146_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry146_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry146 cavm_cst_ccmplx_rom_romentry146_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY146 CAVM_CST_CCMPLX_ROM_ROMENTRY146_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY146_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY146_FUNC(void)
{
    return 0x87a000000248ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY146 cavm_cst_ccmplx_rom_romentry146_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY146 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY146 "CST_CCMPLX_ROM_ROMENTRY146"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY146 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY146 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry147
 *
 * CST Ccmplx Rom Romentry147 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry147
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry147_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry147_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry147 cavm_cst_ccmplx_rom_romentry147_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY147 CAVM_CST_CCMPLX_ROM_ROMENTRY147_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY147_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY147_FUNC(void)
{
    return 0x87a00000024cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY147 cavm_cst_ccmplx_rom_romentry147_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY147 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY147 "CST_CCMPLX_ROM_ROMENTRY147"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY147 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY147 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry148
 *
 * CST Ccmplx Rom Romentry148 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry148
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry148_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry148_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry148 cavm_cst_ccmplx_rom_romentry148_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY148 CAVM_CST_CCMPLX_ROM_ROMENTRY148_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY148_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY148_FUNC(void)
{
    return 0x87a000000250ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY148 cavm_cst_ccmplx_rom_romentry148_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY148 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY148 "CST_CCMPLX_ROM_ROMENTRY148"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY148 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY148 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry149
 *
 * CST Ccmplx Rom Romentry149 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry149
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry149_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry149_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry149 cavm_cst_ccmplx_rom_romentry149_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY149 CAVM_CST_CCMPLX_ROM_ROMENTRY149_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY149_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY149_FUNC(void)
{
    return 0x87a000000254ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY149 cavm_cst_ccmplx_rom_romentry149_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY149 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY149 "CST_CCMPLX_ROM_ROMENTRY149"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY149 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY149 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry15
 *
 * CST Ccmplx Rom Romentry15 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry15
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry15_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry15_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry15 cavm_cst_ccmplx_rom_romentry15_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY15 CAVM_CST_CCMPLX_ROM_ROMENTRY15_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY15_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY15_FUNC(void)
{
    return 0x87a00000003cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY15 cavm_cst_ccmplx_rom_romentry15_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY15 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY15 "CST_CCMPLX_ROM_ROMENTRY15"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY15 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY15 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry150
 *
 * CST Ccmplx Rom Romentry150 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry150
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry150_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry150_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry150 cavm_cst_ccmplx_rom_romentry150_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY150 CAVM_CST_CCMPLX_ROM_ROMENTRY150_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY150_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY150_FUNC(void)
{
    return 0x87a000000258ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY150 cavm_cst_ccmplx_rom_romentry150_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY150 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY150 "CST_CCMPLX_ROM_ROMENTRY150"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY150 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY150 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry151
 *
 * CST Ccmplx Rom Romentry151 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry151
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry151_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry151_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry151 cavm_cst_ccmplx_rom_romentry151_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY151 CAVM_CST_CCMPLX_ROM_ROMENTRY151_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY151_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY151_FUNC(void)
{
    return 0x87a00000025cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY151 cavm_cst_ccmplx_rom_romentry151_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY151 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY151 "CST_CCMPLX_ROM_ROMENTRY151"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY151 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY151 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry152
 *
 * CST Ccmplx Rom Romentry152 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry152
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry152_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry152_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry152 cavm_cst_ccmplx_rom_romentry152_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY152 CAVM_CST_CCMPLX_ROM_ROMENTRY152_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY152_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY152_FUNC(void)
{
    return 0x87a000000260ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY152 cavm_cst_ccmplx_rom_romentry152_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY152 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY152 "CST_CCMPLX_ROM_ROMENTRY152"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY152 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY152 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry153
 *
 * CST Ccmplx Rom Romentry153 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry153
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry153_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry153_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry153 cavm_cst_ccmplx_rom_romentry153_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY153 CAVM_CST_CCMPLX_ROM_ROMENTRY153_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY153_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY153_FUNC(void)
{
    return 0x87a000000264ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY153 cavm_cst_ccmplx_rom_romentry153_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY153 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY153 "CST_CCMPLX_ROM_ROMENTRY153"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY153 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY153 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry154
 *
 * CST Ccmplx Rom Romentry154 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry154
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry154_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry154_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry154 cavm_cst_ccmplx_rom_romentry154_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY154 CAVM_CST_CCMPLX_ROM_ROMENTRY154_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY154_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY154_FUNC(void)
{
    return 0x87a000000268ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY154 cavm_cst_ccmplx_rom_romentry154_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY154 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY154 "CST_CCMPLX_ROM_ROMENTRY154"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY154 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY154 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry155
 *
 * CST Ccmplx Rom Romentry155 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry155
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry155_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry155_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry155 cavm_cst_ccmplx_rom_romentry155_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY155 CAVM_CST_CCMPLX_ROM_ROMENTRY155_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY155_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY155_FUNC(void)
{
    return 0x87a00000026cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY155 cavm_cst_ccmplx_rom_romentry155_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY155 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY155 "CST_CCMPLX_ROM_ROMENTRY155"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY155 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY155 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry156
 *
 * CST Ccmplx Rom Romentry156 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry156
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry156_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry156_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry156 cavm_cst_ccmplx_rom_romentry156_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY156 CAVM_CST_CCMPLX_ROM_ROMENTRY156_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY156_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY156_FUNC(void)
{
    return 0x87a000000270ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY156 cavm_cst_ccmplx_rom_romentry156_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY156 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY156 "CST_CCMPLX_ROM_ROMENTRY156"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY156 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY156 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry157
 *
 * CST Ccmplx Rom Romentry157 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry157
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry157_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry157_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry157 cavm_cst_ccmplx_rom_romentry157_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY157 CAVM_CST_CCMPLX_ROM_ROMENTRY157_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY157_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY157_FUNC(void)
{
    return 0x87a000000274ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY157 cavm_cst_ccmplx_rom_romentry157_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY157 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY157 "CST_CCMPLX_ROM_ROMENTRY157"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY157 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY157 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry158
 *
 * CST Ccmplx Rom Romentry158 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry158
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry158_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry158_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry158 cavm_cst_ccmplx_rom_romentry158_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY158 CAVM_CST_CCMPLX_ROM_ROMENTRY158_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY158_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY158_FUNC(void)
{
    return 0x87a000000278ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY158 cavm_cst_ccmplx_rom_romentry158_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY158 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY158 "CST_CCMPLX_ROM_ROMENTRY158"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY158 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY158 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry159
 *
 * CST Ccmplx Rom Romentry159 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry159
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry159_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry159_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry159 cavm_cst_ccmplx_rom_romentry159_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY159 CAVM_CST_CCMPLX_ROM_ROMENTRY159_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY159_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY159_FUNC(void)
{
    return 0x87a00000027cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY159 cavm_cst_ccmplx_rom_romentry159_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY159 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY159 "CST_CCMPLX_ROM_ROMENTRY159"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY159 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY159 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry16
 *
 * CST Ccmplx Rom Romentry16 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry16
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry16_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry16_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry16 cavm_cst_ccmplx_rom_romentry16_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY16 CAVM_CST_CCMPLX_ROM_ROMENTRY16_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY16_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY16_FUNC(void)
{
    return 0x87a000000040ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY16 cavm_cst_ccmplx_rom_romentry16_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY16 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY16 "CST_CCMPLX_ROM_ROMENTRY16"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY16 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY16 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry160
 *
 * CST Ccmplx Rom Romentry160 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry160
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry160_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry160_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry160 cavm_cst_ccmplx_rom_romentry160_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY160 CAVM_CST_CCMPLX_ROM_ROMENTRY160_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY160_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY160_FUNC(void)
{
    return 0x87a000000280ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY160 cavm_cst_ccmplx_rom_romentry160_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY160 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY160 "CST_CCMPLX_ROM_ROMENTRY160"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY160 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY160 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry161
 *
 * CST Ccmplx Rom Romentry161 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry161
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry161_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry161_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry161 cavm_cst_ccmplx_rom_romentry161_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY161 CAVM_CST_CCMPLX_ROM_ROMENTRY161_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY161_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY161_FUNC(void)
{
    return 0x87a000000284ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY161 cavm_cst_ccmplx_rom_romentry161_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY161 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY161 "CST_CCMPLX_ROM_ROMENTRY161"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY161 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY161 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry162
 *
 * CST Ccmplx Rom Romentry162 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry162
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry162_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry162_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry162 cavm_cst_ccmplx_rom_romentry162_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY162 CAVM_CST_CCMPLX_ROM_ROMENTRY162_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY162_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY162_FUNC(void)
{
    return 0x87a000000288ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY162 cavm_cst_ccmplx_rom_romentry162_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY162 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY162 "CST_CCMPLX_ROM_ROMENTRY162"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY162 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY162 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry163
 *
 * CST Ccmplx Rom Romentry163 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry163
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry163_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry163_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry163 cavm_cst_ccmplx_rom_romentry163_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY163 CAVM_CST_CCMPLX_ROM_ROMENTRY163_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY163_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY163_FUNC(void)
{
    return 0x87a00000028cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY163 cavm_cst_ccmplx_rom_romentry163_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY163 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY163 "CST_CCMPLX_ROM_ROMENTRY163"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY163 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY163 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry164
 *
 * CST Ccmplx Rom Romentry164 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry164
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry164_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry164_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry164 cavm_cst_ccmplx_rom_romentry164_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY164 CAVM_CST_CCMPLX_ROM_ROMENTRY164_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY164_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY164_FUNC(void)
{
    return 0x87a000000290ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY164 cavm_cst_ccmplx_rom_romentry164_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY164 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY164 "CST_CCMPLX_ROM_ROMENTRY164"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY164 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY164 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry165
 *
 * CST Ccmplx Rom Romentry165 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry165
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry165_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry165_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry165 cavm_cst_ccmplx_rom_romentry165_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY165 CAVM_CST_CCMPLX_ROM_ROMENTRY165_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY165_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY165_FUNC(void)
{
    return 0x87a000000294ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY165 cavm_cst_ccmplx_rom_romentry165_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY165 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY165 "CST_CCMPLX_ROM_ROMENTRY165"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY165 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY165 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry166
 *
 * CST Ccmplx Rom Romentry166 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry166
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry166_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry166_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry166 cavm_cst_ccmplx_rom_romentry166_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY166 CAVM_CST_CCMPLX_ROM_ROMENTRY166_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY166_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY166_FUNC(void)
{
    return 0x87a000000298ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY166 cavm_cst_ccmplx_rom_romentry166_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY166 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY166 "CST_CCMPLX_ROM_ROMENTRY166"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY166 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY166 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry167
 *
 * CST Ccmplx Rom Romentry167 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry167
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry167_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry167_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry167 cavm_cst_ccmplx_rom_romentry167_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY167 CAVM_CST_CCMPLX_ROM_ROMENTRY167_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY167_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY167_FUNC(void)
{
    return 0x87a00000029cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY167 cavm_cst_ccmplx_rom_romentry167_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY167 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY167 "CST_CCMPLX_ROM_ROMENTRY167"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY167 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY167 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry168
 *
 * CST Ccmplx Rom Romentry168 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry168
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry168_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry168_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry168 cavm_cst_ccmplx_rom_romentry168_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY168 CAVM_CST_CCMPLX_ROM_ROMENTRY168_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY168_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY168_FUNC(void)
{
    return 0x87a0000002a0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY168 cavm_cst_ccmplx_rom_romentry168_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY168 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY168 "CST_CCMPLX_ROM_ROMENTRY168"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY168 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY168 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry169
 *
 * CST Ccmplx Rom Romentry169 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry169
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry169_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry169_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry169 cavm_cst_ccmplx_rom_romentry169_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY169 CAVM_CST_CCMPLX_ROM_ROMENTRY169_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY169_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY169_FUNC(void)
{
    return 0x87a0000002a4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY169 cavm_cst_ccmplx_rom_romentry169_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY169 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY169 "CST_CCMPLX_ROM_ROMENTRY169"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY169 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY169 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry17
 *
 * CST Ccmplx Rom Romentry17 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry17
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry17_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry17_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry17 cavm_cst_ccmplx_rom_romentry17_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY17 CAVM_CST_CCMPLX_ROM_ROMENTRY17_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY17_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY17_FUNC(void)
{
    return 0x87a000000044ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY17 cavm_cst_ccmplx_rom_romentry17_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY17 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY17 "CST_CCMPLX_ROM_ROMENTRY17"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY17 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY17 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry170
 *
 * CST Ccmplx Rom Romentry170 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry170
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry170_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry170_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry170 cavm_cst_ccmplx_rom_romentry170_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY170 CAVM_CST_CCMPLX_ROM_ROMENTRY170_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY170_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY170_FUNC(void)
{
    return 0x87a0000002a8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY170 cavm_cst_ccmplx_rom_romentry170_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY170 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY170 "CST_CCMPLX_ROM_ROMENTRY170"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY170 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY170 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry171
 *
 * CST Ccmplx Rom Romentry171 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry171
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry171_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry171_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry171 cavm_cst_ccmplx_rom_romentry171_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY171 CAVM_CST_CCMPLX_ROM_ROMENTRY171_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY171_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY171_FUNC(void)
{
    return 0x87a0000002acll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY171 cavm_cst_ccmplx_rom_romentry171_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY171 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY171 "CST_CCMPLX_ROM_ROMENTRY171"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY171 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY171 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry172
 *
 * CST Ccmplx Rom Romentry172 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry172
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry172_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry172_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry172 cavm_cst_ccmplx_rom_romentry172_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY172 CAVM_CST_CCMPLX_ROM_ROMENTRY172_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY172_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY172_FUNC(void)
{
    return 0x87a0000002b0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY172 cavm_cst_ccmplx_rom_romentry172_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY172 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY172 "CST_CCMPLX_ROM_ROMENTRY172"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY172 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY172 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry173
 *
 * CST Ccmplx Rom Romentry173 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry173
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry173_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry173_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry173 cavm_cst_ccmplx_rom_romentry173_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY173 CAVM_CST_CCMPLX_ROM_ROMENTRY173_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY173_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY173_FUNC(void)
{
    return 0x87a0000002b4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY173 cavm_cst_ccmplx_rom_romentry173_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY173 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY173 "CST_CCMPLX_ROM_ROMENTRY173"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY173 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY173 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry174
 *
 * CST Ccmplx Rom Romentry174 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry174
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry174_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry174_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry174 cavm_cst_ccmplx_rom_romentry174_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY174 CAVM_CST_CCMPLX_ROM_ROMENTRY174_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY174_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY174_FUNC(void)
{
    return 0x87a0000002b8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY174 cavm_cst_ccmplx_rom_romentry174_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY174 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY174 "CST_CCMPLX_ROM_ROMENTRY174"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY174 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY174 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry175
 *
 * CST Ccmplx Rom Romentry175 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry175
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry175_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry175_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry175 cavm_cst_ccmplx_rom_romentry175_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY175 CAVM_CST_CCMPLX_ROM_ROMENTRY175_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY175_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY175_FUNC(void)
{
    return 0x87a0000002bcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY175 cavm_cst_ccmplx_rom_romentry175_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY175 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY175 "CST_CCMPLX_ROM_ROMENTRY175"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY175 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY175 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry176
 *
 * CST Ccmplx Rom Romentry176 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry176
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry176_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry176_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry176 cavm_cst_ccmplx_rom_romentry176_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY176 CAVM_CST_CCMPLX_ROM_ROMENTRY176_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY176_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY176_FUNC(void)
{
    return 0x87a0000002c0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY176 cavm_cst_ccmplx_rom_romentry176_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY176 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY176 "CST_CCMPLX_ROM_ROMENTRY176"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY176 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY176 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry177
 *
 * CST Ccmplx Rom Romentry177 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry177
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry177_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry177_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry177 cavm_cst_ccmplx_rom_romentry177_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY177 CAVM_CST_CCMPLX_ROM_ROMENTRY177_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY177_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY177_FUNC(void)
{
    return 0x87a0000002c4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY177 cavm_cst_ccmplx_rom_romentry177_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY177 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY177 "CST_CCMPLX_ROM_ROMENTRY177"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY177 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY177 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry178
 *
 * CST Ccmplx Rom Romentry178 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry178
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry178_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry178_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry178 cavm_cst_ccmplx_rom_romentry178_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY178 CAVM_CST_CCMPLX_ROM_ROMENTRY178_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY178_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY178_FUNC(void)
{
    return 0x87a0000002c8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY178 cavm_cst_ccmplx_rom_romentry178_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY178 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY178 "CST_CCMPLX_ROM_ROMENTRY178"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY178 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY178 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry179
 *
 * CST Ccmplx Rom Romentry179 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry179
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry179_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry179_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry179 cavm_cst_ccmplx_rom_romentry179_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY179 CAVM_CST_CCMPLX_ROM_ROMENTRY179_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY179_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY179_FUNC(void)
{
    return 0x87a0000002ccll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY179 cavm_cst_ccmplx_rom_romentry179_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY179 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY179 "CST_CCMPLX_ROM_ROMENTRY179"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY179 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY179 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry18
 *
 * CST Ccmplx Rom Romentry18 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry18
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry18_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry18_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry18 cavm_cst_ccmplx_rom_romentry18_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY18 CAVM_CST_CCMPLX_ROM_ROMENTRY18_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY18_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY18_FUNC(void)
{
    return 0x87a000000048ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY18 cavm_cst_ccmplx_rom_romentry18_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY18 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY18 "CST_CCMPLX_ROM_ROMENTRY18"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY18 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY18 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry180
 *
 * CST Ccmplx Rom Romentry180 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry180
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry180_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry180_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry180 cavm_cst_ccmplx_rom_romentry180_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY180 CAVM_CST_CCMPLX_ROM_ROMENTRY180_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY180_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY180_FUNC(void)
{
    return 0x87a0000002d0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY180 cavm_cst_ccmplx_rom_romentry180_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY180 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY180 "CST_CCMPLX_ROM_ROMENTRY180"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY180 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY180 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry181
 *
 * CST Ccmplx Rom Romentry181 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry181
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry181_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry181_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry181 cavm_cst_ccmplx_rom_romentry181_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY181 CAVM_CST_CCMPLX_ROM_ROMENTRY181_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY181_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY181_FUNC(void)
{
    return 0x87a0000002d4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY181 cavm_cst_ccmplx_rom_romentry181_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY181 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY181 "CST_CCMPLX_ROM_ROMENTRY181"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY181 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY181 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry182
 *
 * CST Ccmplx Rom Romentry182 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry182
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry182_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry182_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry182 cavm_cst_ccmplx_rom_romentry182_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY182 CAVM_CST_CCMPLX_ROM_ROMENTRY182_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY182_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY182_FUNC(void)
{
    return 0x87a0000002d8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY182 cavm_cst_ccmplx_rom_romentry182_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY182 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY182 "CST_CCMPLX_ROM_ROMENTRY182"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY182 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY182 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry183
 *
 * CST Ccmplx Rom Romentry183 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry183
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry183_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry183_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry183 cavm_cst_ccmplx_rom_romentry183_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY183 CAVM_CST_CCMPLX_ROM_ROMENTRY183_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY183_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY183_FUNC(void)
{
    return 0x87a0000002dcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY183 cavm_cst_ccmplx_rom_romentry183_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY183 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY183 "CST_CCMPLX_ROM_ROMENTRY183"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY183 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY183 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry184
 *
 * CST Ccmplx Rom Romentry184 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry184
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry184_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry184_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry184 cavm_cst_ccmplx_rom_romentry184_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY184 CAVM_CST_CCMPLX_ROM_ROMENTRY184_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY184_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY184_FUNC(void)
{
    return 0x87a0000002e0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY184 cavm_cst_ccmplx_rom_romentry184_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY184 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY184 "CST_CCMPLX_ROM_ROMENTRY184"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY184 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY184 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry185
 *
 * CST Ccmplx Rom Romentry185 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry185
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry185_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry185_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry185 cavm_cst_ccmplx_rom_romentry185_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY185 CAVM_CST_CCMPLX_ROM_ROMENTRY185_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY185_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY185_FUNC(void)
{
    return 0x87a0000002e4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY185 cavm_cst_ccmplx_rom_romentry185_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY185 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY185 "CST_CCMPLX_ROM_ROMENTRY185"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY185 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY185 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry186
 *
 * CST Ccmplx Rom Romentry186 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry186
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry186_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry186_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry186 cavm_cst_ccmplx_rom_romentry186_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY186 CAVM_CST_CCMPLX_ROM_ROMENTRY186_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY186_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY186_FUNC(void)
{
    return 0x87a0000002e8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY186 cavm_cst_ccmplx_rom_romentry186_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY186 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY186 "CST_CCMPLX_ROM_ROMENTRY186"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY186 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY186 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry187
 *
 * CST Ccmplx Rom Romentry187 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry187
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry187_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry187_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry187 cavm_cst_ccmplx_rom_romentry187_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY187 CAVM_CST_CCMPLX_ROM_ROMENTRY187_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY187_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY187_FUNC(void)
{
    return 0x87a0000002ecll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY187 cavm_cst_ccmplx_rom_romentry187_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY187 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY187 "CST_CCMPLX_ROM_ROMENTRY187"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY187 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY187 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry188
 *
 * CST Ccmplx Rom Romentry188 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry188
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry188_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry188_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry188 cavm_cst_ccmplx_rom_romentry188_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY188 CAVM_CST_CCMPLX_ROM_ROMENTRY188_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY188_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY188_FUNC(void)
{
    return 0x87a0000002f0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY188 cavm_cst_ccmplx_rom_romentry188_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY188 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY188 "CST_CCMPLX_ROM_ROMENTRY188"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY188 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY188 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry189
 *
 * CST Ccmplx Rom Romentry189 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry189
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry189_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry189_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry189 cavm_cst_ccmplx_rom_romentry189_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY189 CAVM_CST_CCMPLX_ROM_ROMENTRY189_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY189_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY189_FUNC(void)
{
    return 0x87a0000002f4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY189 cavm_cst_ccmplx_rom_romentry189_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY189 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY189 "CST_CCMPLX_ROM_ROMENTRY189"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY189 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY189 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry19
 *
 * CST Ccmplx Rom Romentry19 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry19
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry19_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry19_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry19 cavm_cst_ccmplx_rom_romentry19_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY19 CAVM_CST_CCMPLX_ROM_ROMENTRY19_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY19_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY19_FUNC(void)
{
    return 0x87a00000004cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY19 cavm_cst_ccmplx_rom_romentry19_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY19 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY19 "CST_CCMPLX_ROM_ROMENTRY19"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY19 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY19 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry190
 *
 * CST Ccmplx Rom Romentry190 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry190
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry190_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry190_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry190 cavm_cst_ccmplx_rom_romentry190_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY190 CAVM_CST_CCMPLX_ROM_ROMENTRY190_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY190_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY190_FUNC(void)
{
    return 0x87a0000002f8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY190 cavm_cst_ccmplx_rom_romentry190_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY190 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY190 "CST_CCMPLX_ROM_ROMENTRY190"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY190 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY190 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry191
 *
 * CST Ccmplx Rom Romentry191 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry191
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry191_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry191_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry191 cavm_cst_ccmplx_rom_romentry191_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY191 CAVM_CST_CCMPLX_ROM_ROMENTRY191_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY191_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY191_FUNC(void)
{
    return 0x87a0000002fcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY191 cavm_cst_ccmplx_rom_romentry191_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY191 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY191 "CST_CCMPLX_ROM_ROMENTRY191"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY191 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY191 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry192
 *
 * CST Ccmplx Rom Romentry192 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry192
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry192_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry192_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry192 cavm_cst_ccmplx_rom_romentry192_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY192 CAVM_CST_CCMPLX_ROM_ROMENTRY192_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY192_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY192_FUNC(void)
{
    return 0x87a000000300ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY192 cavm_cst_ccmplx_rom_romentry192_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY192 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY192 "CST_CCMPLX_ROM_ROMENTRY192"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY192 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY192 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry193
 *
 * CST Ccmplx Rom Romentry193 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry193
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry193_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry193_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry193 cavm_cst_ccmplx_rom_romentry193_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY193 CAVM_CST_CCMPLX_ROM_ROMENTRY193_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY193_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY193_FUNC(void)
{
    return 0x87a000000304ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY193 cavm_cst_ccmplx_rom_romentry193_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY193 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY193 "CST_CCMPLX_ROM_ROMENTRY193"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY193 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY193 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry194
 *
 * CST Ccmplx Rom Romentry194 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry194
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry194_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry194_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry194 cavm_cst_ccmplx_rom_romentry194_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY194 CAVM_CST_CCMPLX_ROM_ROMENTRY194_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY194_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY194_FUNC(void)
{
    return 0x87a000000308ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY194 cavm_cst_ccmplx_rom_romentry194_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY194 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY194 "CST_CCMPLX_ROM_ROMENTRY194"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY194 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY194 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry195
 *
 * CST Ccmplx Rom Romentry195 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry195
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry195_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry195_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry195 cavm_cst_ccmplx_rom_romentry195_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY195 CAVM_CST_CCMPLX_ROM_ROMENTRY195_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY195_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY195_FUNC(void)
{
    return 0x87a00000030cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY195 cavm_cst_ccmplx_rom_romentry195_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY195 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY195 "CST_CCMPLX_ROM_ROMENTRY195"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY195 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY195 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry196
 *
 * CST Ccmplx Rom Romentry196 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry196
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry196_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry196_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry196 cavm_cst_ccmplx_rom_romentry196_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY196 CAVM_CST_CCMPLX_ROM_ROMENTRY196_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY196_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY196_FUNC(void)
{
    return 0x87a000000310ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY196 cavm_cst_ccmplx_rom_romentry196_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY196 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY196 "CST_CCMPLX_ROM_ROMENTRY196"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY196 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY196 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry197
 *
 * CST Ccmplx Rom Romentry197 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry197
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry197_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry197_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry197 cavm_cst_ccmplx_rom_romentry197_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY197 CAVM_CST_CCMPLX_ROM_ROMENTRY197_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY197_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY197_FUNC(void)
{
    return 0x87a000000314ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY197 cavm_cst_ccmplx_rom_romentry197_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY197 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY197 "CST_CCMPLX_ROM_ROMENTRY197"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY197 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY197 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry198
 *
 * CST Ccmplx Rom Romentry198 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry198
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry198_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry198_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry198 cavm_cst_ccmplx_rom_romentry198_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY198 CAVM_CST_CCMPLX_ROM_ROMENTRY198_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY198_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY198_FUNC(void)
{
    return 0x87a000000318ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY198 cavm_cst_ccmplx_rom_romentry198_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY198 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY198 "CST_CCMPLX_ROM_ROMENTRY198"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY198 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY198 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry199
 *
 * CST Ccmplx Rom Romentry199 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry199
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry199_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry199_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry199 cavm_cst_ccmplx_rom_romentry199_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY199 CAVM_CST_CCMPLX_ROM_ROMENTRY199_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY199_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY199_FUNC(void)
{
    return 0x87a00000031cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY199 cavm_cst_ccmplx_rom_romentry199_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY199 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY199 "CST_CCMPLX_ROM_ROMENTRY199"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY199 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY199 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry2
 *
 * CST Ccmplx Rom Romentry2 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry2
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry2_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry2_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry2 cavm_cst_ccmplx_rom_romentry2_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY2 CAVM_CST_CCMPLX_ROM_ROMENTRY2_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY2_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY2_FUNC(void)
{
    return 0x87a000000008ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY2 cavm_cst_ccmplx_rom_romentry2_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY2 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY2 "CST_CCMPLX_ROM_ROMENTRY2"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY2 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY2 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry20
 *
 * CST Ccmplx Rom Romentry20 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry20
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry20_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry20_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry20 cavm_cst_ccmplx_rom_romentry20_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY20 CAVM_CST_CCMPLX_ROM_ROMENTRY20_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY20_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY20_FUNC(void)
{
    return 0x87a000000050ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY20 cavm_cst_ccmplx_rom_romentry20_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY20 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY20 "CST_CCMPLX_ROM_ROMENTRY20"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY20 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY20 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry200
 *
 * CST Ccmplx Rom Romentry200 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry200
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry200_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry200_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry200 cavm_cst_ccmplx_rom_romentry200_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY200 CAVM_CST_CCMPLX_ROM_ROMENTRY200_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY200_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY200_FUNC(void)
{
    return 0x87a000000320ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY200 cavm_cst_ccmplx_rom_romentry200_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY200 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY200 "CST_CCMPLX_ROM_ROMENTRY200"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY200 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY200 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry201
 *
 * CST Ccmplx Rom Romentry201 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry201
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry201_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry201_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry201 cavm_cst_ccmplx_rom_romentry201_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY201 CAVM_CST_CCMPLX_ROM_ROMENTRY201_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY201_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY201_FUNC(void)
{
    return 0x87a000000324ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY201 cavm_cst_ccmplx_rom_romentry201_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY201 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY201 "CST_CCMPLX_ROM_ROMENTRY201"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY201 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY201 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry202
 *
 * CST Ccmplx Rom Romentry202 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry202
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry202_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry202_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry202 cavm_cst_ccmplx_rom_romentry202_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY202 CAVM_CST_CCMPLX_ROM_ROMENTRY202_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY202_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY202_FUNC(void)
{
    return 0x87a000000328ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY202 cavm_cst_ccmplx_rom_romentry202_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY202 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY202 "CST_CCMPLX_ROM_ROMENTRY202"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY202 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY202 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry203
 *
 * CST Ccmplx Rom Romentry203 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry203
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry203_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry203_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry203 cavm_cst_ccmplx_rom_romentry203_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY203 CAVM_CST_CCMPLX_ROM_ROMENTRY203_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY203_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY203_FUNC(void)
{
    return 0x87a00000032cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY203 cavm_cst_ccmplx_rom_romentry203_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY203 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY203 "CST_CCMPLX_ROM_ROMENTRY203"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY203 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY203 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry204
 *
 * CST Ccmplx Rom Romentry204 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry204
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry204_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry204_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry204 cavm_cst_ccmplx_rom_romentry204_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY204 CAVM_CST_CCMPLX_ROM_ROMENTRY204_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY204_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY204_FUNC(void)
{
    return 0x87a000000330ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY204 cavm_cst_ccmplx_rom_romentry204_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY204 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY204 "CST_CCMPLX_ROM_ROMENTRY204"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY204 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY204 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry205
 *
 * CST Ccmplx Rom Romentry205 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry205
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry205_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry205_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry205 cavm_cst_ccmplx_rom_romentry205_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY205 CAVM_CST_CCMPLX_ROM_ROMENTRY205_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY205_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY205_FUNC(void)
{
    return 0x87a000000334ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY205 cavm_cst_ccmplx_rom_romentry205_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY205 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY205 "CST_CCMPLX_ROM_ROMENTRY205"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY205 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY205 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry206
 *
 * CST Ccmplx Rom Romentry206 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry206
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry206_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry206_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry206 cavm_cst_ccmplx_rom_romentry206_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY206 CAVM_CST_CCMPLX_ROM_ROMENTRY206_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY206_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY206_FUNC(void)
{
    return 0x87a000000338ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY206 cavm_cst_ccmplx_rom_romentry206_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY206 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY206 "CST_CCMPLX_ROM_ROMENTRY206"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY206 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY206 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry207
 *
 * CST Ccmplx Rom Romentry207 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry207
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry207_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry207_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry207 cavm_cst_ccmplx_rom_romentry207_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY207 CAVM_CST_CCMPLX_ROM_ROMENTRY207_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY207_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY207_FUNC(void)
{
    return 0x87a00000033cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY207 cavm_cst_ccmplx_rom_romentry207_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY207 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY207 "CST_CCMPLX_ROM_ROMENTRY207"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY207 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY207 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry208
 *
 * CST Ccmplx Rom Romentry208 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry208
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry208_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry208_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry208 cavm_cst_ccmplx_rom_romentry208_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY208 CAVM_CST_CCMPLX_ROM_ROMENTRY208_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY208_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY208_FUNC(void)
{
    return 0x87a000000340ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY208 cavm_cst_ccmplx_rom_romentry208_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY208 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY208 "CST_CCMPLX_ROM_ROMENTRY208"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY208 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY208 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry209
 *
 * CST Ccmplx Rom Romentry209 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry209
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry209_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry209_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry209 cavm_cst_ccmplx_rom_romentry209_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY209 CAVM_CST_CCMPLX_ROM_ROMENTRY209_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY209_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY209_FUNC(void)
{
    return 0x87a000000344ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY209 cavm_cst_ccmplx_rom_romentry209_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY209 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY209 "CST_CCMPLX_ROM_ROMENTRY209"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY209 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY209 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry21
 *
 * CST Ccmplx Rom Romentry21 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry21
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry21_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry21_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry21 cavm_cst_ccmplx_rom_romentry21_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY21 CAVM_CST_CCMPLX_ROM_ROMENTRY21_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY21_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY21_FUNC(void)
{
    return 0x87a000000054ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY21 cavm_cst_ccmplx_rom_romentry21_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY21 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY21 "CST_CCMPLX_ROM_ROMENTRY21"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY21 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY21 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry210
 *
 * CST Ccmplx Rom Romentry210 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry210
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry210_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry210_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry210 cavm_cst_ccmplx_rom_romentry210_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY210 CAVM_CST_CCMPLX_ROM_ROMENTRY210_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY210_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY210_FUNC(void)
{
    return 0x87a000000348ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY210 cavm_cst_ccmplx_rom_romentry210_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY210 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY210 "CST_CCMPLX_ROM_ROMENTRY210"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY210 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY210 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry211
 *
 * CST Ccmplx Rom Romentry211 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry211
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry211_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry211_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry211 cavm_cst_ccmplx_rom_romentry211_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY211 CAVM_CST_CCMPLX_ROM_ROMENTRY211_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY211_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY211_FUNC(void)
{
    return 0x87a00000034cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY211 cavm_cst_ccmplx_rom_romentry211_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY211 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY211 "CST_CCMPLX_ROM_ROMENTRY211"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY211 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY211 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry212
 *
 * CST Ccmplx Rom Romentry212 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry212
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry212_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry212_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry212 cavm_cst_ccmplx_rom_romentry212_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY212 CAVM_CST_CCMPLX_ROM_ROMENTRY212_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY212_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY212_FUNC(void)
{
    return 0x87a000000350ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY212 cavm_cst_ccmplx_rom_romentry212_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY212 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY212 "CST_CCMPLX_ROM_ROMENTRY212"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY212 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY212 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry213
 *
 * CST Ccmplx Rom Romentry213 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry213
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry213_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry213_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry213 cavm_cst_ccmplx_rom_romentry213_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY213 CAVM_CST_CCMPLX_ROM_ROMENTRY213_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY213_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY213_FUNC(void)
{
    return 0x87a000000354ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY213 cavm_cst_ccmplx_rom_romentry213_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY213 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY213 "CST_CCMPLX_ROM_ROMENTRY213"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY213 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY213 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry214
 *
 * CST Ccmplx Rom Romentry214 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry214
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry214_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry214_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry214 cavm_cst_ccmplx_rom_romentry214_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY214 CAVM_CST_CCMPLX_ROM_ROMENTRY214_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY214_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY214_FUNC(void)
{
    return 0x87a000000358ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY214 cavm_cst_ccmplx_rom_romentry214_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY214 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY214 "CST_CCMPLX_ROM_ROMENTRY214"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY214 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY214 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry215
 *
 * CST Ccmplx Rom Romentry215 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry215
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry215_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry215_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry215 cavm_cst_ccmplx_rom_romentry215_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY215 CAVM_CST_CCMPLX_ROM_ROMENTRY215_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY215_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY215_FUNC(void)
{
    return 0x87a00000035cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY215 cavm_cst_ccmplx_rom_romentry215_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY215 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY215 "CST_CCMPLX_ROM_ROMENTRY215"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY215 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY215 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry216
 *
 * CST Ccmplx Rom Romentry216 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry216
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry216_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry216_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry216 cavm_cst_ccmplx_rom_romentry216_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY216 CAVM_CST_CCMPLX_ROM_ROMENTRY216_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY216_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY216_FUNC(void)
{
    return 0x87a000000360ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY216 cavm_cst_ccmplx_rom_romentry216_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY216 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY216 "CST_CCMPLX_ROM_ROMENTRY216"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY216 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY216 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry217
 *
 * CST Ccmplx Rom Romentry217 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry217
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry217_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry217_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry217 cavm_cst_ccmplx_rom_romentry217_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY217 CAVM_CST_CCMPLX_ROM_ROMENTRY217_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY217_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY217_FUNC(void)
{
    return 0x87a000000364ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY217 cavm_cst_ccmplx_rom_romentry217_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY217 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY217 "CST_CCMPLX_ROM_ROMENTRY217"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY217 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY217 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry218
 *
 * CST Ccmplx Rom Romentry218 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry218
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry218_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry218_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry218 cavm_cst_ccmplx_rom_romentry218_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY218 CAVM_CST_CCMPLX_ROM_ROMENTRY218_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY218_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY218_FUNC(void)
{
    return 0x87a000000368ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY218 cavm_cst_ccmplx_rom_romentry218_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY218 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY218 "CST_CCMPLX_ROM_ROMENTRY218"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY218 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY218 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry219
 *
 * CST Ccmplx Rom Romentry219 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry219
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry219_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry219_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry219 cavm_cst_ccmplx_rom_romentry219_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY219 CAVM_CST_CCMPLX_ROM_ROMENTRY219_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY219_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY219_FUNC(void)
{
    return 0x87a00000036cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY219 cavm_cst_ccmplx_rom_romentry219_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY219 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY219 "CST_CCMPLX_ROM_ROMENTRY219"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY219 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY219 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry22
 *
 * CST Ccmplx Rom Romentry22 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry22
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry22_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry22_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry22 cavm_cst_ccmplx_rom_romentry22_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY22 CAVM_CST_CCMPLX_ROM_ROMENTRY22_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY22_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY22_FUNC(void)
{
    return 0x87a000000058ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY22 cavm_cst_ccmplx_rom_romentry22_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY22 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY22 "CST_CCMPLX_ROM_ROMENTRY22"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY22 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY22 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry220
 *
 * CST Ccmplx Rom Romentry220 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry220
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry220_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry220_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry220 cavm_cst_ccmplx_rom_romentry220_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY220 CAVM_CST_CCMPLX_ROM_ROMENTRY220_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY220_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY220_FUNC(void)
{
    return 0x87a000000370ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY220 cavm_cst_ccmplx_rom_romentry220_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY220 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY220 "CST_CCMPLX_ROM_ROMENTRY220"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY220 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY220 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry221
 *
 * CST Ccmplx Rom Romentry221 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry221
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry221_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry221_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry221 cavm_cst_ccmplx_rom_romentry221_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY221 CAVM_CST_CCMPLX_ROM_ROMENTRY221_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY221_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY221_FUNC(void)
{
    return 0x87a000000374ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY221 cavm_cst_ccmplx_rom_romentry221_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY221 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY221 "CST_CCMPLX_ROM_ROMENTRY221"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY221 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY221 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry222
 *
 * CST Ccmplx Rom Romentry222 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry222
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry222_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry222_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry222 cavm_cst_ccmplx_rom_romentry222_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY222 CAVM_CST_CCMPLX_ROM_ROMENTRY222_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY222_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY222_FUNC(void)
{
    return 0x87a000000378ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY222 cavm_cst_ccmplx_rom_romentry222_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY222 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY222 "CST_CCMPLX_ROM_ROMENTRY222"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY222 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY222 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry223
 *
 * CST Ccmplx Rom Romentry223 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry223
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry223_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry223_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry223 cavm_cst_ccmplx_rom_romentry223_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY223 CAVM_CST_CCMPLX_ROM_ROMENTRY223_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY223_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY223_FUNC(void)
{
    return 0x87a00000037cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY223 cavm_cst_ccmplx_rom_romentry223_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY223 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY223 "CST_CCMPLX_ROM_ROMENTRY223"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY223 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY223 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry224
 *
 * CST Ccmplx Rom Romentry224 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry224
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry224_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry224_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry224 cavm_cst_ccmplx_rom_romentry224_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY224 CAVM_CST_CCMPLX_ROM_ROMENTRY224_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY224_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY224_FUNC(void)
{
    return 0x87a000000380ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY224 cavm_cst_ccmplx_rom_romentry224_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY224 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY224 "CST_CCMPLX_ROM_ROMENTRY224"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY224 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY224 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry225
 *
 * CST Ccmplx Rom Romentry225 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry225
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry225_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry225_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry225 cavm_cst_ccmplx_rom_romentry225_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY225 CAVM_CST_CCMPLX_ROM_ROMENTRY225_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY225_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY225_FUNC(void)
{
    return 0x87a000000384ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY225 cavm_cst_ccmplx_rom_romentry225_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY225 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY225 "CST_CCMPLX_ROM_ROMENTRY225"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY225 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY225 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry226
 *
 * CST Ccmplx Rom Romentry226 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry226
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry226_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry226_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry226 cavm_cst_ccmplx_rom_romentry226_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY226 CAVM_CST_CCMPLX_ROM_ROMENTRY226_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY226_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY226_FUNC(void)
{
    return 0x87a000000388ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY226 cavm_cst_ccmplx_rom_romentry226_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY226 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY226 "CST_CCMPLX_ROM_ROMENTRY226"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY226 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY226 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry227
 *
 * CST Ccmplx Rom Romentry227 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry227
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry227_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry227_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry227 cavm_cst_ccmplx_rom_romentry227_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY227 CAVM_CST_CCMPLX_ROM_ROMENTRY227_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY227_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY227_FUNC(void)
{
    return 0x87a00000038cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY227 cavm_cst_ccmplx_rom_romentry227_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY227 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY227 "CST_CCMPLX_ROM_ROMENTRY227"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY227 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY227 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry228
 *
 * CST Ccmplx Rom Romentry228 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry228
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry228_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry228_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry228 cavm_cst_ccmplx_rom_romentry228_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY228 CAVM_CST_CCMPLX_ROM_ROMENTRY228_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY228_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY228_FUNC(void)
{
    return 0x87a000000390ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY228 cavm_cst_ccmplx_rom_romentry228_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY228 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY228 "CST_CCMPLX_ROM_ROMENTRY228"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY228 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY228 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry229
 *
 * CST Ccmplx Rom Romentry229 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry229
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry229_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry229_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry229 cavm_cst_ccmplx_rom_romentry229_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY229 CAVM_CST_CCMPLX_ROM_ROMENTRY229_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY229_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY229_FUNC(void)
{
    return 0x87a000000394ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY229 cavm_cst_ccmplx_rom_romentry229_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY229 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY229 "CST_CCMPLX_ROM_ROMENTRY229"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY229 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY229 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry23
 *
 * CST Ccmplx Rom Romentry23 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry23
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry23_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry23_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry23 cavm_cst_ccmplx_rom_romentry23_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY23 CAVM_CST_CCMPLX_ROM_ROMENTRY23_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY23_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY23_FUNC(void)
{
    return 0x87a00000005cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY23 cavm_cst_ccmplx_rom_romentry23_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY23 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY23 "CST_CCMPLX_ROM_ROMENTRY23"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY23 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY23 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry230
 *
 * CST Ccmplx Rom Romentry230 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry230
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry230_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry230_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry230 cavm_cst_ccmplx_rom_romentry230_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY230 CAVM_CST_CCMPLX_ROM_ROMENTRY230_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY230_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY230_FUNC(void)
{
    return 0x87a000000398ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY230 cavm_cst_ccmplx_rom_romentry230_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY230 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY230 "CST_CCMPLX_ROM_ROMENTRY230"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY230 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY230 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry231
 *
 * CST Ccmplx Rom Romentry231 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry231
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry231_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry231_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry231 cavm_cst_ccmplx_rom_romentry231_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY231 CAVM_CST_CCMPLX_ROM_ROMENTRY231_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY231_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY231_FUNC(void)
{
    return 0x87a00000039cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY231 cavm_cst_ccmplx_rom_romentry231_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY231 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY231 "CST_CCMPLX_ROM_ROMENTRY231"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY231 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY231 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry232
 *
 * CST Ccmplx Rom Romentry232 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry232
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry232_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry232_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry232 cavm_cst_ccmplx_rom_romentry232_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY232 CAVM_CST_CCMPLX_ROM_ROMENTRY232_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY232_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY232_FUNC(void)
{
    return 0x87a0000003a0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY232 cavm_cst_ccmplx_rom_romentry232_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY232 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY232 "CST_CCMPLX_ROM_ROMENTRY232"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY232 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY232 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry233
 *
 * CST Ccmplx Rom Romentry233 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry233
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry233_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry233_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry233 cavm_cst_ccmplx_rom_romentry233_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY233 CAVM_CST_CCMPLX_ROM_ROMENTRY233_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY233_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY233_FUNC(void)
{
    return 0x87a0000003a4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY233 cavm_cst_ccmplx_rom_romentry233_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY233 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY233 "CST_CCMPLX_ROM_ROMENTRY233"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY233 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY233 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry234
 *
 * CST Ccmplx Rom Romentry234 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry234
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry234_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry234_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry234 cavm_cst_ccmplx_rom_romentry234_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY234 CAVM_CST_CCMPLX_ROM_ROMENTRY234_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY234_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY234_FUNC(void)
{
    return 0x87a0000003a8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY234 cavm_cst_ccmplx_rom_romentry234_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY234 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY234 "CST_CCMPLX_ROM_ROMENTRY234"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY234 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY234 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry235
 *
 * CST Ccmplx Rom Romentry235 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry235
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry235_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry235_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry235 cavm_cst_ccmplx_rom_romentry235_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY235 CAVM_CST_CCMPLX_ROM_ROMENTRY235_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY235_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY235_FUNC(void)
{
    return 0x87a0000003acll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY235 cavm_cst_ccmplx_rom_romentry235_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY235 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY235 "CST_CCMPLX_ROM_ROMENTRY235"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY235 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY235 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry236
 *
 * CST Ccmplx Rom Romentry236 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry236
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry236_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry236_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry236 cavm_cst_ccmplx_rom_romentry236_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY236 CAVM_CST_CCMPLX_ROM_ROMENTRY236_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY236_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY236_FUNC(void)
{
    return 0x87a0000003b0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY236 cavm_cst_ccmplx_rom_romentry236_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY236 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY236 "CST_CCMPLX_ROM_ROMENTRY236"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY236 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY236 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry237
 *
 * CST Ccmplx Rom Romentry237 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry237
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry237_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry237_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry237 cavm_cst_ccmplx_rom_romentry237_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY237 CAVM_CST_CCMPLX_ROM_ROMENTRY237_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY237_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY237_FUNC(void)
{
    return 0x87a0000003b4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY237 cavm_cst_ccmplx_rom_romentry237_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY237 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY237 "CST_CCMPLX_ROM_ROMENTRY237"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY237 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY237 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry238
 *
 * CST Ccmplx Rom Romentry238 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry238
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry238_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry238_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry238 cavm_cst_ccmplx_rom_romentry238_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY238 CAVM_CST_CCMPLX_ROM_ROMENTRY238_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY238_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY238_FUNC(void)
{
    return 0x87a0000003b8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY238 cavm_cst_ccmplx_rom_romentry238_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY238 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY238 "CST_CCMPLX_ROM_ROMENTRY238"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY238 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY238 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry239
 *
 * CST Ccmplx Rom Romentry239 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry239
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry239_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry239_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry239 cavm_cst_ccmplx_rom_romentry239_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY239 CAVM_CST_CCMPLX_ROM_ROMENTRY239_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY239_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY239_FUNC(void)
{
    return 0x87a0000003bcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY239 cavm_cst_ccmplx_rom_romentry239_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY239 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY239 "CST_CCMPLX_ROM_ROMENTRY239"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY239 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY239 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry24
 *
 * CST Ccmplx Rom Romentry24 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry24
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry24_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry24_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry24 cavm_cst_ccmplx_rom_romentry24_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY24 CAVM_CST_CCMPLX_ROM_ROMENTRY24_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY24_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY24_FUNC(void)
{
    return 0x87a000000060ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY24 cavm_cst_ccmplx_rom_romentry24_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY24 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY24 "CST_CCMPLX_ROM_ROMENTRY24"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY24 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY24 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry240
 *
 * CST Ccmplx Rom Romentry240 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry240
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry240_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry240_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry240 cavm_cst_ccmplx_rom_romentry240_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY240 CAVM_CST_CCMPLX_ROM_ROMENTRY240_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY240_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY240_FUNC(void)
{
    return 0x87a0000003c0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY240 cavm_cst_ccmplx_rom_romentry240_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY240 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY240 "CST_CCMPLX_ROM_ROMENTRY240"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY240 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY240 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry241
 *
 * CST Ccmplx Rom Romentry241 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry241
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry241_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry241_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry241 cavm_cst_ccmplx_rom_romentry241_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY241 CAVM_CST_CCMPLX_ROM_ROMENTRY241_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY241_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY241_FUNC(void)
{
    return 0x87a0000003c4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY241 cavm_cst_ccmplx_rom_romentry241_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY241 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY241 "CST_CCMPLX_ROM_ROMENTRY241"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY241 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY241 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry242
 *
 * CST Ccmplx Rom Romentry242 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry242
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry242_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry242_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry242 cavm_cst_ccmplx_rom_romentry242_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY242 CAVM_CST_CCMPLX_ROM_ROMENTRY242_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY242_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY242_FUNC(void)
{
    return 0x87a0000003c8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY242 cavm_cst_ccmplx_rom_romentry242_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY242 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY242 "CST_CCMPLX_ROM_ROMENTRY242"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY242 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY242 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry243
 *
 * CST Ccmplx Rom Romentry243 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry243
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry243_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry243_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry243 cavm_cst_ccmplx_rom_romentry243_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY243 CAVM_CST_CCMPLX_ROM_ROMENTRY243_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY243_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY243_FUNC(void)
{
    return 0x87a0000003ccll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY243 cavm_cst_ccmplx_rom_romentry243_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY243 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY243 "CST_CCMPLX_ROM_ROMENTRY243"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY243 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY243 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry244
 *
 * CST Ccmplx Rom Romentry244 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry244
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry244_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry244_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry244 cavm_cst_ccmplx_rom_romentry244_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY244 CAVM_CST_CCMPLX_ROM_ROMENTRY244_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY244_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY244_FUNC(void)
{
    return 0x87a0000003d0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY244 cavm_cst_ccmplx_rom_romentry244_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY244 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY244 "CST_CCMPLX_ROM_ROMENTRY244"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY244 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY244 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry245
 *
 * CST Ccmplx Rom Romentry245 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry245
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry245_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry245_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry245 cavm_cst_ccmplx_rom_romentry245_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY245 CAVM_CST_CCMPLX_ROM_ROMENTRY245_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY245_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY245_FUNC(void)
{
    return 0x87a0000003d4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY245 cavm_cst_ccmplx_rom_romentry245_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY245 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY245 "CST_CCMPLX_ROM_ROMENTRY245"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY245 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY245 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry246
 *
 * CST Ccmplx Rom Romentry246 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry246
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry246_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry246_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry246 cavm_cst_ccmplx_rom_romentry246_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY246 CAVM_CST_CCMPLX_ROM_ROMENTRY246_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY246_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY246_FUNC(void)
{
    return 0x87a0000003d8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY246 cavm_cst_ccmplx_rom_romentry246_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY246 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY246 "CST_CCMPLX_ROM_ROMENTRY246"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY246 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY246 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry247
 *
 * CST Ccmplx Rom Romentry247 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry247
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry247_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry247_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry247 cavm_cst_ccmplx_rom_romentry247_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY247 CAVM_CST_CCMPLX_ROM_ROMENTRY247_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY247_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY247_FUNC(void)
{
    return 0x87a0000003dcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY247 cavm_cst_ccmplx_rom_romentry247_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY247 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY247 "CST_CCMPLX_ROM_ROMENTRY247"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY247 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY247 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry248
 *
 * CST Ccmplx Rom Romentry248 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry248
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry248_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry248_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry248 cavm_cst_ccmplx_rom_romentry248_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY248 CAVM_CST_CCMPLX_ROM_ROMENTRY248_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY248_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY248_FUNC(void)
{
    return 0x87a0000003e0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY248 cavm_cst_ccmplx_rom_romentry248_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY248 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY248 "CST_CCMPLX_ROM_ROMENTRY248"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY248 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY248 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry249
 *
 * CST Ccmplx Rom Romentry249 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry249
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry249_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry249_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry249 cavm_cst_ccmplx_rom_romentry249_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY249 CAVM_CST_CCMPLX_ROM_ROMENTRY249_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY249_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY249_FUNC(void)
{
    return 0x87a0000003e4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY249 cavm_cst_ccmplx_rom_romentry249_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY249 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY249 "CST_CCMPLX_ROM_ROMENTRY249"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY249 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY249 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry25
 *
 * CST Ccmplx Rom Romentry25 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry25
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry25_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry25_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry25 cavm_cst_ccmplx_rom_romentry25_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY25 CAVM_CST_CCMPLX_ROM_ROMENTRY25_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY25_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY25_FUNC(void)
{
    return 0x87a000000064ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY25 cavm_cst_ccmplx_rom_romentry25_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY25 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY25 "CST_CCMPLX_ROM_ROMENTRY25"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY25 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY25 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry250
 *
 * CST Ccmplx Rom Romentry250 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry250
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry250_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry250_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry250 cavm_cst_ccmplx_rom_romentry250_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY250 CAVM_CST_CCMPLX_ROM_ROMENTRY250_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY250_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY250_FUNC(void)
{
    return 0x87a0000003e8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY250 cavm_cst_ccmplx_rom_romentry250_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY250 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY250 "CST_CCMPLX_ROM_ROMENTRY250"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY250 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY250 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry251
 *
 * CST Ccmplx Rom Romentry251 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry251
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry251_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry251_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry251 cavm_cst_ccmplx_rom_romentry251_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY251 CAVM_CST_CCMPLX_ROM_ROMENTRY251_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY251_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY251_FUNC(void)
{
    return 0x87a0000003ecll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY251 cavm_cst_ccmplx_rom_romentry251_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY251 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY251 "CST_CCMPLX_ROM_ROMENTRY251"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY251 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY251 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry252
 *
 * CST Ccmplx Rom Romentry252 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry252
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry252_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry252_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry252 cavm_cst_ccmplx_rom_romentry252_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY252 CAVM_CST_CCMPLX_ROM_ROMENTRY252_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY252_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY252_FUNC(void)
{
    return 0x87a0000003f0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY252 cavm_cst_ccmplx_rom_romentry252_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY252 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY252 "CST_CCMPLX_ROM_ROMENTRY252"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY252 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY252 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry253
 *
 * CST Ccmplx Rom Romentry253 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry253
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry253_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry253_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry253 cavm_cst_ccmplx_rom_romentry253_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY253 CAVM_CST_CCMPLX_ROM_ROMENTRY253_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY253_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY253_FUNC(void)
{
    return 0x87a0000003f4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY253 cavm_cst_ccmplx_rom_romentry253_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY253 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY253 "CST_CCMPLX_ROM_ROMENTRY253"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY253 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY253 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry254
 *
 * CST Ccmplx Rom Romentry254 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry254
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry254_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry254_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry254 cavm_cst_ccmplx_rom_romentry254_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY254 CAVM_CST_CCMPLX_ROM_ROMENTRY254_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY254_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY254_FUNC(void)
{
    return 0x87a0000003f8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY254 cavm_cst_ccmplx_rom_romentry254_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY254 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY254 "CST_CCMPLX_ROM_ROMENTRY254"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY254 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY254 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry255
 *
 * CST Ccmplx Rom Romentry255 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry255
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry255_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry255_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry255 cavm_cst_ccmplx_rom_romentry255_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY255 CAVM_CST_CCMPLX_ROM_ROMENTRY255_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY255_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY255_FUNC(void)
{
    return 0x87a0000003fcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY255 cavm_cst_ccmplx_rom_romentry255_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY255 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY255 "CST_CCMPLX_ROM_ROMENTRY255"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY255 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY255 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry256
 *
 * CST Ccmplx Rom Romentry256 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry256
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry256_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry256_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry256 cavm_cst_ccmplx_rom_romentry256_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY256 CAVM_CST_CCMPLX_ROM_ROMENTRY256_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY256_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY256_FUNC(void)
{
    return 0x87a000000400ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY256 cavm_cst_ccmplx_rom_romentry256_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY256 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY256 "CST_CCMPLX_ROM_ROMENTRY256"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY256 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY256 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry257
 *
 * CST Ccmplx Rom Romentry257 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry257
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry257_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry257_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry257 cavm_cst_ccmplx_rom_romentry257_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY257 CAVM_CST_CCMPLX_ROM_ROMENTRY257_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY257_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY257_FUNC(void)
{
    return 0x87a000000404ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY257 cavm_cst_ccmplx_rom_romentry257_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY257 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY257 "CST_CCMPLX_ROM_ROMENTRY257"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY257 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY257 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry258
 *
 * CST Ccmplx Rom Romentry258 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry258
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry258_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry258_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry258 cavm_cst_ccmplx_rom_romentry258_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY258 CAVM_CST_CCMPLX_ROM_ROMENTRY258_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY258_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY258_FUNC(void)
{
    return 0x87a000000408ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY258 cavm_cst_ccmplx_rom_romentry258_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY258 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY258 "CST_CCMPLX_ROM_ROMENTRY258"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY258 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY258 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry259
 *
 * CST Ccmplx Rom Romentry259 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry259
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry259_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry259_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry259 cavm_cst_ccmplx_rom_romentry259_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY259 CAVM_CST_CCMPLX_ROM_ROMENTRY259_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY259_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY259_FUNC(void)
{
    return 0x87a00000040cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY259 cavm_cst_ccmplx_rom_romentry259_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY259 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY259 "CST_CCMPLX_ROM_ROMENTRY259"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY259 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY259 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry26
 *
 * CST Ccmplx Rom Romentry26 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry26
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry26_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry26_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry26 cavm_cst_ccmplx_rom_romentry26_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY26 CAVM_CST_CCMPLX_ROM_ROMENTRY26_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY26_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY26_FUNC(void)
{
    return 0x87a000000068ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY26 cavm_cst_ccmplx_rom_romentry26_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY26 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY26 "CST_CCMPLX_ROM_ROMENTRY26"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY26 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY26 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry260
 *
 * CST Ccmplx Rom Romentry260 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry260
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry260_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry260_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry260 cavm_cst_ccmplx_rom_romentry260_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY260 CAVM_CST_CCMPLX_ROM_ROMENTRY260_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY260_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY260_FUNC(void)
{
    return 0x87a000000410ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY260 cavm_cst_ccmplx_rom_romentry260_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY260 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY260 "CST_CCMPLX_ROM_ROMENTRY260"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY260 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY260 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry261
 *
 * CST Ccmplx Rom Romentry261 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry261
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry261_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry261_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry261 cavm_cst_ccmplx_rom_romentry261_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY261 CAVM_CST_CCMPLX_ROM_ROMENTRY261_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY261_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY261_FUNC(void)
{
    return 0x87a000000414ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY261 cavm_cst_ccmplx_rom_romentry261_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY261 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY261 "CST_CCMPLX_ROM_ROMENTRY261"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY261 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY261 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry262
 *
 * CST Ccmplx Rom Romentry262 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry262
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry262_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry262_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry262 cavm_cst_ccmplx_rom_romentry262_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY262 CAVM_CST_CCMPLX_ROM_ROMENTRY262_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY262_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY262_FUNC(void)
{
    return 0x87a000000418ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY262 cavm_cst_ccmplx_rom_romentry262_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY262 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY262 "CST_CCMPLX_ROM_ROMENTRY262"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY262 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY262 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry263
 *
 * CST Ccmplx Rom Romentry263 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry263
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry263_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry263_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry263 cavm_cst_ccmplx_rom_romentry263_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY263 CAVM_CST_CCMPLX_ROM_ROMENTRY263_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY263_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY263_FUNC(void)
{
    return 0x87a00000041cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY263 cavm_cst_ccmplx_rom_romentry263_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY263 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY263 "CST_CCMPLX_ROM_ROMENTRY263"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY263 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY263 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry264
 *
 * CST Ccmplx Rom Romentry264 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry264
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry264_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry264_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry264 cavm_cst_ccmplx_rom_romentry264_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY264 CAVM_CST_CCMPLX_ROM_ROMENTRY264_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY264_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY264_FUNC(void)
{
    return 0x87a000000420ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY264 cavm_cst_ccmplx_rom_romentry264_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY264 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY264 "CST_CCMPLX_ROM_ROMENTRY264"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY264 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY264 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry265
 *
 * CST Ccmplx Rom Romentry265 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry265
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry265_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry265_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry265 cavm_cst_ccmplx_rom_romentry265_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY265 CAVM_CST_CCMPLX_ROM_ROMENTRY265_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY265_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY265_FUNC(void)
{
    return 0x87a000000424ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY265 cavm_cst_ccmplx_rom_romentry265_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY265 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY265 "CST_CCMPLX_ROM_ROMENTRY265"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY265 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY265 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry266
 *
 * CST Ccmplx Rom Romentry266 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry266
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry266_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry266_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry266 cavm_cst_ccmplx_rom_romentry266_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY266 CAVM_CST_CCMPLX_ROM_ROMENTRY266_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY266_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY266_FUNC(void)
{
    return 0x87a000000428ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY266 cavm_cst_ccmplx_rom_romentry266_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY266 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY266 "CST_CCMPLX_ROM_ROMENTRY266"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY266 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY266 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry267
 *
 * CST Ccmplx Rom Romentry267 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry267
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry267_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry267_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry267 cavm_cst_ccmplx_rom_romentry267_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY267 CAVM_CST_CCMPLX_ROM_ROMENTRY267_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY267_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY267_FUNC(void)
{
    return 0x87a00000042cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY267 cavm_cst_ccmplx_rom_romentry267_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY267 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY267 "CST_CCMPLX_ROM_ROMENTRY267"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY267 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY267 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry268
 *
 * CST Ccmplx Rom Romentry268 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry268
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry268_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry268_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry268 cavm_cst_ccmplx_rom_romentry268_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY268 CAVM_CST_CCMPLX_ROM_ROMENTRY268_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY268_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY268_FUNC(void)
{
    return 0x87a000000430ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY268 cavm_cst_ccmplx_rom_romentry268_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY268 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY268 "CST_CCMPLX_ROM_ROMENTRY268"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY268 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY268 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry269
 *
 * CST Ccmplx Rom Romentry269 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry269
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry269_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry269_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry269 cavm_cst_ccmplx_rom_romentry269_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY269 CAVM_CST_CCMPLX_ROM_ROMENTRY269_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY269_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY269_FUNC(void)
{
    return 0x87a000000434ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY269 cavm_cst_ccmplx_rom_romentry269_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY269 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY269 "CST_CCMPLX_ROM_ROMENTRY269"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY269 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY269 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry27
 *
 * CST Ccmplx Rom Romentry27 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry27
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry27_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry27_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry27 cavm_cst_ccmplx_rom_romentry27_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY27 CAVM_CST_CCMPLX_ROM_ROMENTRY27_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY27_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY27_FUNC(void)
{
    return 0x87a00000006cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY27 cavm_cst_ccmplx_rom_romentry27_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY27 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY27 "CST_CCMPLX_ROM_ROMENTRY27"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY27 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY27 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry270
 *
 * CST Ccmplx Rom Romentry270 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry270
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry270_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry270_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry270 cavm_cst_ccmplx_rom_romentry270_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY270 CAVM_CST_CCMPLX_ROM_ROMENTRY270_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY270_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY270_FUNC(void)
{
    return 0x87a000000438ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY270 cavm_cst_ccmplx_rom_romentry270_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY270 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY270 "CST_CCMPLX_ROM_ROMENTRY270"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY270 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY270 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry271
 *
 * CST Ccmplx Rom Romentry271 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry271
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry271_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry271_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry271 cavm_cst_ccmplx_rom_romentry271_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY271 CAVM_CST_CCMPLX_ROM_ROMENTRY271_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY271_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY271_FUNC(void)
{
    return 0x87a00000043cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY271 cavm_cst_ccmplx_rom_romentry271_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY271 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY271 "CST_CCMPLX_ROM_ROMENTRY271"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY271 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY271 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry272
 *
 * CST Ccmplx Rom Romentry272 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry272
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry272_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry272_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry272 cavm_cst_ccmplx_rom_romentry272_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY272 CAVM_CST_CCMPLX_ROM_ROMENTRY272_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY272_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY272_FUNC(void)
{
    return 0x87a000000440ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY272 cavm_cst_ccmplx_rom_romentry272_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY272 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY272 "CST_CCMPLX_ROM_ROMENTRY272"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY272 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY272 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry273
 *
 * CST Ccmplx Rom Romentry273 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry273
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry273_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry273_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry273 cavm_cst_ccmplx_rom_romentry273_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY273 CAVM_CST_CCMPLX_ROM_ROMENTRY273_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY273_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY273_FUNC(void)
{
    return 0x87a000000444ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY273 cavm_cst_ccmplx_rom_romentry273_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY273 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY273 "CST_CCMPLX_ROM_ROMENTRY273"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY273 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY273 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry274
 *
 * CST Ccmplx Rom Romentry274 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry274
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry274_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry274_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry274 cavm_cst_ccmplx_rom_romentry274_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY274 CAVM_CST_CCMPLX_ROM_ROMENTRY274_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY274_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY274_FUNC(void)
{
    return 0x87a000000448ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY274 cavm_cst_ccmplx_rom_romentry274_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY274 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY274 "CST_CCMPLX_ROM_ROMENTRY274"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY274 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY274 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry275
 *
 * CST Ccmplx Rom Romentry275 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry275
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry275_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry275_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry275 cavm_cst_ccmplx_rom_romentry275_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY275 CAVM_CST_CCMPLX_ROM_ROMENTRY275_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY275_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY275_FUNC(void)
{
    return 0x87a00000044cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY275 cavm_cst_ccmplx_rom_romentry275_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY275 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY275 "CST_CCMPLX_ROM_ROMENTRY275"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY275 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY275 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry276
 *
 * CST Ccmplx Rom Romentry276 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry276
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry276_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry276_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry276 cavm_cst_ccmplx_rom_romentry276_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY276 CAVM_CST_CCMPLX_ROM_ROMENTRY276_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY276_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY276_FUNC(void)
{
    return 0x87a000000450ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY276 cavm_cst_ccmplx_rom_romentry276_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY276 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY276 "CST_CCMPLX_ROM_ROMENTRY276"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY276 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY276 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry277
 *
 * CST Ccmplx Rom Romentry277 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry277
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry277_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry277_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry277 cavm_cst_ccmplx_rom_romentry277_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY277 CAVM_CST_CCMPLX_ROM_ROMENTRY277_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY277_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY277_FUNC(void)
{
    return 0x87a000000454ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY277 cavm_cst_ccmplx_rom_romentry277_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY277 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY277 "CST_CCMPLX_ROM_ROMENTRY277"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY277 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY277 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry278
 *
 * CST Ccmplx Rom Romentry278 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry278
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry278_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry278_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry278 cavm_cst_ccmplx_rom_romentry278_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY278 CAVM_CST_CCMPLX_ROM_ROMENTRY278_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY278_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY278_FUNC(void)
{
    return 0x87a000000458ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY278 cavm_cst_ccmplx_rom_romentry278_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY278 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY278 "CST_CCMPLX_ROM_ROMENTRY278"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY278 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY278 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry279
 *
 * CST Ccmplx Rom Romentry279 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry279
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry279_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry279_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry279 cavm_cst_ccmplx_rom_romentry279_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY279 CAVM_CST_CCMPLX_ROM_ROMENTRY279_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY279_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY279_FUNC(void)
{
    return 0x87a00000045cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY279 cavm_cst_ccmplx_rom_romentry279_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY279 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY279 "CST_CCMPLX_ROM_ROMENTRY279"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY279 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY279 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry28
 *
 * CST Ccmplx Rom Romentry28 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry28
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry28_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry28_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry28 cavm_cst_ccmplx_rom_romentry28_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY28 CAVM_CST_CCMPLX_ROM_ROMENTRY28_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY28_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY28_FUNC(void)
{
    return 0x87a000000070ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY28 cavm_cst_ccmplx_rom_romentry28_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY28 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY28 "CST_CCMPLX_ROM_ROMENTRY28"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY28 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY28 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry280
 *
 * CST Ccmplx Rom Romentry280 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry280
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry280_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry280_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry280 cavm_cst_ccmplx_rom_romentry280_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY280 CAVM_CST_CCMPLX_ROM_ROMENTRY280_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY280_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY280_FUNC(void)
{
    return 0x87a000000460ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY280 cavm_cst_ccmplx_rom_romentry280_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY280 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY280 "CST_CCMPLX_ROM_ROMENTRY280"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY280 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY280 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry281
 *
 * CST Ccmplx Rom Romentry281 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry281
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry281_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry281_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry281 cavm_cst_ccmplx_rom_romentry281_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY281 CAVM_CST_CCMPLX_ROM_ROMENTRY281_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY281_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY281_FUNC(void)
{
    return 0x87a000000464ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY281 cavm_cst_ccmplx_rom_romentry281_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY281 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY281 "CST_CCMPLX_ROM_ROMENTRY281"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY281 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY281 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry282
 *
 * CST Ccmplx Rom Romentry282 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry282
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry282_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry282_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry282 cavm_cst_ccmplx_rom_romentry282_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY282 CAVM_CST_CCMPLX_ROM_ROMENTRY282_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY282_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY282_FUNC(void)
{
    return 0x87a000000468ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY282 cavm_cst_ccmplx_rom_romentry282_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY282 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY282 "CST_CCMPLX_ROM_ROMENTRY282"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY282 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY282 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry283
 *
 * CST Ccmplx Rom Romentry283 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry283
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry283_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry283_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry283 cavm_cst_ccmplx_rom_romentry283_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY283 CAVM_CST_CCMPLX_ROM_ROMENTRY283_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY283_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY283_FUNC(void)
{
    return 0x87a00000046cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY283 cavm_cst_ccmplx_rom_romentry283_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY283 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY283 "CST_CCMPLX_ROM_ROMENTRY283"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY283 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY283 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry284
 *
 * CST Ccmplx Rom Romentry284 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry284
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry284_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry284_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry284 cavm_cst_ccmplx_rom_romentry284_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY284 CAVM_CST_CCMPLX_ROM_ROMENTRY284_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY284_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY284_FUNC(void)
{
    return 0x87a000000470ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY284 cavm_cst_ccmplx_rom_romentry284_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY284 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY284 "CST_CCMPLX_ROM_ROMENTRY284"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY284 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY284 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry285
 *
 * CST Ccmplx Rom Romentry285 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry285
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry285_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry285_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry285 cavm_cst_ccmplx_rom_romentry285_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY285 CAVM_CST_CCMPLX_ROM_ROMENTRY285_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY285_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY285_FUNC(void)
{
    return 0x87a000000474ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY285 cavm_cst_ccmplx_rom_romentry285_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY285 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY285 "CST_CCMPLX_ROM_ROMENTRY285"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY285 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY285 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry286
 *
 * CST Ccmplx Rom Romentry286 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry286
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry286_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry286_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry286 cavm_cst_ccmplx_rom_romentry286_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY286 CAVM_CST_CCMPLX_ROM_ROMENTRY286_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY286_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY286_FUNC(void)
{
    return 0x87a000000478ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY286 cavm_cst_ccmplx_rom_romentry286_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY286 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY286 "CST_CCMPLX_ROM_ROMENTRY286"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY286 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY286 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry287
 *
 * CST Ccmplx Rom Romentry287 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry287
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry287_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry287_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry287 cavm_cst_ccmplx_rom_romentry287_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY287 CAVM_CST_CCMPLX_ROM_ROMENTRY287_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY287_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY287_FUNC(void)
{
    return 0x87a00000047cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY287 cavm_cst_ccmplx_rom_romentry287_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY287 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY287 "CST_CCMPLX_ROM_ROMENTRY287"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY287 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY287 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry288
 *
 * CST Ccmplx Rom Romentry288 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry288
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry288_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry288_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry288 cavm_cst_ccmplx_rom_romentry288_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY288 CAVM_CST_CCMPLX_ROM_ROMENTRY288_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY288_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY288_FUNC(void)
{
    return 0x87a000000480ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY288 cavm_cst_ccmplx_rom_romentry288_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY288 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY288 "CST_CCMPLX_ROM_ROMENTRY288"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY288 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY288 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry289
 *
 * CST Ccmplx Rom Romentry289 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry289
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry289_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry289_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry289 cavm_cst_ccmplx_rom_romentry289_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY289 CAVM_CST_CCMPLX_ROM_ROMENTRY289_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY289_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY289_FUNC(void)
{
    return 0x87a000000484ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY289 cavm_cst_ccmplx_rom_romentry289_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY289 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY289 "CST_CCMPLX_ROM_ROMENTRY289"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY289 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY289 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry29
 *
 * CST Ccmplx Rom Romentry29 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry29
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry29_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry29_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry29 cavm_cst_ccmplx_rom_romentry29_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY29 CAVM_CST_CCMPLX_ROM_ROMENTRY29_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY29_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY29_FUNC(void)
{
    return 0x87a000000074ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY29 cavm_cst_ccmplx_rom_romentry29_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY29 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY29 "CST_CCMPLX_ROM_ROMENTRY29"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY29 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY29 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry290
 *
 * CST Ccmplx Rom Romentry290 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry290
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry290_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry290_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry290 cavm_cst_ccmplx_rom_romentry290_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY290 CAVM_CST_CCMPLX_ROM_ROMENTRY290_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY290_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY290_FUNC(void)
{
    return 0x87a000000488ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY290 cavm_cst_ccmplx_rom_romentry290_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY290 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY290 "CST_CCMPLX_ROM_ROMENTRY290"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY290 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY290 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry291
 *
 * CST Ccmplx Rom Romentry291 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry291
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry291_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry291_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry291 cavm_cst_ccmplx_rom_romentry291_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY291 CAVM_CST_CCMPLX_ROM_ROMENTRY291_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY291_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY291_FUNC(void)
{
    return 0x87a00000048cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY291 cavm_cst_ccmplx_rom_romentry291_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY291 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY291 "CST_CCMPLX_ROM_ROMENTRY291"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY291 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY291 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry292
 *
 * CST Ccmplx Rom Romentry292 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry292
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry292_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry292_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry292 cavm_cst_ccmplx_rom_romentry292_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY292 CAVM_CST_CCMPLX_ROM_ROMENTRY292_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY292_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY292_FUNC(void)
{
    return 0x87a000000490ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY292 cavm_cst_ccmplx_rom_romentry292_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY292 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY292 "CST_CCMPLX_ROM_ROMENTRY292"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY292 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY292 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry293
 *
 * CST Ccmplx Rom Romentry293 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry293
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry293_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry293_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry293 cavm_cst_ccmplx_rom_romentry293_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY293 CAVM_CST_CCMPLX_ROM_ROMENTRY293_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY293_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY293_FUNC(void)
{
    return 0x87a000000494ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY293 cavm_cst_ccmplx_rom_romentry293_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY293 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY293 "CST_CCMPLX_ROM_ROMENTRY293"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY293 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY293 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry294
 *
 * CST Ccmplx Rom Romentry294 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry294
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry294_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry294_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry294 cavm_cst_ccmplx_rom_romentry294_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY294 CAVM_CST_CCMPLX_ROM_ROMENTRY294_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY294_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY294_FUNC(void)
{
    return 0x87a000000498ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY294 cavm_cst_ccmplx_rom_romentry294_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY294 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY294 "CST_CCMPLX_ROM_ROMENTRY294"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY294 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY294 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry295
 *
 * CST Ccmplx Rom Romentry295 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry295
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry295_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry295_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry295 cavm_cst_ccmplx_rom_romentry295_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY295 CAVM_CST_CCMPLX_ROM_ROMENTRY295_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY295_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY295_FUNC(void)
{
    return 0x87a00000049cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY295 cavm_cst_ccmplx_rom_romentry295_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY295 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY295 "CST_CCMPLX_ROM_ROMENTRY295"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY295 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY295 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry296
 *
 * CST Ccmplx Rom Romentry296 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry296
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry296_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry296_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry296 cavm_cst_ccmplx_rom_romentry296_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY296 CAVM_CST_CCMPLX_ROM_ROMENTRY296_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY296_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY296_FUNC(void)
{
    return 0x87a0000004a0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY296 cavm_cst_ccmplx_rom_romentry296_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY296 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY296 "CST_CCMPLX_ROM_ROMENTRY296"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY296 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY296 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry297
 *
 * CST Ccmplx Rom Romentry297 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry297
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry297_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry297_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry297 cavm_cst_ccmplx_rom_romentry297_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY297 CAVM_CST_CCMPLX_ROM_ROMENTRY297_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY297_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY297_FUNC(void)
{
    return 0x87a0000004a4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY297 cavm_cst_ccmplx_rom_romentry297_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY297 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY297 "CST_CCMPLX_ROM_ROMENTRY297"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY297 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY297 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry298
 *
 * CST Ccmplx Rom Romentry298 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry298
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry298_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry298_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry298 cavm_cst_ccmplx_rom_romentry298_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY298 CAVM_CST_CCMPLX_ROM_ROMENTRY298_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY298_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY298_FUNC(void)
{
    return 0x87a0000004a8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY298 cavm_cst_ccmplx_rom_romentry298_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY298 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY298 "CST_CCMPLX_ROM_ROMENTRY298"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY298 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY298 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry299
 *
 * CST Ccmplx Rom Romentry299 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry299
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry299_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry299_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry299 cavm_cst_ccmplx_rom_romentry299_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY299 CAVM_CST_CCMPLX_ROM_ROMENTRY299_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY299_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY299_FUNC(void)
{
    return 0x87a0000004acll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY299 cavm_cst_ccmplx_rom_romentry299_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY299 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY299 "CST_CCMPLX_ROM_ROMENTRY299"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY299 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY299 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry3
 *
 * CST Ccmplx Rom Romentry3 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry3
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry3_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry3_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry3 cavm_cst_ccmplx_rom_romentry3_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY3 CAVM_CST_CCMPLX_ROM_ROMENTRY3_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY3_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY3_FUNC(void)
{
    return 0x87a00000000cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY3 cavm_cst_ccmplx_rom_romentry3_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY3 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY3 "CST_CCMPLX_ROM_ROMENTRY3"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY3 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY3 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry30
 *
 * CST Ccmplx Rom Romentry30 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry30
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry30_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry30_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry30 cavm_cst_ccmplx_rom_romentry30_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY30 CAVM_CST_CCMPLX_ROM_ROMENTRY30_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY30_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY30_FUNC(void)
{
    return 0x87a000000078ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY30 cavm_cst_ccmplx_rom_romentry30_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY30 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY30 "CST_CCMPLX_ROM_ROMENTRY30"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY30 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY30 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry300
 *
 * CST Ccmplx Rom Romentry300 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry300
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry300_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry300_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry300 cavm_cst_ccmplx_rom_romentry300_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY300 CAVM_CST_CCMPLX_ROM_ROMENTRY300_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY300_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY300_FUNC(void)
{
    return 0x87a0000004b0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY300 cavm_cst_ccmplx_rom_romentry300_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY300 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY300 "CST_CCMPLX_ROM_ROMENTRY300"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY300 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY300 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry301
 *
 * CST Ccmplx Rom Romentry301 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry301
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry301_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry301_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry301 cavm_cst_ccmplx_rom_romentry301_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY301 CAVM_CST_CCMPLX_ROM_ROMENTRY301_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY301_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY301_FUNC(void)
{
    return 0x87a0000004b4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY301 cavm_cst_ccmplx_rom_romentry301_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY301 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY301 "CST_CCMPLX_ROM_ROMENTRY301"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY301 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY301 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry302
 *
 * CST Ccmplx Rom Romentry302 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry302
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry302_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry302_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry302 cavm_cst_ccmplx_rom_romentry302_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY302 CAVM_CST_CCMPLX_ROM_ROMENTRY302_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY302_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY302_FUNC(void)
{
    return 0x87a0000004b8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY302 cavm_cst_ccmplx_rom_romentry302_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY302 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY302 "CST_CCMPLX_ROM_ROMENTRY302"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY302 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY302 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry303
 *
 * CST Ccmplx Rom Romentry303 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry303
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry303_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry303_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry303 cavm_cst_ccmplx_rom_romentry303_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY303 CAVM_CST_CCMPLX_ROM_ROMENTRY303_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY303_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY303_FUNC(void)
{
    return 0x87a0000004bcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY303 cavm_cst_ccmplx_rom_romentry303_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY303 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY303 "CST_CCMPLX_ROM_ROMENTRY303"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY303 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY303 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry304
 *
 * CST Ccmplx Rom Romentry304 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry304
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry304_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry304_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry304 cavm_cst_ccmplx_rom_romentry304_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY304 CAVM_CST_CCMPLX_ROM_ROMENTRY304_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY304_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY304_FUNC(void)
{
    return 0x87a0000004c0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY304 cavm_cst_ccmplx_rom_romentry304_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY304 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY304 "CST_CCMPLX_ROM_ROMENTRY304"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY304 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY304 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry305
 *
 * CST Ccmplx Rom Romentry305 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry305
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry305_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry305_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry305 cavm_cst_ccmplx_rom_romentry305_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY305 CAVM_CST_CCMPLX_ROM_ROMENTRY305_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY305_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY305_FUNC(void)
{
    return 0x87a0000004c4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY305 cavm_cst_ccmplx_rom_romentry305_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY305 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY305 "CST_CCMPLX_ROM_ROMENTRY305"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY305 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY305 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry306
 *
 * CST Ccmplx Rom Romentry306 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry306
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry306_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry306_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry306 cavm_cst_ccmplx_rom_romentry306_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY306 CAVM_CST_CCMPLX_ROM_ROMENTRY306_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY306_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY306_FUNC(void)
{
    return 0x87a0000004c8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY306 cavm_cst_ccmplx_rom_romentry306_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY306 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY306 "CST_CCMPLX_ROM_ROMENTRY306"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY306 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY306 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry307
 *
 * CST Ccmplx Rom Romentry307 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry307
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry307_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry307_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry307 cavm_cst_ccmplx_rom_romentry307_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY307 CAVM_CST_CCMPLX_ROM_ROMENTRY307_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY307_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY307_FUNC(void)
{
    return 0x87a0000004ccll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY307 cavm_cst_ccmplx_rom_romentry307_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY307 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY307 "CST_CCMPLX_ROM_ROMENTRY307"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY307 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY307 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry308
 *
 * CST Ccmplx Rom Romentry308 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry308
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry308_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry308_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry308 cavm_cst_ccmplx_rom_romentry308_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY308 CAVM_CST_CCMPLX_ROM_ROMENTRY308_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY308_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY308_FUNC(void)
{
    return 0x87a0000004d0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY308 cavm_cst_ccmplx_rom_romentry308_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY308 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY308 "CST_CCMPLX_ROM_ROMENTRY308"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY308 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY308 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry309
 *
 * CST Ccmplx Rom Romentry309 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry309
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry309_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry309_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry309 cavm_cst_ccmplx_rom_romentry309_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY309 CAVM_CST_CCMPLX_ROM_ROMENTRY309_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY309_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY309_FUNC(void)
{
    return 0x87a0000004d4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY309 cavm_cst_ccmplx_rom_romentry309_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY309 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY309 "CST_CCMPLX_ROM_ROMENTRY309"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY309 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY309 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry31
 *
 * CST Ccmplx Rom Romentry31 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry31
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry31_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry31_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry31 cavm_cst_ccmplx_rom_romentry31_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY31 CAVM_CST_CCMPLX_ROM_ROMENTRY31_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY31_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY31_FUNC(void)
{
    return 0x87a00000007cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY31 cavm_cst_ccmplx_rom_romentry31_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY31 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY31 "CST_CCMPLX_ROM_ROMENTRY31"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY31 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY31 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry310
 *
 * CST Ccmplx Rom Romentry310 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry310
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry310_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry310_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry310 cavm_cst_ccmplx_rom_romentry310_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY310 CAVM_CST_CCMPLX_ROM_ROMENTRY310_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY310_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY310_FUNC(void)
{
    return 0x87a0000004d8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY310 cavm_cst_ccmplx_rom_romentry310_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY310 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY310 "CST_CCMPLX_ROM_ROMENTRY310"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY310 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY310 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry311
 *
 * CST Ccmplx Rom Romentry311 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry311
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry311_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry311_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry311 cavm_cst_ccmplx_rom_romentry311_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY311 CAVM_CST_CCMPLX_ROM_ROMENTRY311_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY311_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY311_FUNC(void)
{
    return 0x87a0000004dcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY311 cavm_cst_ccmplx_rom_romentry311_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY311 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY311 "CST_CCMPLX_ROM_ROMENTRY311"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY311 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY311 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry312
 *
 * CST Ccmplx Rom Romentry312 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry312
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry312_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry312_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry312 cavm_cst_ccmplx_rom_romentry312_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY312 CAVM_CST_CCMPLX_ROM_ROMENTRY312_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY312_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY312_FUNC(void)
{
    return 0x87a0000004e0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY312 cavm_cst_ccmplx_rom_romentry312_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY312 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY312 "CST_CCMPLX_ROM_ROMENTRY312"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY312 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY312 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry313
 *
 * CST Ccmplx Rom Romentry313 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry313
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry313_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry313_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry313 cavm_cst_ccmplx_rom_romentry313_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY313 CAVM_CST_CCMPLX_ROM_ROMENTRY313_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY313_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY313_FUNC(void)
{
    return 0x87a0000004e4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY313 cavm_cst_ccmplx_rom_romentry313_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY313 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY313 "CST_CCMPLX_ROM_ROMENTRY313"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY313 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY313 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry314
 *
 * CST Ccmplx Rom Romentry314 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry314
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry314_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry314_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry314 cavm_cst_ccmplx_rom_romentry314_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY314 CAVM_CST_CCMPLX_ROM_ROMENTRY314_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY314_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY314_FUNC(void)
{
    return 0x87a0000004e8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY314 cavm_cst_ccmplx_rom_romentry314_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY314 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY314 "CST_CCMPLX_ROM_ROMENTRY314"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY314 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY314 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry315
 *
 * CST Ccmplx Rom Romentry315 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry315
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry315_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry315_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry315 cavm_cst_ccmplx_rom_romentry315_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY315 CAVM_CST_CCMPLX_ROM_ROMENTRY315_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY315_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY315_FUNC(void)
{
    return 0x87a0000004ecll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY315 cavm_cst_ccmplx_rom_romentry315_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY315 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY315 "CST_CCMPLX_ROM_ROMENTRY315"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY315 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY315 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry316
 *
 * CST Ccmplx Rom Romentry316 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry316
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry316_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry316_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry316 cavm_cst_ccmplx_rom_romentry316_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY316 CAVM_CST_CCMPLX_ROM_ROMENTRY316_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY316_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY316_FUNC(void)
{
    return 0x87a0000004f0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY316 cavm_cst_ccmplx_rom_romentry316_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY316 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY316 "CST_CCMPLX_ROM_ROMENTRY316"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY316 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY316 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry317
 *
 * CST Ccmplx Rom Romentry317 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry317
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry317_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry317_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry317 cavm_cst_ccmplx_rom_romentry317_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY317 CAVM_CST_CCMPLX_ROM_ROMENTRY317_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY317_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY317_FUNC(void)
{
    return 0x87a0000004f4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY317 cavm_cst_ccmplx_rom_romentry317_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY317 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY317 "CST_CCMPLX_ROM_ROMENTRY317"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY317 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY317 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry318
 *
 * CST Ccmplx Rom Romentry318 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry318
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry318_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry318_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry318 cavm_cst_ccmplx_rom_romentry318_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY318 CAVM_CST_CCMPLX_ROM_ROMENTRY318_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY318_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY318_FUNC(void)
{
    return 0x87a0000004f8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY318 cavm_cst_ccmplx_rom_romentry318_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY318 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY318 "CST_CCMPLX_ROM_ROMENTRY318"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY318 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY318 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry319
 *
 * CST Ccmplx Rom Romentry319 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry319
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry319_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry319_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry319 cavm_cst_ccmplx_rom_romentry319_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY319 CAVM_CST_CCMPLX_ROM_ROMENTRY319_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY319_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY319_FUNC(void)
{
    return 0x87a0000004fcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY319 cavm_cst_ccmplx_rom_romentry319_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY319 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY319 "CST_CCMPLX_ROM_ROMENTRY319"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY319 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY319 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry32
 *
 * CST Ccmplx Rom Romentry32 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry32
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry32_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry32_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry32 cavm_cst_ccmplx_rom_romentry32_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY32 CAVM_CST_CCMPLX_ROM_ROMENTRY32_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY32_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY32_FUNC(void)
{
    return 0x87a000000080ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY32 cavm_cst_ccmplx_rom_romentry32_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY32 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY32 "CST_CCMPLX_ROM_ROMENTRY32"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY32 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY32 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry320
 *
 * CST Ccmplx Rom Romentry320 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry320
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry320_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry320_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry320 cavm_cst_ccmplx_rom_romentry320_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY320 CAVM_CST_CCMPLX_ROM_ROMENTRY320_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY320_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY320_FUNC(void)
{
    return 0x87a000000500ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY320 cavm_cst_ccmplx_rom_romentry320_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY320 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY320 "CST_CCMPLX_ROM_ROMENTRY320"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY320 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY320 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry321
 *
 * CST Ccmplx Rom Romentry321 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry321
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry321_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry321_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry321 cavm_cst_ccmplx_rom_romentry321_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY321 CAVM_CST_CCMPLX_ROM_ROMENTRY321_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY321_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY321_FUNC(void)
{
    return 0x87a000000504ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY321 cavm_cst_ccmplx_rom_romentry321_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY321 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY321 "CST_CCMPLX_ROM_ROMENTRY321"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY321 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY321 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry322
 *
 * CST Ccmplx Rom Romentry322 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry322
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry322_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry322_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry322 cavm_cst_ccmplx_rom_romentry322_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY322 CAVM_CST_CCMPLX_ROM_ROMENTRY322_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY322_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY322_FUNC(void)
{
    return 0x87a000000508ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY322 cavm_cst_ccmplx_rom_romentry322_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY322 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY322 "CST_CCMPLX_ROM_ROMENTRY322"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY322 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY322 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry323
 *
 * CST Ccmplx Rom Romentry323 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry323
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry323_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry323_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry323 cavm_cst_ccmplx_rom_romentry323_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY323 CAVM_CST_CCMPLX_ROM_ROMENTRY323_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY323_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY323_FUNC(void)
{
    return 0x87a00000050cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY323 cavm_cst_ccmplx_rom_romentry323_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY323 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY323 "CST_CCMPLX_ROM_ROMENTRY323"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY323 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY323 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry324
 *
 * CST Ccmplx Rom Romentry324 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry324
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry324_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry324_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry324 cavm_cst_ccmplx_rom_romentry324_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY324 CAVM_CST_CCMPLX_ROM_ROMENTRY324_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY324_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY324_FUNC(void)
{
    return 0x87a000000510ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY324 cavm_cst_ccmplx_rom_romentry324_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY324 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY324 "CST_CCMPLX_ROM_ROMENTRY324"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY324 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY324 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry325
 *
 * CST Ccmplx Rom Romentry325 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry325
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry325_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry325_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry325 cavm_cst_ccmplx_rom_romentry325_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY325 CAVM_CST_CCMPLX_ROM_ROMENTRY325_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY325_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY325_FUNC(void)
{
    return 0x87a000000514ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY325 cavm_cst_ccmplx_rom_romentry325_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY325 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY325 "CST_CCMPLX_ROM_ROMENTRY325"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY325 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY325 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry326
 *
 * CST Ccmplx Rom Romentry326 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry326
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry326_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry326_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry326 cavm_cst_ccmplx_rom_romentry326_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY326 CAVM_CST_CCMPLX_ROM_ROMENTRY326_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY326_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY326_FUNC(void)
{
    return 0x87a000000518ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY326 cavm_cst_ccmplx_rom_romentry326_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY326 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY326 "CST_CCMPLX_ROM_ROMENTRY326"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY326 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY326 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry327
 *
 * CST Ccmplx Rom Romentry327 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry327
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry327_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry327_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry327 cavm_cst_ccmplx_rom_romentry327_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY327 CAVM_CST_CCMPLX_ROM_ROMENTRY327_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY327_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY327_FUNC(void)
{
    return 0x87a00000051cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY327 cavm_cst_ccmplx_rom_romentry327_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY327 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY327 "CST_CCMPLX_ROM_ROMENTRY327"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY327 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY327 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry328
 *
 * CST Ccmplx Rom Romentry328 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry328
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry328_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry328_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry328 cavm_cst_ccmplx_rom_romentry328_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY328 CAVM_CST_CCMPLX_ROM_ROMENTRY328_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY328_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY328_FUNC(void)
{
    return 0x87a000000520ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY328 cavm_cst_ccmplx_rom_romentry328_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY328 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY328 "CST_CCMPLX_ROM_ROMENTRY328"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY328 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY328 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry329
 *
 * CST Ccmplx Rom Romentry329 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry329
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry329_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry329_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry329 cavm_cst_ccmplx_rom_romentry329_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY329 CAVM_CST_CCMPLX_ROM_ROMENTRY329_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY329_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY329_FUNC(void)
{
    return 0x87a000000524ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY329 cavm_cst_ccmplx_rom_romentry329_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY329 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY329 "CST_CCMPLX_ROM_ROMENTRY329"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY329 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY329 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry33
 *
 * CST Ccmplx Rom Romentry33 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry33
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry33_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry33_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry33 cavm_cst_ccmplx_rom_romentry33_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY33 CAVM_CST_CCMPLX_ROM_ROMENTRY33_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY33_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY33_FUNC(void)
{
    return 0x87a000000084ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY33 cavm_cst_ccmplx_rom_romentry33_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY33 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY33 "CST_CCMPLX_ROM_ROMENTRY33"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY33 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY33 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry330
 *
 * CST Ccmplx Rom Romentry330 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry330
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry330_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry330_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry330 cavm_cst_ccmplx_rom_romentry330_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY330 CAVM_CST_CCMPLX_ROM_ROMENTRY330_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY330_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY330_FUNC(void)
{
    return 0x87a000000528ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY330 cavm_cst_ccmplx_rom_romentry330_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY330 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY330 "CST_CCMPLX_ROM_ROMENTRY330"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY330 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY330 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry331
 *
 * CST Ccmplx Rom Romentry331 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry331
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry331_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry331_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry331 cavm_cst_ccmplx_rom_romentry331_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY331 CAVM_CST_CCMPLX_ROM_ROMENTRY331_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY331_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY331_FUNC(void)
{
    return 0x87a00000052cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY331 cavm_cst_ccmplx_rom_romentry331_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY331 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY331 "CST_CCMPLX_ROM_ROMENTRY331"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY331 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY331 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry332
 *
 * CST Ccmplx Rom Romentry332 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry332
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry332_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry332_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry332 cavm_cst_ccmplx_rom_romentry332_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY332 CAVM_CST_CCMPLX_ROM_ROMENTRY332_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY332_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY332_FUNC(void)
{
    return 0x87a000000530ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY332 cavm_cst_ccmplx_rom_romentry332_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY332 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY332 "CST_CCMPLX_ROM_ROMENTRY332"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY332 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY332 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry333
 *
 * CST Ccmplx Rom Romentry333 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry333
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry333_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry333_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry333 cavm_cst_ccmplx_rom_romentry333_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY333 CAVM_CST_CCMPLX_ROM_ROMENTRY333_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY333_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY333_FUNC(void)
{
    return 0x87a000000534ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY333 cavm_cst_ccmplx_rom_romentry333_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY333 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY333 "CST_CCMPLX_ROM_ROMENTRY333"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY333 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY333 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry334
 *
 * CST Ccmplx Rom Romentry334 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry334
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry334_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry334_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry334 cavm_cst_ccmplx_rom_romentry334_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY334 CAVM_CST_CCMPLX_ROM_ROMENTRY334_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY334_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY334_FUNC(void)
{
    return 0x87a000000538ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY334 cavm_cst_ccmplx_rom_romentry334_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY334 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY334 "CST_CCMPLX_ROM_ROMENTRY334"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY334 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY334 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry335
 *
 * CST Ccmplx Rom Romentry335 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry335
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry335_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry335_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry335 cavm_cst_ccmplx_rom_romentry335_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY335 CAVM_CST_CCMPLX_ROM_ROMENTRY335_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY335_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY335_FUNC(void)
{
    return 0x87a00000053cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY335 cavm_cst_ccmplx_rom_romentry335_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY335 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY335 "CST_CCMPLX_ROM_ROMENTRY335"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY335 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY335 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry336
 *
 * CST Ccmplx Rom Romentry336 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry336
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry336_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry336_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry336 cavm_cst_ccmplx_rom_romentry336_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY336 CAVM_CST_CCMPLX_ROM_ROMENTRY336_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY336_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY336_FUNC(void)
{
    return 0x87a000000540ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY336 cavm_cst_ccmplx_rom_romentry336_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY336 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY336 "CST_CCMPLX_ROM_ROMENTRY336"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY336 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY336 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry337
 *
 * CST Ccmplx Rom Romentry337 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry337
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry337_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry337_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry337 cavm_cst_ccmplx_rom_romentry337_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY337 CAVM_CST_CCMPLX_ROM_ROMENTRY337_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY337_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY337_FUNC(void)
{
    return 0x87a000000544ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY337 cavm_cst_ccmplx_rom_romentry337_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY337 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY337 "CST_CCMPLX_ROM_ROMENTRY337"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY337 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY337 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry338
 *
 * CST Ccmplx Rom Romentry338 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry338
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry338_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry338_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry338 cavm_cst_ccmplx_rom_romentry338_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY338 CAVM_CST_CCMPLX_ROM_ROMENTRY338_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY338_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY338_FUNC(void)
{
    return 0x87a000000548ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY338 cavm_cst_ccmplx_rom_romentry338_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY338 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY338 "CST_CCMPLX_ROM_ROMENTRY338"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY338 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY338 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry339
 *
 * CST Ccmplx Rom Romentry339 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry339
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry339_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry339_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry339 cavm_cst_ccmplx_rom_romentry339_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY339 CAVM_CST_CCMPLX_ROM_ROMENTRY339_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY339_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY339_FUNC(void)
{
    return 0x87a00000054cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY339 cavm_cst_ccmplx_rom_romentry339_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY339 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY339 "CST_CCMPLX_ROM_ROMENTRY339"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY339 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY339 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry34
 *
 * CST Ccmplx Rom Romentry34 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry34
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry34_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry34_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry34 cavm_cst_ccmplx_rom_romentry34_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY34 CAVM_CST_CCMPLX_ROM_ROMENTRY34_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY34_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY34_FUNC(void)
{
    return 0x87a000000088ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY34 cavm_cst_ccmplx_rom_romentry34_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY34 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY34 "CST_CCMPLX_ROM_ROMENTRY34"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY34 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY34 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry340
 *
 * CST Ccmplx Rom Romentry340 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry340
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry340_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry340_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry340 cavm_cst_ccmplx_rom_romentry340_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY340 CAVM_CST_CCMPLX_ROM_ROMENTRY340_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY340_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY340_FUNC(void)
{
    return 0x87a000000550ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY340 cavm_cst_ccmplx_rom_romentry340_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY340 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY340 "CST_CCMPLX_ROM_ROMENTRY340"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY340 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY340 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry341
 *
 * CST Ccmplx Rom Romentry341 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry341
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry341_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry341_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry341 cavm_cst_ccmplx_rom_romentry341_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY341 CAVM_CST_CCMPLX_ROM_ROMENTRY341_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY341_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY341_FUNC(void)
{
    return 0x87a000000554ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY341 cavm_cst_ccmplx_rom_romentry341_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY341 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY341 "CST_CCMPLX_ROM_ROMENTRY341"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY341 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY341 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry342
 *
 * CST Ccmplx Rom Romentry342 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry342
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry342_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry342_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry342 cavm_cst_ccmplx_rom_romentry342_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY342 CAVM_CST_CCMPLX_ROM_ROMENTRY342_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY342_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY342_FUNC(void)
{
    return 0x87a000000558ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY342 cavm_cst_ccmplx_rom_romentry342_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY342 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY342 "CST_CCMPLX_ROM_ROMENTRY342"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY342 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY342 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry343
 *
 * CST Ccmplx Rom Romentry343 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry343
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry343_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry343_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry343 cavm_cst_ccmplx_rom_romentry343_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY343 CAVM_CST_CCMPLX_ROM_ROMENTRY343_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY343_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY343_FUNC(void)
{
    return 0x87a00000055cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY343 cavm_cst_ccmplx_rom_romentry343_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY343 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY343 "CST_CCMPLX_ROM_ROMENTRY343"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY343 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY343 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry344
 *
 * CST Ccmplx Rom Romentry344 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry344
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry344_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry344_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry344 cavm_cst_ccmplx_rom_romentry344_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY344 CAVM_CST_CCMPLX_ROM_ROMENTRY344_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY344_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY344_FUNC(void)
{
    return 0x87a000000560ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY344 cavm_cst_ccmplx_rom_romentry344_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY344 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY344 "CST_CCMPLX_ROM_ROMENTRY344"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY344 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY344 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry345
 *
 * CST Ccmplx Rom Romentry345 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry345
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry345_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry345_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry345 cavm_cst_ccmplx_rom_romentry345_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY345 CAVM_CST_CCMPLX_ROM_ROMENTRY345_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY345_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY345_FUNC(void)
{
    return 0x87a000000564ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY345 cavm_cst_ccmplx_rom_romentry345_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY345 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY345 "CST_CCMPLX_ROM_ROMENTRY345"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY345 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY345 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry346
 *
 * CST Ccmplx Rom Romentry346 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry346
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry346_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry346_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry346 cavm_cst_ccmplx_rom_romentry346_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY346 CAVM_CST_CCMPLX_ROM_ROMENTRY346_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY346_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY346_FUNC(void)
{
    return 0x87a000000568ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY346 cavm_cst_ccmplx_rom_romentry346_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY346 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY346 "CST_CCMPLX_ROM_ROMENTRY346"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY346 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY346 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry347
 *
 * CST Ccmplx Rom Romentry347 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry347
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry347_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry347_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry347 cavm_cst_ccmplx_rom_romentry347_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY347 CAVM_CST_CCMPLX_ROM_ROMENTRY347_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY347_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY347_FUNC(void)
{
    return 0x87a00000056cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY347 cavm_cst_ccmplx_rom_romentry347_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY347 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY347 "CST_CCMPLX_ROM_ROMENTRY347"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY347 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY347 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry348
 *
 * CST Ccmplx Rom Romentry348 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry348
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry348_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry348_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry348 cavm_cst_ccmplx_rom_romentry348_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY348 CAVM_CST_CCMPLX_ROM_ROMENTRY348_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY348_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY348_FUNC(void)
{
    return 0x87a000000570ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY348 cavm_cst_ccmplx_rom_romentry348_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY348 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY348 "CST_CCMPLX_ROM_ROMENTRY348"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY348 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY348 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry349
 *
 * CST Ccmplx Rom Romentry349 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry349
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry349_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry349_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry349 cavm_cst_ccmplx_rom_romentry349_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY349 CAVM_CST_CCMPLX_ROM_ROMENTRY349_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY349_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY349_FUNC(void)
{
    return 0x87a000000574ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY349 cavm_cst_ccmplx_rom_romentry349_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY349 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY349 "CST_CCMPLX_ROM_ROMENTRY349"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY349 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY349 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry35
 *
 * CST Ccmplx Rom Romentry35 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry35
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry35_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry35_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry35 cavm_cst_ccmplx_rom_romentry35_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY35 CAVM_CST_CCMPLX_ROM_ROMENTRY35_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY35_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY35_FUNC(void)
{
    return 0x87a00000008cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY35 cavm_cst_ccmplx_rom_romentry35_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY35 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY35 "CST_CCMPLX_ROM_ROMENTRY35"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY35 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY35 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry350
 *
 * CST Ccmplx Rom Romentry350 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry350
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry350_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry350_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry350 cavm_cst_ccmplx_rom_romentry350_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY350 CAVM_CST_CCMPLX_ROM_ROMENTRY350_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY350_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY350_FUNC(void)
{
    return 0x87a000000578ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY350 cavm_cst_ccmplx_rom_romentry350_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY350 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY350 "CST_CCMPLX_ROM_ROMENTRY350"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY350 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY350 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry351
 *
 * CST Ccmplx Rom Romentry351 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry351
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry351_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry351_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry351 cavm_cst_ccmplx_rom_romentry351_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY351 CAVM_CST_CCMPLX_ROM_ROMENTRY351_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY351_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY351_FUNC(void)
{
    return 0x87a00000057cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY351 cavm_cst_ccmplx_rom_romentry351_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY351 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY351 "CST_CCMPLX_ROM_ROMENTRY351"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY351 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY351 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry352
 *
 * CST Ccmplx Rom Romentry352 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry352
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry352_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry352_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry352 cavm_cst_ccmplx_rom_romentry352_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY352 CAVM_CST_CCMPLX_ROM_ROMENTRY352_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY352_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY352_FUNC(void)
{
    return 0x87a000000580ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY352 cavm_cst_ccmplx_rom_romentry352_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY352 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY352 "CST_CCMPLX_ROM_ROMENTRY352"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY352 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY352 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry353
 *
 * CST Ccmplx Rom Romentry353 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry353
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry353_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry353_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry353 cavm_cst_ccmplx_rom_romentry353_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY353 CAVM_CST_CCMPLX_ROM_ROMENTRY353_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY353_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY353_FUNC(void)
{
    return 0x87a000000584ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY353 cavm_cst_ccmplx_rom_romentry353_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY353 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY353 "CST_CCMPLX_ROM_ROMENTRY353"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY353 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY353 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry354
 *
 * CST Ccmplx Rom Romentry354 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry354
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry354_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry354_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry354 cavm_cst_ccmplx_rom_romentry354_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY354 CAVM_CST_CCMPLX_ROM_ROMENTRY354_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY354_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY354_FUNC(void)
{
    return 0x87a000000588ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY354 cavm_cst_ccmplx_rom_romentry354_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY354 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY354 "CST_CCMPLX_ROM_ROMENTRY354"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY354 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY354 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry355
 *
 * CST Ccmplx Rom Romentry355 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry355
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry355_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry355_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry355 cavm_cst_ccmplx_rom_romentry355_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY355 CAVM_CST_CCMPLX_ROM_ROMENTRY355_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY355_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY355_FUNC(void)
{
    return 0x87a00000058cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY355 cavm_cst_ccmplx_rom_romentry355_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY355 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY355 "CST_CCMPLX_ROM_ROMENTRY355"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY355 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY355 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry356
 *
 * CST Ccmplx Rom Romentry356 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry356
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry356_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry356_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry356 cavm_cst_ccmplx_rom_romentry356_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY356 CAVM_CST_CCMPLX_ROM_ROMENTRY356_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY356_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY356_FUNC(void)
{
    return 0x87a000000590ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY356 cavm_cst_ccmplx_rom_romentry356_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY356 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY356 "CST_CCMPLX_ROM_ROMENTRY356"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY356 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY356 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry357
 *
 * CST Ccmplx Rom Romentry357 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry357
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry357_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry357_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry357 cavm_cst_ccmplx_rom_romentry357_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY357 CAVM_CST_CCMPLX_ROM_ROMENTRY357_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY357_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY357_FUNC(void)
{
    return 0x87a000000594ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY357 cavm_cst_ccmplx_rom_romentry357_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY357 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY357 "CST_CCMPLX_ROM_ROMENTRY357"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY357 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY357 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry358
 *
 * CST Ccmplx Rom Romentry358 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry358
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry358_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry358_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry358 cavm_cst_ccmplx_rom_romentry358_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY358 CAVM_CST_CCMPLX_ROM_ROMENTRY358_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY358_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY358_FUNC(void)
{
    return 0x87a000000598ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY358 cavm_cst_ccmplx_rom_romentry358_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY358 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY358 "CST_CCMPLX_ROM_ROMENTRY358"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY358 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY358 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry359
 *
 * CST Ccmplx Rom Romentry359 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry359
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry359_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry359_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry359 cavm_cst_ccmplx_rom_romentry359_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY359 CAVM_CST_CCMPLX_ROM_ROMENTRY359_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY359_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY359_FUNC(void)
{
    return 0x87a00000059cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY359 cavm_cst_ccmplx_rom_romentry359_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY359 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY359 "CST_CCMPLX_ROM_ROMENTRY359"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY359 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY359 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry36
 *
 * CST Ccmplx Rom Romentry36 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry36
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry36_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry36_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry36 cavm_cst_ccmplx_rom_romentry36_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY36 CAVM_CST_CCMPLX_ROM_ROMENTRY36_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY36_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY36_FUNC(void)
{
    return 0x87a000000090ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY36 cavm_cst_ccmplx_rom_romentry36_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY36 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY36 "CST_CCMPLX_ROM_ROMENTRY36"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY36 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY36 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry360
 *
 * CST Ccmplx Rom Romentry360 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry360
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry360_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry360_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry360 cavm_cst_ccmplx_rom_romentry360_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY360 CAVM_CST_CCMPLX_ROM_ROMENTRY360_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY360_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY360_FUNC(void)
{
    return 0x87a0000005a0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY360 cavm_cst_ccmplx_rom_romentry360_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY360 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY360 "CST_CCMPLX_ROM_ROMENTRY360"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY360 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY360 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry361
 *
 * CST Ccmplx Rom Romentry361 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry361
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry361_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry361_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry361 cavm_cst_ccmplx_rom_romentry361_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY361 CAVM_CST_CCMPLX_ROM_ROMENTRY361_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY361_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY361_FUNC(void)
{
    return 0x87a0000005a4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY361 cavm_cst_ccmplx_rom_romentry361_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY361 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY361 "CST_CCMPLX_ROM_ROMENTRY361"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY361 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY361 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry362
 *
 * CST Ccmplx Rom Romentry362 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry362
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry362_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry362_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry362 cavm_cst_ccmplx_rom_romentry362_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY362 CAVM_CST_CCMPLX_ROM_ROMENTRY362_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY362_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY362_FUNC(void)
{
    return 0x87a0000005a8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY362 cavm_cst_ccmplx_rom_romentry362_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY362 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY362 "CST_CCMPLX_ROM_ROMENTRY362"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY362 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY362 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry363
 *
 * CST Ccmplx Rom Romentry363 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry363
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry363_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry363_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry363 cavm_cst_ccmplx_rom_romentry363_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY363 CAVM_CST_CCMPLX_ROM_ROMENTRY363_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY363_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY363_FUNC(void)
{
    return 0x87a0000005acll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY363 cavm_cst_ccmplx_rom_romentry363_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY363 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY363 "CST_CCMPLX_ROM_ROMENTRY363"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY363 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY363 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry364
 *
 * CST Ccmplx Rom Romentry364 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry364
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry364_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry364_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry364 cavm_cst_ccmplx_rom_romentry364_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY364 CAVM_CST_CCMPLX_ROM_ROMENTRY364_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY364_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY364_FUNC(void)
{
    return 0x87a0000005b0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY364 cavm_cst_ccmplx_rom_romentry364_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY364 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY364 "CST_CCMPLX_ROM_ROMENTRY364"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY364 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY364 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry365
 *
 * CST Ccmplx Rom Romentry365 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry365
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry365_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry365_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry365 cavm_cst_ccmplx_rom_romentry365_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY365 CAVM_CST_CCMPLX_ROM_ROMENTRY365_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY365_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY365_FUNC(void)
{
    return 0x87a0000005b4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY365 cavm_cst_ccmplx_rom_romentry365_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY365 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY365 "CST_CCMPLX_ROM_ROMENTRY365"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY365 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY365 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry366
 *
 * CST Ccmplx Rom Romentry366 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry366
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry366_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry366_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry366 cavm_cst_ccmplx_rom_romentry366_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY366 CAVM_CST_CCMPLX_ROM_ROMENTRY366_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY366_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY366_FUNC(void)
{
    return 0x87a0000005b8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY366 cavm_cst_ccmplx_rom_romentry366_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY366 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY366 "CST_CCMPLX_ROM_ROMENTRY366"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY366 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY366 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry367
 *
 * CST Ccmplx Rom Romentry367 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry367
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry367_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry367_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry367 cavm_cst_ccmplx_rom_romentry367_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY367 CAVM_CST_CCMPLX_ROM_ROMENTRY367_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY367_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY367_FUNC(void)
{
    return 0x87a0000005bcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY367 cavm_cst_ccmplx_rom_romentry367_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY367 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY367 "CST_CCMPLX_ROM_ROMENTRY367"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY367 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY367 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry368
 *
 * CST Ccmplx Rom Romentry368 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry368
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry368_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry368_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry368 cavm_cst_ccmplx_rom_romentry368_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY368 CAVM_CST_CCMPLX_ROM_ROMENTRY368_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY368_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY368_FUNC(void)
{
    return 0x87a0000005c0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY368 cavm_cst_ccmplx_rom_romentry368_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY368 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY368 "CST_CCMPLX_ROM_ROMENTRY368"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY368 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY368 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry369
 *
 * CST Ccmplx Rom Romentry369 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry369
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry369_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry369_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry369 cavm_cst_ccmplx_rom_romentry369_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY369 CAVM_CST_CCMPLX_ROM_ROMENTRY369_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY369_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY369_FUNC(void)
{
    return 0x87a0000005c4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY369 cavm_cst_ccmplx_rom_romentry369_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY369 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY369 "CST_CCMPLX_ROM_ROMENTRY369"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY369 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY369 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry37
 *
 * CST Ccmplx Rom Romentry37 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry37
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry37_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry37_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry37 cavm_cst_ccmplx_rom_romentry37_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY37 CAVM_CST_CCMPLX_ROM_ROMENTRY37_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY37_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY37_FUNC(void)
{
    return 0x87a000000094ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY37 cavm_cst_ccmplx_rom_romentry37_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY37 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY37 "CST_CCMPLX_ROM_ROMENTRY37"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY37 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY37 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry370
 *
 * CST Ccmplx Rom Romentry370 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry370
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry370_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry370_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry370 cavm_cst_ccmplx_rom_romentry370_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY370 CAVM_CST_CCMPLX_ROM_ROMENTRY370_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY370_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY370_FUNC(void)
{
    return 0x87a0000005c8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY370 cavm_cst_ccmplx_rom_romentry370_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY370 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY370 "CST_CCMPLX_ROM_ROMENTRY370"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY370 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY370 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry371
 *
 * CST Ccmplx Rom Romentry371 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry371
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry371_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry371_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry371 cavm_cst_ccmplx_rom_romentry371_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY371 CAVM_CST_CCMPLX_ROM_ROMENTRY371_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY371_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY371_FUNC(void)
{
    return 0x87a0000005ccll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY371 cavm_cst_ccmplx_rom_romentry371_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY371 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY371 "CST_CCMPLX_ROM_ROMENTRY371"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY371 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY371 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry372
 *
 * CST Ccmplx Rom Romentry372 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry372
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry372_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry372_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry372 cavm_cst_ccmplx_rom_romentry372_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY372 CAVM_CST_CCMPLX_ROM_ROMENTRY372_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY372_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY372_FUNC(void)
{
    return 0x87a0000005d0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY372 cavm_cst_ccmplx_rom_romentry372_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY372 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY372 "CST_CCMPLX_ROM_ROMENTRY372"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY372 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY372 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry373
 *
 * CST Ccmplx Rom Romentry373 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry373
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry373_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry373_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry373 cavm_cst_ccmplx_rom_romentry373_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY373 CAVM_CST_CCMPLX_ROM_ROMENTRY373_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY373_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY373_FUNC(void)
{
    return 0x87a0000005d4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY373 cavm_cst_ccmplx_rom_romentry373_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY373 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY373 "CST_CCMPLX_ROM_ROMENTRY373"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY373 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY373 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry374
 *
 * CST Ccmplx Rom Romentry374 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry374
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry374_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry374_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry374 cavm_cst_ccmplx_rom_romentry374_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY374 CAVM_CST_CCMPLX_ROM_ROMENTRY374_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY374_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY374_FUNC(void)
{
    return 0x87a0000005d8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY374 cavm_cst_ccmplx_rom_romentry374_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY374 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY374 "CST_CCMPLX_ROM_ROMENTRY374"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY374 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY374 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry375
 *
 * CST Ccmplx Rom Romentry375 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry375
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry375_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry375_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry375 cavm_cst_ccmplx_rom_romentry375_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY375 CAVM_CST_CCMPLX_ROM_ROMENTRY375_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY375_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY375_FUNC(void)
{
    return 0x87a0000005dcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY375 cavm_cst_ccmplx_rom_romentry375_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY375 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY375 "CST_CCMPLX_ROM_ROMENTRY375"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY375 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY375 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry376
 *
 * CST Ccmplx Rom Romentry376 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry376
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry376_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry376_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry376 cavm_cst_ccmplx_rom_romentry376_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY376 CAVM_CST_CCMPLX_ROM_ROMENTRY376_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY376_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY376_FUNC(void)
{
    return 0x87a0000005e0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY376 cavm_cst_ccmplx_rom_romentry376_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY376 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY376 "CST_CCMPLX_ROM_ROMENTRY376"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY376 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY376 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry377
 *
 * CST Ccmplx Rom Romentry377 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry377
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry377_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry377_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry377 cavm_cst_ccmplx_rom_romentry377_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY377 CAVM_CST_CCMPLX_ROM_ROMENTRY377_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY377_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY377_FUNC(void)
{
    return 0x87a0000005e4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY377 cavm_cst_ccmplx_rom_romentry377_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY377 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY377 "CST_CCMPLX_ROM_ROMENTRY377"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY377 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY377 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry378
 *
 * CST Ccmplx Rom Romentry378 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry378
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry378_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry378_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry378 cavm_cst_ccmplx_rom_romentry378_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY378 CAVM_CST_CCMPLX_ROM_ROMENTRY378_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY378_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY378_FUNC(void)
{
    return 0x87a0000005e8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY378 cavm_cst_ccmplx_rom_romentry378_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY378 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY378 "CST_CCMPLX_ROM_ROMENTRY378"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY378 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY378 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry379
 *
 * CST Ccmplx Rom Romentry379 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry379
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry379_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry379_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry379 cavm_cst_ccmplx_rom_romentry379_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY379 CAVM_CST_CCMPLX_ROM_ROMENTRY379_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY379_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY379_FUNC(void)
{
    return 0x87a0000005ecll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY379 cavm_cst_ccmplx_rom_romentry379_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY379 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY379 "CST_CCMPLX_ROM_ROMENTRY379"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY379 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY379 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry38
 *
 * CST Ccmplx Rom Romentry38 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry38
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry38_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry38_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry38 cavm_cst_ccmplx_rom_romentry38_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY38 CAVM_CST_CCMPLX_ROM_ROMENTRY38_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY38_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY38_FUNC(void)
{
    return 0x87a000000098ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY38 cavm_cst_ccmplx_rom_romentry38_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY38 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY38 "CST_CCMPLX_ROM_ROMENTRY38"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY38 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY38 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry380
 *
 * CST Ccmplx Rom Romentry380 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry380
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry380_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry380_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry380 cavm_cst_ccmplx_rom_romentry380_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY380 CAVM_CST_CCMPLX_ROM_ROMENTRY380_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY380_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY380_FUNC(void)
{
    return 0x87a0000005f0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY380 cavm_cst_ccmplx_rom_romentry380_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY380 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY380 "CST_CCMPLX_ROM_ROMENTRY380"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY380 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY380 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry381
 *
 * CST Ccmplx Rom Romentry381 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry381
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry381_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry381_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry381 cavm_cst_ccmplx_rom_romentry381_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY381 CAVM_CST_CCMPLX_ROM_ROMENTRY381_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY381_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY381_FUNC(void)
{
    return 0x87a0000005f4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY381 cavm_cst_ccmplx_rom_romentry381_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY381 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY381 "CST_CCMPLX_ROM_ROMENTRY381"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY381 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY381 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry382
 *
 * CST Ccmplx Rom Romentry382 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry382
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry382_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry382_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry382 cavm_cst_ccmplx_rom_romentry382_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY382 CAVM_CST_CCMPLX_ROM_ROMENTRY382_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY382_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY382_FUNC(void)
{
    return 0x87a0000005f8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY382 cavm_cst_ccmplx_rom_romentry382_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY382 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY382 "CST_CCMPLX_ROM_ROMENTRY382"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY382 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY382 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry383
 *
 * CST Ccmplx Rom Romentry383 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry383
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry383_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry383_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry383 cavm_cst_ccmplx_rom_romentry383_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY383 CAVM_CST_CCMPLX_ROM_ROMENTRY383_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY383_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY383_FUNC(void)
{
    return 0x87a0000005fcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY383 cavm_cst_ccmplx_rom_romentry383_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY383 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY383 "CST_CCMPLX_ROM_ROMENTRY383"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY383 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY383 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry384
 *
 * CST Ccmplx Rom Romentry384 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry384
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry384_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry384_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry384 cavm_cst_ccmplx_rom_romentry384_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY384 CAVM_CST_CCMPLX_ROM_ROMENTRY384_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY384_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY384_FUNC(void)
{
    return 0x87a000000600ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY384 cavm_cst_ccmplx_rom_romentry384_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY384 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY384 "CST_CCMPLX_ROM_ROMENTRY384"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY384 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY384 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry385
 *
 * CST Ccmplx Rom Romentry385 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry385
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry385_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry385_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry385 cavm_cst_ccmplx_rom_romentry385_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY385 CAVM_CST_CCMPLX_ROM_ROMENTRY385_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY385_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY385_FUNC(void)
{
    return 0x87a000000604ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY385 cavm_cst_ccmplx_rom_romentry385_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY385 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY385 "CST_CCMPLX_ROM_ROMENTRY385"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY385 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY385 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry386
 *
 * CST Ccmplx Rom Romentry386 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry386
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry386_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry386_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry386 cavm_cst_ccmplx_rom_romentry386_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY386 CAVM_CST_CCMPLX_ROM_ROMENTRY386_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY386_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY386_FUNC(void)
{
    return 0x87a000000608ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY386 cavm_cst_ccmplx_rom_romentry386_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY386 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY386 "CST_CCMPLX_ROM_ROMENTRY386"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY386 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY386 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry387
 *
 * CST Ccmplx Rom Romentry387 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry387
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry387_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry387_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry387 cavm_cst_ccmplx_rom_romentry387_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY387 CAVM_CST_CCMPLX_ROM_ROMENTRY387_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY387_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY387_FUNC(void)
{
    return 0x87a00000060cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY387 cavm_cst_ccmplx_rom_romentry387_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY387 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY387 "CST_CCMPLX_ROM_ROMENTRY387"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY387 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY387 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry388
 *
 * CST Ccmplx Rom Romentry388 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry388
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry388_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry388_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry388 cavm_cst_ccmplx_rom_romentry388_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY388 CAVM_CST_CCMPLX_ROM_ROMENTRY388_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY388_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY388_FUNC(void)
{
    return 0x87a000000610ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY388 cavm_cst_ccmplx_rom_romentry388_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY388 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY388 "CST_CCMPLX_ROM_ROMENTRY388"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY388 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY388 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry389
 *
 * CST Ccmplx Rom Romentry389 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry389
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry389_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry389_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry389 cavm_cst_ccmplx_rom_romentry389_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY389 CAVM_CST_CCMPLX_ROM_ROMENTRY389_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY389_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY389_FUNC(void)
{
    return 0x87a000000614ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY389 cavm_cst_ccmplx_rom_romentry389_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY389 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY389 "CST_CCMPLX_ROM_ROMENTRY389"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY389 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY389 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry39
 *
 * CST Ccmplx Rom Romentry39 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry39
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry39_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry39_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry39 cavm_cst_ccmplx_rom_romentry39_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY39 CAVM_CST_CCMPLX_ROM_ROMENTRY39_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY39_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY39_FUNC(void)
{
    return 0x87a00000009cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY39 cavm_cst_ccmplx_rom_romentry39_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY39 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY39 "CST_CCMPLX_ROM_ROMENTRY39"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY39 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY39 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry390
 *
 * CST Ccmplx Rom Romentry390 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry390
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry390_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry390_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry390 cavm_cst_ccmplx_rom_romentry390_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY390 CAVM_CST_CCMPLX_ROM_ROMENTRY390_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY390_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY390_FUNC(void)
{
    return 0x87a000000618ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY390 cavm_cst_ccmplx_rom_romentry390_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY390 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY390 "CST_CCMPLX_ROM_ROMENTRY390"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY390 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY390 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry391
 *
 * CST Ccmplx Rom Romentry391 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry391
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry391_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry391_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry391 cavm_cst_ccmplx_rom_romentry391_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY391 CAVM_CST_CCMPLX_ROM_ROMENTRY391_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY391_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY391_FUNC(void)
{
    return 0x87a00000061cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY391 cavm_cst_ccmplx_rom_romentry391_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY391 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY391 "CST_CCMPLX_ROM_ROMENTRY391"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY391 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY391 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry392
 *
 * CST Ccmplx Rom Romentry392 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry392
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry392_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry392_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry392 cavm_cst_ccmplx_rom_romentry392_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY392 CAVM_CST_CCMPLX_ROM_ROMENTRY392_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY392_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY392_FUNC(void)
{
    return 0x87a000000620ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY392 cavm_cst_ccmplx_rom_romentry392_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY392 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY392 "CST_CCMPLX_ROM_ROMENTRY392"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY392 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY392 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry393
 *
 * CST Ccmplx Rom Romentry393 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry393
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry393_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry393_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry393 cavm_cst_ccmplx_rom_romentry393_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY393 CAVM_CST_CCMPLX_ROM_ROMENTRY393_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY393_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY393_FUNC(void)
{
    return 0x87a000000624ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY393 cavm_cst_ccmplx_rom_romentry393_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY393 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY393 "CST_CCMPLX_ROM_ROMENTRY393"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY393 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY393 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry394
 *
 * CST Ccmplx Rom Romentry394 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry394
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry394_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry394_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry394 cavm_cst_ccmplx_rom_romentry394_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY394 CAVM_CST_CCMPLX_ROM_ROMENTRY394_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY394_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY394_FUNC(void)
{
    return 0x87a000000628ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY394 cavm_cst_ccmplx_rom_romentry394_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY394 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY394 "CST_CCMPLX_ROM_ROMENTRY394"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY394 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY394 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry395
 *
 * CST Ccmplx Rom Romentry395 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry395
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry395_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry395_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry395 cavm_cst_ccmplx_rom_romentry395_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY395 CAVM_CST_CCMPLX_ROM_ROMENTRY395_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY395_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY395_FUNC(void)
{
    return 0x87a00000062cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY395 cavm_cst_ccmplx_rom_romentry395_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY395 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY395 "CST_CCMPLX_ROM_ROMENTRY395"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY395 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY395 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry396
 *
 * CST Ccmplx Rom Romentry396 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry396
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry396_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry396_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry396 cavm_cst_ccmplx_rom_romentry396_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY396 CAVM_CST_CCMPLX_ROM_ROMENTRY396_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY396_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY396_FUNC(void)
{
    return 0x87a000000630ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY396 cavm_cst_ccmplx_rom_romentry396_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY396 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY396 "CST_CCMPLX_ROM_ROMENTRY396"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY396 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY396 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry397
 *
 * CST Ccmplx Rom Romentry397 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry397
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry397_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry397_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry397 cavm_cst_ccmplx_rom_romentry397_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY397 CAVM_CST_CCMPLX_ROM_ROMENTRY397_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY397_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY397_FUNC(void)
{
    return 0x87a000000634ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY397 cavm_cst_ccmplx_rom_romentry397_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY397 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY397 "CST_CCMPLX_ROM_ROMENTRY397"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY397 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY397 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry398
 *
 * CST Ccmplx Rom Romentry398 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry398
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry398_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry398_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry398 cavm_cst_ccmplx_rom_romentry398_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY398 CAVM_CST_CCMPLX_ROM_ROMENTRY398_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY398_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY398_FUNC(void)
{
    return 0x87a000000638ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY398 cavm_cst_ccmplx_rom_romentry398_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY398 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY398 "CST_CCMPLX_ROM_ROMENTRY398"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY398 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY398 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry399
 *
 * CST Ccmplx Rom Romentry399 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry399
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry399_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry399_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry399 cavm_cst_ccmplx_rom_romentry399_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY399 CAVM_CST_CCMPLX_ROM_ROMENTRY399_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY399_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY399_FUNC(void)
{
    return 0x87a00000063cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY399 cavm_cst_ccmplx_rom_romentry399_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY399 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY399 "CST_CCMPLX_ROM_ROMENTRY399"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY399 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY399 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry4
 *
 * CST Ccmplx Rom Romentry4 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry4
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry4_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry4_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry4 cavm_cst_ccmplx_rom_romentry4_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY4 CAVM_CST_CCMPLX_ROM_ROMENTRY4_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY4_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY4_FUNC(void)
{
    return 0x87a000000010ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY4 cavm_cst_ccmplx_rom_romentry4_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY4 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY4 "CST_CCMPLX_ROM_ROMENTRY4"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY4 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY4 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry40
 *
 * CST Ccmplx Rom Romentry40 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry40
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry40_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry40_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry40 cavm_cst_ccmplx_rom_romentry40_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY40 CAVM_CST_CCMPLX_ROM_ROMENTRY40_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY40_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY40_FUNC(void)
{
    return 0x87a0000000a0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY40 cavm_cst_ccmplx_rom_romentry40_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY40 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY40 "CST_CCMPLX_ROM_ROMENTRY40"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY40 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY40 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry400
 *
 * CST Ccmplx Rom Romentry400 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry400
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry400_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry400_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry400 cavm_cst_ccmplx_rom_romentry400_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY400 CAVM_CST_CCMPLX_ROM_ROMENTRY400_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY400_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY400_FUNC(void)
{
    return 0x87a000000640ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY400 cavm_cst_ccmplx_rom_romentry400_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY400 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY400 "CST_CCMPLX_ROM_ROMENTRY400"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY400 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY400 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry401
 *
 * CST Ccmplx Rom Romentry401 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry401
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry401_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry401_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry401 cavm_cst_ccmplx_rom_romentry401_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY401 CAVM_CST_CCMPLX_ROM_ROMENTRY401_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY401_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY401_FUNC(void)
{
    return 0x87a000000644ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY401 cavm_cst_ccmplx_rom_romentry401_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY401 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY401 "CST_CCMPLX_ROM_ROMENTRY401"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY401 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY401 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry402
 *
 * CST Ccmplx Rom Romentry402 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry402
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry402_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry402_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry402 cavm_cst_ccmplx_rom_romentry402_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY402 CAVM_CST_CCMPLX_ROM_ROMENTRY402_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY402_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY402_FUNC(void)
{
    return 0x87a000000648ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY402 cavm_cst_ccmplx_rom_romentry402_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY402 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY402 "CST_CCMPLX_ROM_ROMENTRY402"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY402 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY402 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry403
 *
 * CST Ccmplx Rom Romentry403 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry403
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry403_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry403_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry403 cavm_cst_ccmplx_rom_romentry403_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY403 CAVM_CST_CCMPLX_ROM_ROMENTRY403_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY403_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY403_FUNC(void)
{
    return 0x87a00000064cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY403 cavm_cst_ccmplx_rom_romentry403_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY403 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY403 "CST_CCMPLX_ROM_ROMENTRY403"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY403 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY403 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry404
 *
 * CST Ccmplx Rom Romentry404 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry404
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry404_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry404_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry404 cavm_cst_ccmplx_rom_romentry404_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY404 CAVM_CST_CCMPLX_ROM_ROMENTRY404_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY404_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY404_FUNC(void)
{
    return 0x87a000000650ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY404 cavm_cst_ccmplx_rom_romentry404_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY404 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY404 "CST_CCMPLX_ROM_ROMENTRY404"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY404 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY404 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry405
 *
 * CST Ccmplx Rom Romentry405 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry405
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry405_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry405_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry405 cavm_cst_ccmplx_rom_romentry405_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY405 CAVM_CST_CCMPLX_ROM_ROMENTRY405_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY405_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY405_FUNC(void)
{
    return 0x87a000000654ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY405 cavm_cst_ccmplx_rom_romentry405_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY405 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY405 "CST_CCMPLX_ROM_ROMENTRY405"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY405 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY405 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry406
 *
 * CST Ccmplx Rom Romentry406 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry406
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry406_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry406_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry406 cavm_cst_ccmplx_rom_romentry406_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY406 CAVM_CST_CCMPLX_ROM_ROMENTRY406_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY406_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY406_FUNC(void)
{
    return 0x87a000000658ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY406 cavm_cst_ccmplx_rom_romentry406_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY406 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY406 "CST_CCMPLX_ROM_ROMENTRY406"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY406 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY406 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry407
 *
 * CST Ccmplx Rom Romentry407 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry407
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry407_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry407_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry407 cavm_cst_ccmplx_rom_romentry407_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY407 CAVM_CST_CCMPLX_ROM_ROMENTRY407_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY407_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY407_FUNC(void)
{
    return 0x87a00000065cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY407 cavm_cst_ccmplx_rom_romentry407_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY407 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY407 "CST_CCMPLX_ROM_ROMENTRY407"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY407 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY407 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry408
 *
 * CST Ccmplx Rom Romentry408 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry408
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry408_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry408_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry408 cavm_cst_ccmplx_rom_romentry408_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY408 CAVM_CST_CCMPLX_ROM_ROMENTRY408_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY408_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY408_FUNC(void)
{
    return 0x87a000000660ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY408 cavm_cst_ccmplx_rom_romentry408_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY408 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY408 "CST_CCMPLX_ROM_ROMENTRY408"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY408 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY408 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry409
 *
 * CST Ccmplx Rom Romentry409 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry409
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry409_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry409_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry409 cavm_cst_ccmplx_rom_romentry409_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY409 CAVM_CST_CCMPLX_ROM_ROMENTRY409_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY409_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY409_FUNC(void)
{
    return 0x87a000000664ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY409 cavm_cst_ccmplx_rom_romentry409_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY409 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY409 "CST_CCMPLX_ROM_ROMENTRY409"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY409 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY409 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry41
 *
 * CST Ccmplx Rom Romentry41 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry41
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry41_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry41_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry41 cavm_cst_ccmplx_rom_romentry41_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY41 CAVM_CST_CCMPLX_ROM_ROMENTRY41_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY41_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY41_FUNC(void)
{
    return 0x87a0000000a4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY41 cavm_cst_ccmplx_rom_romentry41_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY41 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY41 "CST_CCMPLX_ROM_ROMENTRY41"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY41 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY41 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry410
 *
 * CST Ccmplx Rom Romentry410 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry410
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry410_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry410_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry410 cavm_cst_ccmplx_rom_romentry410_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY410 CAVM_CST_CCMPLX_ROM_ROMENTRY410_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY410_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY410_FUNC(void)
{
    return 0x87a000000668ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY410 cavm_cst_ccmplx_rom_romentry410_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY410 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY410 "CST_CCMPLX_ROM_ROMENTRY410"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY410 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY410 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry411
 *
 * CST Ccmplx Rom Romentry411 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry411
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry411_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry411_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry411 cavm_cst_ccmplx_rom_romentry411_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY411 CAVM_CST_CCMPLX_ROM_ROMENTRY411_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY411_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY411_FUNC(void)
{
    return 0x87a00000066cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY411 cavm_cst_ccmplx_rom_romentry411_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY411 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY411 "CST_CCMPLX_ROM_ROMENTRY411"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY411 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY411 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry412
 *
 * CST Ccmplx Rom Romentry412 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry412
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry412_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry412_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry412 cavm_cst_ccmplx_rom_romentry412_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY412 CAVM_CST_CCMPLX_ROM_ROMENTRY412_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY412_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY412_FUNC(void)
{
    return 0x87a000000670ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY412 cavm_cst_ccmplx_rom_romentry412_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY412 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY412 "CST_CCMPLX_ROM_ROMENTRY412"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY412 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY412 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry413
 *
 * CST Ccmplx Rom Romentry413 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry413
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry413_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry413_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry413 cavm_cst_ccmplx_rom_romentry413_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY413 CAVM_CST_CCMPLX_ROM_ROMENTRY413_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY413_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY413_FUNC(void)
{
    return 0x87a000000674ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY413 cavm_cst_ccmplx_rom_romentry413_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY413 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY413 "CST_CCMPLX_ROM_ROMENTRY413"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY413 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY413 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry414
 *
 * CST Ccmplx Rom Romentry414 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry414
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry414_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry414_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry414 cavm_cst_ccmplx_rom_romentry414_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY414 CAVM_CST_CCMPLX_ROM_ROMENTRY414_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY414_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY414_FUNC(void)
{
    return 0x87a000000678ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY414 cavm_cst_ccmplx_rom_romentry414_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY414 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY414 "CST_CCMPLX_ROM_ROMENTRY414"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY414 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY414 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry415
 *
 * CST Ccmplx Rom Romentry415 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry415
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry415_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry415_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry415 cavm_cst_ccmplx_rom_romentry415_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY415 CAVM_CST_CCMPLX_ROM_ROMENTRY415_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY415_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY415_FUNC(void)
{
    return 0x87a00000067cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY415 cavm_cst_ccmplx_rom_romentry415_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY415 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY415 "CST_CCMPLX_ROM_ROMENTRY415"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY415 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY415 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry416
 *
 * CST Ccmplx Rom Romentry416 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry416
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry416_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry416_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry416 cavm_cst_ccmplx_rom_romentry416_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY416 CAVM_CST_CCMPLX_ROM_ROMENTRY416_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY416_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY416_FUNC(void)
{
    return 0x87a000000680ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY416 cavm_cst_ccmplx_rom_romentry416_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY416 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY416 "CST_CCMPLX_ROM_ROMENTRY416"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY416 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY416 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry417
 *
 * CST Ccmplx Rom Romentry417 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry417
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry417_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry417_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry417 cavm_cst_ccmplx_rom_romentry417_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY417 CAVM_CST_CCMPLX_ROM_ROMENTRY417_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY417_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY417_FUNC(void)
{
    return 0x87a000000684ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY417 cavm_cst_ccmplx_rom_romentry417_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY417 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY417 "CST_CCMPLX_ROM_ROMENTRY417"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY417 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY417 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry418
 *
 * CST Ccmplx Rom Romentry418 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry418
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry418_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry418_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry418 cavm_cst_ccmplx_rom_romentry418_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY418 CAVM_CST_CCMPLX_ROM_ROMENTRY418_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY418_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY418_FUNC(void)
{
    return 0x87a000000688ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY418 cavm_cst_ccmplx_rom_romentry418_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY418 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY418 "CST_CCMPLX_ROM_ROMENTRY418"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY418 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY418 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry419
 *
 * CST Ccmplx Rom Romentry419 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry419
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry419_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry419_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry419 cavm_cst_ccmplx_rom_romentry419_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY419 CAVM_CST_CCMPLX_ROM_ROMENTRY419_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY419_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY419_FUNC(void)
{
    return 0x87a00000068cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY419 cavm_cst_ccmplx_rom_romentry419_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY419 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY419 "CST_CCMPLX_ROM_ROMENTRY419"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY419 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY419 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry42
 *
 * CST Ccmplx Rom Romentry42 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry42
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry42_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry42_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry42 cavm_cst_ccmplx_rom_romentry42_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY42 CAVM_CST_CCMPLX_ROM_ROMENTRY42_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY42_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY42_FUNC(void)
{
    return 0x87a0000000a8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY42 cavm_cst_ccmplx_rom_romentry42_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY42 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY42 "CST_CCMPLX_ROM_ROMENTRY42"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY42 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY42 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry420
 *
 * CST Ccmplx Rom Romentry420 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry420
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry420_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry420_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry420 cavm_cst_ccmplx_rom_romentry420_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY420 CAVM_CST_CCMPLX_ROM_ROMENTRY420_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY420_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY420_FUNC(void)
{
    return 0x87a000000690ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY420 cavm_cst_ccmplx_rom_romentry420_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY420 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY420 "CST_CCMPLX_ROM_ROMENTRY420"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY420 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY420 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry421
 *
 * CST Ccmplx Rom Romentry421 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry421
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry421_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry421_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry421 cavm_cst_ccmplx_rom_romentry421_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY421 CAVM_CST_CCMPLX_ROM_ROMENTRY421_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY421_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY421_FUNC(void)
{
    return 0x87a000000694ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY421 cavm_cst_ccmplx_rom_romentry421_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY421 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY421 "CST_CCMPLX_ROM_ROMENTRY421"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY421 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY421 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry422
 *
 * CST Ccmplx Rom Romentry422 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry422
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry422_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry422_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry422 cavm_cst_ccmplx_rom_romentry422_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY422 CAVM_CST_CCMPLX_ROM_ROMENTRY422_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY422_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY422_FUNC(void)
{
    return 0x87a000000698ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY422 cavm_cst_ccmplx_rom_romentry422_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY422 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY422 "CST_CCMPLX_ROM_ROMENTRY422"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY422 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY422 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry423
 *
 * CST Ccmplx Rom Romentry423 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry423
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry423_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry423_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry423 cavm_cst_ccmplx_rom_romentry423_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY423 CAVM_CST_CCMPLX_ROM_ROMENTRY423_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY423_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY423_FUNC(void)
{
    return 0x87a00000069cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY423 cavm_cst_ccmplx_rom_romentry423_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY423 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY423 "CST_CCMPLX_ROM_ROMENTRY423"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY423 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY423 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry424
 *
 * CST Ccmplx Rom Romentry424 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry424
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry424_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry424_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry424 cavm_cst_ccmplx_rom_romentry424_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY424 CAVM_CST_CCMPLX_ROM_ROMENTRY424_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY424_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY424_FUNC(void)
{
    return 0x87a0000006a0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY424 cavm_cst_ccmplx_rom_romentry424_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY424 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY424 "CST_CCMPLX_ROM_ROMENTRY424"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY424 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY424 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry425
 *
 * CST Ccmplx Rom Romentry425 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry425
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry425_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry425_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry425 cavm_cst_ccmplx_rom_romentry425_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY425 CAVM_CST_CCMPLX_ROM_ROMENTRY425_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY425_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY425_FUNC(void)
{
    return 0x87a0000006a4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY425 cavm_cst_ccmplx_rom_romentry425_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY425 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY425 "CST_CCMPLX_ROM_ROMENTRY425"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY425 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY425 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry426
 *
 * CST Ccmplx Rom Romentry426 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry426
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry426_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry426_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry426 cavm_cst_ccmplx_rom_romentry426_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY426 CAVM_CST_CCMPLX_ROM_ROMENTRY426_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY426_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY426_FUNC(void)
{
    return 0x87a0000006a8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY426 cavm_cst_ccmplx_rom_romentry426_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY426 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY426 "CST_CCMPLX_ROM_ROMENTRY426"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY426 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY426 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry427
 *
 * CST Ccmplx Rom Romentry427 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry427
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry427_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry427_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry427 cavm_cst_ccmplx_rom_romentry427_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY427 CAVM_CST_CCMPLX_ROM_ROMENTRY427_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY427_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY427_FUNC(void)
{
    return 0x87a0000006acll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY427 cavm_cst_ccmplx_rom_romentry427_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY427 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY427 "CST_CCMPLX_ROM_ROMENTRY427"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY427 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY427 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry428
 *
 * CST Ccmplx Rom Romentry428 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry428
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry428_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry428_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry428 cavm_cst_ccmplx_rom_romentry428_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY428 CAVM_CST_CCMPLX_ROM_ROMENTRY428_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY428_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY428_FUNC(void)
{
    return 0x87a0000006b0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY428 cavm_cst_ccmplx_rom_romentry428_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY428 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY428 "CST_CCMPLX_ROM_ROMENTRY428"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY428 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY428 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry429
 *
 * CST Ccmplx Rom Romentry429 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry429
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry429_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry429_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry429 cavm_cst_ccmplx_rom_romentry429_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY429 CAVM_CST_CCMPLX_ROM_ROMENTRY429_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY429_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY429_FUNC(void)
{
    return 0x87a0000006b4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY429 cavm_cst_ccmplx_rom_romentry429_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY429 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY429 "CST_CCMPLX_ROM_ROMENTRY429"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY429 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY429 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry43
 *
 * CST Ccmplx Rom Romentry43 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry43
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry43_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry43_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry43 cavm_cst_ccmplx_rom_romentry43_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY43 CAVM_CST_CCMPLX_ROM_ROMENTRY43_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY43_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY43_FUNC(void)
{
    return 0x87a0000000acll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY43 cavm_cst_ccmplx_rom_romentry43_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY43 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY43 "CST_CCMPLX_ROM_ROMENTRY43"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY43 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY43 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry430
 *
 * CST Ccmplx Rom Romentry430 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry430
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry430_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry430_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry430 cavm_cst_ccmplx_rom_romentry430_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY430 CAVM_CST_CCMPLX_ROM_ROMENTRY430_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY430_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY430_FUNC(void)
{
    return 0x87a0000006b8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY430 cavm_cst_ccmplx_rom_romentry430_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY430 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY430 "CST_CCMPLX_ROM_ROMENTRY430"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY430 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY430 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry431
 *
 * CST Ccmplx Rom Romentry431 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry431
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry431_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry431_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry431 cavm_cst_ccmplx_rom_romentry431_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY431 CAVM_CST_CCMPLX_ROM_ROMENTRY431_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY431_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY431_FUNC(void)
{
    return 0x87a0000006bcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY431 cavm_cst_ccmplx_rom_romentry431_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY431 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY431 "CST_CCMPLX_ROM_ROMENTRY431"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY431 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY431 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry432
 *
 * CST Ccmplx Rom Romentry432 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry432
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry432_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry432_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry432 cavm_cst_ccmplx_rom_romentry432_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY432 CAVM_CST_CCMPLX_ROM_ROMENTRY432_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY432_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY432_FUNC(void)
{
    return 0x87a0000006c0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY432 cavm_cst_ccmplx_rom_romentry432_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY432 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY432 "CST_CCMPLX_ROM_ROMENTRY432"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY432 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY432 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry433
 *
 * CST Ccmplx Rom Romentry433 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry433
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry433_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry433_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry433 cavm_cst_ccmplx_rom_romentry433_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY433 CAVM_CST_CCMPLX_ROM_ROMENTRY433_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY433_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY433_FUNC(void)
{
    return 0x87a0000006c4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY433 cavm_cst_ccmplx_rom_romentry433_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY433 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY433 "CST_CCMPLX_ROM_ROMENTRY433"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY433 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY433 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry434
 *
 * CST Ccmplx Rom Romentry434 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry434
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry434_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry434_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry434 cavm_cst_ccmplx_rom_romentry434_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY434 CAVM_CST_CCMPLX_ROM_ROMENTRY434_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY434_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY434_FUNC(void)
{
    return 0x87a0000006c8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY434 cavm_cst_ccmplx_rom_romentry434_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY434 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY434 "CST_CCMPLX_ROM_ROMENTRY434"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY434 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY434 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry435
 *
 * CST Ccmplx Rom Romentry435 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry435
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry435_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry435_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry435 cavm_cst_ccmplx_rom_romentry435_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY435 CAVM_CST_CCMPLX_ROM_ROMENTRY435_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY435_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY435_FUNC(void)
{
    return 0x87a0000006ccll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY435 cavm_cst_ccmplx_rom_romentry435_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY435 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY435 "CST_CCMPLX_ROM_ROMENTRY435"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY435 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY435 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry436
 *
 * CST Ccmplx Rom Romentry436 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry436
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry436_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry436_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry436 cavm_cst_ccmplx_rom_romentry436_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY436 CAVM_CST_CCMPLX_ROM_ROMENTRY436_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY436_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY436_FUNC(void)
{
    return 0x87a0000006d0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY436 cavm_cst_ccmplx_rom_romentry436_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY436 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY436 "CST_CCMPLX_ROM_ROMENTRY436"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY436 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY436 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry437
 *
 * CST Ccmplx Rom Romentry437 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry437
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry437_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry437_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry437 cavm_cst_ccmplx_rom_romentry437_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY437 CAVM_CST_CCMPLX_ROM_ROMENTRY437_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY437_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY437_FUNC(void)
{
    return 0x87a0000006d4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY437 cavm_cst_ccmplx_rom_romentry437_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY437 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY437 "CST_CCMPLX_ROM_ROMENTRY437"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY437 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY437 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry438
 *
 * CST Ccmplx Rom Romentry438 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry438
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry438_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry438_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry438 cavm_cst_ccmplx_rom_romentry438_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY438 CAVM_CST_CCMPLX_ROM_ROMENTRY438_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY438_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY438_FUNC(void)
{
    return 0x87a0000006d8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY438 cavm_cst_ccmplx_rom_romentry438_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY438 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY438 "CST_CCMPLX_ROM_ROMENTRY438"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY438 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY438 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry439
 *
 * CST Ccmplx Rom Romentry439 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry439
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry439_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry439_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry439 cavm_cst_ccmplx_rom_romentry439_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY439 CAVM_CST_CCMPLX_ROM_ROMENTRY439_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY439_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY439_FUNC(void)
{
    return 0x87a0000006dcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY439 cavm_cst_ccmplx_rom_romentry439_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY439 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY439 "CST_CCMPLX_ROM_ROMENTRY439"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY439 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY439 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry44
 *
 * CST Ccmplx Rom Romentry44 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry44
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry44_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry44_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry44 cavm_cst_ccmplx_rom_romentry44_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY44 CAVM_CST_CCMPLX_ROM_ROMENTRY44_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY44_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY44_FUNC(void)
{
    return 0x87a0000000b0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY44 cavm_cst_ccmplx_rom_romentry44_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY44 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY44 "CST_CCMPLX_ROM_ROMENTRY44"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY44 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY44 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry440
 *
 * CST Ccmplx Rom Romentry440 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry440
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry440_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry440_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry440 cavm_cst_ccmplx_rom_romentry440_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY440 CAVM_CST_CCMPLX_ROM_ROMENTRY440_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY440_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY440_FUNC(void)
{
    return 0x87a0000006e0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY440 cavm_cst_ccmplx_rom_romentry440_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY440 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY440 "CST_CCMPLX_ROM_ROMENTRY440"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY440 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY440 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry441
 *
 * CST Ccmplx Rom Romentry441 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry441
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry441_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry441_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry441 cavm_cst_ccmplx_rom_romentry441_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY441 CAVM_CST_CCMPLX_ROM_ROMENTRY441_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY441_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY441_FUNC(void)
{
    return 0x87a0000006e4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY441 cavm_cst_ccmplx_rom_romentry441_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY441 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY441 "CST_CCMPLX_ROM_ROMENTRY441"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY441 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY441 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry442
 *
 * CST Ccmplx Rom Romentry442 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry442
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry442_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry442_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry442 cavm_cst_ccmplx_rom_romentry442_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY442 CAVM_CST_CCMPLX_ROM_ROMENTRY442_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY442_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY442_FUNC(void)
{
    return 0x87a0000006e8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY442 cavm_cst_ccmplx_rom_romentry442_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY442 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY442 "CST_CCMPLX_ROM_ROMENTRY442"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY442 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY442 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry443
 *
 * CST Ccmplx Rom Romentry443 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry443
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry443_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry443_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry443 cavm_cst_ccmplx_rom_romentry443_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY443 CAVM_CST_CCMPLX_ROM_ROMENTRY443_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY443_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY443_FUNC(void)
{
    return 0x87a0000006ecll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY443 cavm_cst_ccmplx_rom_romentry443_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY443 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY443 "CST_CCMPLX_ROM_ROMENTRY443"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY443 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY443 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry444
 *
 * CST Ccmplx Rom Romentry444 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry444
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry444_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry444_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry444 cavm_cst_ccmplx_rom_romentry444_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY444 CAVM_CST_CCMPLX_ROM_ROMENTRY444_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY444_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY444_FUNC(void)
{
    return 0x87a0000006f0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY444 cavm_cst_ccmplx_rom_romentry444_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY444 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY444 "CST_CCMPLX_ROM_ROMENTRY444"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY444 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY444 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry445
 *
 * CST Ccmplx Rom Romentry445 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry445
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry445_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry445_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry445 cavm_cst_ccmplx_rom_romentry445_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY445 CAVM_CST_CCMPLX_ROM_ROMENTRY445_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY445_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY445_FUNC(void)
{
    return 0x87a0000006f4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY445 cavm_cst_ccmplx_rom_romentry445_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY445 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY445 "CST_CCMPLX_ROM_ROMENTRY445"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY445 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY445 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry446
 *
 * CST Ccmplx Rom Romentry446 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry446
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry446_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry446_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry446 cavm_cst_ccmplx_rom_romentry446_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY446 CAVM_CST_CCMPLX_ROM_ROMENTRY446_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY446_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY446_FUNC(void)
{
    return 0x87a0000006f8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY446 cavm_cst_ccmplx_rom_romentry446_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY446 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY446 "CST_CCMPLX_ROM_ROMENTRY446"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY446 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY446 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry447
 *
 * CST Ccmplx Rom Romentry447 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry447
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry447_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry447_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry447 cavm_cst_ccmplx_rom_romentry447_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY447 CAVM_CST_CCMPLX_ROM_ROMENTRY447_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY447_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY447_FUNC(void)
{
    return 0x87a0000006fcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY447 cavm_cst_ccmplx_rom_romentry447_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY447 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY447 "CST_CCMPLX_ROM_ROMENTRY447"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY447 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY447 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry448
 *
 * CST Ccmplx Rom Romentry448 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry448
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry448_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry448_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry448 cavm_cst_ccmplx_rom_romentry448_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY448 CAVM_CST_CCMPLX_ROM_ROMENTRY448_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY448_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY448_FUNC(void)
{
    return 0x87a000000700ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY448 cavm_cst_ccmplx_rom_romentry448_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY448 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY448 "CST_CCMPLX_ROM_ROMENTRY448"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY448 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY448 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry449
 *
 * CST Ccmplx Rom Romentry449 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry449
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry449_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry449_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry449 cavm_cst_ccmplx_rom_romentry449_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY449 CAVM_CST_CCMPLX_ROM_ROMENTRY449_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY449_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY449_FUNC(void)
{
    return 0x87a000000704ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY449 cavm_cst_ccmplx_rom_romentry449_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY449 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY449 "CST_CCMPLX_ROM_ROMENTRY449"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY449 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY449 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry45
 *
 * CST Ccmplx Rom Romentry45 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry45
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry45_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry45_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry45 cavm_cst_ccmplx_rom_romentry45_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY45 CAVM_CST_CCMPLX_ROM_ROMENTRY45_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY45_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY45_FUNC(void)
{
    return 0x87a0000000b4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY45 cavm_cst_ccmplx_rom_romentry45_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY45 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY45 "CST_CCMPLX_ROM_ROMENTRY45"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY45 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY45 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry450
 *
 * CST Ccmplx Rom Romentry450 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry450
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry450_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry450_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry450 cavm_cst_ccmplx_rom_romentry450_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY450 CAVM_CST_CCMPLX_ROM_ROMENTRY450_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY450_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY450_FUNC(void)
{
    return 0x87a000000708ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY450 cavm_cst_ccmplx_rom_romentry450_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY450 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY450 "CST_CCMPLX_ROM_ROMENTRY450"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY450 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY450 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry451
 *
 * CST Ccmplx Rom Romentry451 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry451
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry451_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry451_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry451 cavm_cst_ccmplx_rom_romentry451_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY451 CAVM_CST_CCMPLX_ROM_ROMENTRY451_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY451_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY451_FUNC(void)
{
    return 0x87a00000070cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY451 cavm_cst_ccmplx_rom_romentry451_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY451 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY451 "CST_CCMPLX_ROM_ROMENTRY451"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY451 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY451 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry452
 *
 * CST Ccmplx Rom Romentry452 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry452
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry452_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry452_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry452 cavm_cst_ccmplx_rom_romentry452_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY452 CAVM_CST_CCMPLX_ROM_ROMENTRY452_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY452_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY452_FUNC(void)
{
    return 0x87a000000710ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY452 cavm_cst_ccmplx_rom_romentry452_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY452 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY452 "CST_CCMPLX_ROM_ROMENTRY452"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY452 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY452 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry453
 *
 * CST Ccmplx Rom Romentry453 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry453
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry453_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry453_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry453 cavm_cst_ccmplx_rom_romentry453_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY453 CAVM_CST_CCMPLX_ROM_ROMENTRY453_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY453_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY453_FUNC(void)
{
    return 0x87a000000714ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY453 cavm_cst_ccmplx_rom_romentry453_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY453 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY453 "CST_CCMPLX_ROM_ROMENTRY453"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY453 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY453 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry454
 *
 * CST Ccmplx Rom Romentry454 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry454
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry454_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry454_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry454 cavm_cst_ccmplx_rom_romentry454_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY454 CAVM_CST_CCMPLX_ROM_ROMENTRY454_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY454_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY454_FUNC(void)
{
    return 0x87a000000718ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY454 cavm_cst_ccmplx_rom_romentry454_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY454 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY454 "CST_CCMPLX_ROM_ROMENTRY454"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY454 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY454 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry455
 *
 * CST Ccmplx Rom Romentry455 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry455
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry455_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry455_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry455 cavm_cst_ccmplx_rom_romentry455_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY455 CAVM_CST_CCMPLX_ROM_ROMENTRY455_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY455_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY455_FUNC(void)
{
    return 0x87a00000071cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY455 cavm_cst_ccmplx_rom_romentry455_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY455 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY455 "CST_CCMPLX_ROM_ROMENTRY455"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY455 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY455 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry456
 *
 * CST Ccmplx Rom Romentry456 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry456
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry456_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry456_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry456 cavm_cst_ccmplx_rom_romentry456_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY456 CAVM_CST_CCMPLX_ROM_ROMENTRY456_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY456_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY456_FUNC(void)
{
    return 0x87a000000720ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY456 cavm_cst_ccmplx_rom_romentry456_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY456 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY456 "CST_CCMPLX_ROM_ROMENTRY456"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY456 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY456 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry457
 *
 * CST Ccmplx Rom Romentry457 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry457
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry457_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry457_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry457 cavm_cst_ccmplx_rom_romentry457_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY457 CAVM_CST_CCMPLX_ROM_ROMENTRY457_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY457_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY457_FUNC(void)
{
    return 0x87a000000724ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY457 cavm_cst_ccmplx_rom_romentry457_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY457 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY457 "CST_CCMPLX_ROM_ROMENTRY457"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY457 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY457 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry458
 *
 * CST Ccmplx Rom Romentry458 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry458
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry458_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry458_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry458 cavm_cst_ccmplx_rom_romentry458_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY458 CAVM_CST_CCMPLX_ROM_ROMENTRY458_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY458_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY458_FUNC(void)
{
    return 0x87a000000728ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY458 cavm_cst_ccmplx_rom_romentry458_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY458 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY458 "CST_CCMPLX_ROM_ROMENTRY458"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY458 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY458 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry459
 *
 * CST Ccmplx Rom Romentry459 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry459
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry459_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry459_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry459 cavm_cst_ccmplx_rom_romentry459_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY459 CAVM_CST_CCMPLX_ROM_ROMENTRY459_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY459_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY459_FUNC(void)
{
    return 0x87a00000072cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY459 cavm_cst_ccmplx_rom_romentry459_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY459 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY459 "CST_CCMPLX_ROM_ROMENTRY459"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY459 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY459 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry46
 *
 * CST Ccmplx Rom Romentry46 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry46
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry46_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry46_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry46 cavm_cst_ccmplx_rom_romentry46_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY46 CAVM_CST_CCMPLX_ROM_ROMENTRY46_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY46_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY46_FUNC(void)
{
    return 0x87a0000000b8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY46 cavm_cst_ccmplx_rom_romentry46_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY46 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY46 "CST_CCMPLX_ROM_ROMENTRY46"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY46 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY46 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry460
 *
 * CST Ccmplx Rom Romentry460 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry460
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry460_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry460_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry460 cavm_cst_ccmplx_rom_romentry460_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY460 CAVM_CST_CCMPLX_ROM_ROMENTRY460_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY460_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY460_FUNC(void)
{
    return 0x87a000000730ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY460 cavm_cst_ccmplx_rom_romentry460_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY460 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY460 "CST_CCMPLX_ROM_ROMENTRY460"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY460 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY460 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry461
 *
 * CST Ccmplx Rom Romentry461 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry461
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry461_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry461_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry461 cavm_cst_ccmplx_rom_romentry461_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY461 CAVM_CST_CCMPLX_ROM_ROMENTRY461_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY461_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY461_FUNC(void)
{
    return 0x87a000000734ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY461 cavm_cst_ccmplx_rom_romentry461_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY461 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY461 "CST_CCMPLX_ROM_ROMENTRY461"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY461 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY461 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry462
 *
 * CST Ccmplx Rom Romentry462 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry462
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry462_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry462_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry462 cavm_cst_ccmplx_rom_romentry462_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY462 CAVM_CST_CCMPLX_ROM_ROMENTRY462_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY462_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY462_FUNC(void)
{
    return 0x87a000000738ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY462 cavm_cst_ccmplx_rom_romentry462_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY462 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY462 "CST_CCMPLX_ROM_ROMENTRY462"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY462 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY462 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry463
 *
 * CST Ccmplx Rom Romentry463 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry463
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry463_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry463_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry463 cavm_cst_ccmplx_rom_romentry463_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY463 CAVM_CST_CCMPLX_ROM_ROMENTRY463_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY463_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY463_FUNC(void)
{
    return 0x87a00000073cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY463 cavm_cst_ccmplx_rom_romentry463_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY463 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY463 "CST_CCMPLX_ROM_ROMENTRY463"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY463 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY463 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry464
 *
 * CST Ccmplx Rom Romentry464 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry464
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry464_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry464_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry464 cavm_cst_ccmplx_rom_romentry464_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY464 CAVM_CST_CCMPLX_ROM_ROMENTRY464_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY464_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY464_FUNC(void)
{
    return 0x87a000000740ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY464 cavm_cst_ccmplx_rom_romentry464_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY464 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY464 "CST_CCMPLX_ROM_ROMENTRY464"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY464 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY464 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry465
 *
 * CST Ccmplx Rom Romentry465 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry465
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry465_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry465_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry465 cavm_cst_ccmplx_rom_romentry465_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY465 CAVM_CST_CCMPLX_ROM_ROMENTRY465_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY465_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY465_FUNC(void)
{
    return 0x87a000000744ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY465 cavm_cst_ccmplx_rom_romentry465_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY465 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY465 "CST_CCMPLX_ROM_ROMENTRY465"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY465 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY465 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry466
 *
 * CST Ccmplx Rom Romentry466 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry466
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry466_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry466_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry466 cavm_cst_ccmplx_rom_romentry466_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY466 CAVM_CST_CCMPLX_ROM_ROMENTRY466_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY466_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY466_FUNC(void)
{
    return 0x87a000000748ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY466 cavm_cst_ccmplx_rom_romentry466_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY466 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY466 "CST_CCMPLX_ROM_ROMENTRY466"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY466 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY466 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry467
 *
 * CST Ccmplx Rom Romentry467 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry467
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry467_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry467_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry467 cavm_cst_ccmplx_rom_romentry467_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY467 CAVM_CST_CCMPLX_ROM_ROMENTRY467_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY467_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY467_FUNC(void)
{
    return 0x87a00000074cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY467 cavm_cst_ccmplx_rom_romentry467_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY467 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY467 "CST_CCMPLX_ROM_ROMENTRY467"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY467 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY467 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry468
 *
 * CST Ccmplx Rom Romentry468 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry468
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry468_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry468_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry468 cavm_cst_ccmplx_rom_romentry468_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY468 CAVM_CST_CCMPLX_ROM_ROMENTRY468_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY468_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY468_FUNC(void)
{
    return 0x87a000000750ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY468 cavm_cst_ccmplx_rom_romentry468_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY468 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY468 "CST_CCMPLX_ROM_ROMENTRY468"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY468 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY468 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry469
 *
 * CST Ccmplx Rom Romentry469 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry469
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry469_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry469_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry469 cavm_cst_ccmplx_rom_romentry469_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY469 CAVM_CST_CCMPLX_ROM_ROMENTRY469_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY469_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY469_FUNC(void)
{
    return 0x87a000000754ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY469 cavm_cst_ccmplx_rom_romentry469_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY469 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY469 "CST_CCMPLX_ROM_ROMENTRY469"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY469 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY469 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry47
 *
 * CST Ccmplx Rom Romentry47 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry47
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry47_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry47_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry47 cavm_cst_ccmplx_rom_romentry47_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY47 CAVM_CST_CCMPLX_ROM_ROMENTRY47_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY47_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY47_FUNC(void)
{
    return 0x87a0000000bcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY47 cavm_cst_ccmplx_rom_romentry47_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY47 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY47 "CST_CCMPLX_ROM_ROMENTRY47"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY47 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY47 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry470
 *
 * CST Ccmplx Rom Romentry470 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry470
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry470_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry470_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry470 cavm_cst_ccmplx_rom_romentry470_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY470 CAVM_CST_CCMPLX_ROM_ROMENTRY470_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY470_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY470_FUNC(void)
{
    return 0x87a000000758ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY470 cavm_cst_ccmplx_rom_romentry470_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY470 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY470 "CST_CCMPLX_ROM_ROMENTRY470"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY470 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY470 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry471
 *
 * CST Ccmplx Rom Romentry471 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry471
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry471_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry471_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry471 cavm_cst_ccmplx_rom_romentry471_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY471 CAVM_CST_CCMPLX_ROM_ROMENTRY471_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY471_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY471_FUNC(void)
{
    return 0x87a00000075cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY471 cavm_cst_ccmplx_rom_romentry471_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY471 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY471 "CST_CCMPLX_ROM_ROMENTRY471"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY471 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY471 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry472
 *
 * CST Ccmplx Rom Romentry472 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry472
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry472_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry472_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry472 cavm_cst_ccmplx_rom_romentry472_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY472 CAVM_CST_CCMPLX_ROM_ROMENTRY472_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY472_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY472_FUNC(void)
{
    return 0x87a000000760ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY472 cavm_cst_ccmplx_rom_romentry472_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY472 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY472 "CST_CCMPLX_ROM_ROMENTRY472"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY472 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY472 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry473
 *
 * CST Ccmplx Rom Romentry473 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry473
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry473_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry473_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry473 cavm_cst_ccmplx_rom_romentry473_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY473 CAVM_CST_CCMPLX_ROM_ROMENTRY473_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY473_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY473_FUNC(void)
{
    return 0x87a000000764ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY473 cavm_cst_ccmplx_rom_romentry473_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY473 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY473 "CST_CCMPLX_ROM_ROMENTRY473"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY473 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY473 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry474
 *
 * CST Ccmplx Rom Romentry474 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry474
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry474_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry474_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry474 cavm_cst_ccmplx_rom_romentry474_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY474 CAVM_CST_CCMPLX_ROM_ROMENTRY474_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY474_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY474_FUNC(void)
{
    return 0x87a000000768ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY474 cavm_cst_ccmplx_rom_romentry474_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY474 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY474 "CST_CCMPLX_ROM_ROMENTRY474"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY474 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY474 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry475
 *
 * CST Ccmplx Rom Romentry475 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry475
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry475_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry475_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry475 cavm_cst_ccmplx_rom_romentry475_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY475 CAVM_CST_CCMPLX_ROM_ROMENTRY475_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY475_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY475_FUNC(void)
{
    return 0x87a00000076cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY475 cavm_cst_ccmplx_rom_romentry475_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY475 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY475 "CST_CCMPLX_ROM_ROMENTRY475"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY475 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY475 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry476
 *
 * CST Ccmplx Rom Romentry476 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry476
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry476_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry476_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry476 cavm_cst_ccmplx_rom_romentry476_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY476 CAVM_CST_CCMPLX_ROM_ROMENTRY476_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY476_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY476_FUNC(void)
{
    return 0x87a000000770ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY476 cavm_cst_ccmplx_rom_romentry476_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY476 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY476 "CST_CCMPLX_ROM_ROMENTRY476"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY476 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY476 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry477
 *
 * CST Ccmplx Rom Romentry477 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry477
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry477_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry477_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry477 cavm_cst_ccmplx_rom_romentry477_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY477 CAVM_CST_CCMPLX_ROM_ROMENTRY477_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY477_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY477_FUNC(void)
{
    return 0x87a000000774ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY477 cavm_cst_ccmplx_rom_romentry477_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY477 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY477 "CST_CCMPLX_ROM_ROMENTRY477"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY477 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY477 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry478
 *
 * CST Ccmplx Rom Romentry478 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry478
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry478_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry478_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry478 cavm_cst_ccmplx_rom_romentry478_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY478 CAVM_CST_CCMPLX_ROM_ROMENTRY478_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY478_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY478_FUNC(void)
{
    return 0x87a000000778ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY478 cavm_cst_ccmplx_rom_romentry478_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY478 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY478 "CST_CCMPLX_ROM_ROMENTRY478"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY478 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY478 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry479
 *
 * CST Ccmplx Rom Romentry479 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry479
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry479_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry479_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry479 cavm_cst_ccmplx_rom_romentry479_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY479 CAVM_CST_CCMPLX_ROM_ROMENTRY479_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY479_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY479_FUNC(void)
{
    return 0x87a00000077cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY479 cavm_cst_ccmplx_rom_romentry479_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY479 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY479 "CST_CCMPLX_ROM_ROMENTRY479"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY479 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY479 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry48
 *
 * CST Ccmplx Rom Romentry48 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry48
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry48_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry48_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry48 cavm_cst_ccmplx_rom_romentry48_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY48 CAVM_CST_CCMPLX_ROM_ROMENTRY48_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY48_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY48_FUNC(void)
{
    return 0x87a0000000c0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY48 cavm_cst_ccmplx_rom_romentry48_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY48 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY48 "CST_CCMPLX_ROM_ROMENTRY48"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY48 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY48 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry480
 *
 * CST Ccmplx Rom Romentry480 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry480
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry480_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry480_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry480 cavm_cst_ccmplx_rom_romentry480_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY480 CAVM_CST_CCMPLX_ROM_ROMENTRY480_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY480_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY480_FUNC(void)
{
    return 0x87a000000780ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY480 cavm_cst_ccmplx_rom_romentry480_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY480 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY480 "CST_CCMPLX_ROM_ROMENTRY480"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY480 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY480 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry481
 *
 * CST Ccmplx Rom Romentry481 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry481
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry481_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry481_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry481 cavm_cst_ccmplx_rom_romentry481_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY481 CAVM_CST_CCMPLX_ROM_ROMENTRY481_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY481_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY481_FUNC(void)
{
    return 0x87a000000784ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY481 cavm_cst_ccmplx_rom_romentry481_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY481 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY481 "CST_CCMPLX_ROM_ROMENTRY481"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY481 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY481 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry482
 *
 * CST Ccmplx Rom Romentry482 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry482
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry482_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry482_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry482 cavm_cst_ccmplx_rom_romentry482_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY482 CAVM_CST_CCMPLX_ROM_ROMENTRY482_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY482_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY482_FUNC(void)
{
    return 0x87a000000788ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY482 cavm_cst_ccmplx_rom_romentry482_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY482 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY482 "CST_CCMPLX_ROM_ROMENTRY482"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY482 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY482 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry483
 *
 * CST Ccmplx Rom Romentry483 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry483
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry483_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry483_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry483 cavm_cst_ccmplx_rom_romentry483_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY483 CAVM_CST_CCMPLX_ROM_ROMENTRY483_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY483_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY483_FUNC(void)
{
    return 0x87a00000078cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY483 cavm_cst_ccmplx_rom_romentry483_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY483 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY483 "CST_CCMPLX_ROM_ROMENTRY483"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY483 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY483 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry484
 *
 * CST Ccmplx Rom Romentry484 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry484
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry484_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry484_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry484 cavm_cst_ccmplx_rom_romentry484_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY484 CAVM_CST_CCMPLX_ROM_ROMENTRY484_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY484_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY484_FUNC(void)
{
    return 0x87a000000790ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY484 cavm_cst_ccmplx_rom_romentry484_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY484 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY484 "CST_CCMPLX_ROM_ROMENTRY484"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY484 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY484 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry485
 *
 * CST Ccmplx Rom Romentry485 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry485
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry485_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry485_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry485 cavm_cst_ccmplx_rom_romentry485_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY485 CAVM_CST_CCMPLX_ROM_ROMENTRY485_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY485_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY485_FUNC(void)
{
    return 0x87a000000794ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY485 cavm_cst_ccmplx_rom_romentry485_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY485 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY485 "CST_CCMPLX_ROM_ROMENTRY485"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY485 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY485 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry486
 *
 * CST Ccmplx Rom Romentry486 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry486
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry486_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry486_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry486 cavm_cst_ccmplx_rom_romentry486_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY486 CAVM_CST_CCMPLX_ROM_ROMENTRY486_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY486_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY486_FUNC(void)
{
    return 0x87a000000798ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY486 cavm_cst_ccmplx_rom_romentry486_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY486 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY486 "CST_CCMPLX_ROM_ROMENTRY486"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY486 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY486 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry487
 *
 * CST Ccmplx Rom Romentry487 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry487
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry487_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry487_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry487 cavm_cst_ccmplx_rom_romentry487_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY487 CAVM_CST_CCMPLX_ROM_ROMENTRY487_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY487_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY487_FUNC(void)
{
    return 0x87a00000079cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY487 cavm_cst_ccmplx_rom_romentry487_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY487 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY487 "CST_CCMPLX_ROM_ROMENTRY487"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY487 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY487 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry488
 *
 * CST Ccmplx Rom Romentry488 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry488
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry488_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry488_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry488 cavm_cst_ccmplx_rom_romentry488_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY488 CAVM_CST_CCMPLX_ROM_ROMENTRY488_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY488_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY488_FUNC(void)
{
    return 0x87a0000007a0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY488 cavm_cst_ccmplx_rom_romentry488_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY488 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY488 "CST_CCMPLX_ROM_ROMENTRY488"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY488 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY488 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry489
 *
 * CST Ccmplx Rom Romentry489 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry489
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry489_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry489_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry489 cavm_cst_ccmplx_rom_romentry489_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY489 CAVM_CST_CCMPLX_ROM_ROMENTRY489_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY489_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY489_FUNC(void)
{
    return 0x87a0000007a4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY489 cavm_cst_ccmplx_rom_romentry489_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY489 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY489 "CST_CCMPLX_ROM_ROMENTRY489"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY489 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY489 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry49
 *
 * CST Ccmplx Rom Romentry49 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry49
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry49_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry49_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry49 cavm_cst_ccmplx_rom_romentry49_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY49 CAVM_CST_CCMPLX_ROM_ROMENTRY49_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY49_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY49_FUNC(void)
{
    return 0x87a0000000c4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY49 cavm_cst_ccmplx_rom_romentry49_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY49 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY49 "CST_CCMPLX_ROM_ROMENTRY49"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY49 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY49 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry490
 *
 * CST Ccmplx Rom Romentry490 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry490
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry490_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry490_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry490 cavm_cst_ccmplx_rom_romentry490_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY490 CAVM_CST_CCMPLX_ROM_ROMENTRY490_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY490_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY490_FUNC(void)
{
    return 0x87a0000007a8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY490 cavm_cst_ccmplx_rom_romentry490_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY490 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY490 "CST_CCMPLX_ROM_ROMENTRY490"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY490 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY490 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry491
 *
 * CST Ccmplx Rom Romentry491 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry491
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry491_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry491_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry491 cavm_cst_ccmplx_rom_romentry491_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY491 CAVM_CST_CCMPLX_ROM_ROMENTRY491_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY491_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY491_FUNC(void)
{
    return 0x87a0000007acll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY491 cavm_cst_ccmplx_rom_romentry491_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY491 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY491 "CST_CCMPLX_ROM_ROMENTRY491"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY491 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY491 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry492
 *
 * CST Ccmplx Rom Romentry492 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry492
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry492_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry492_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry492 cavm_cst_ccmplx_rom_romentry492_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY492 CAVM_CST_CCMPLX_ROM_ROMENTRY492_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY492_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY492_FUNC(void)
{
    return 0x87a0000007b0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY492 cavm_cst_ccmplx_rom_romentry492_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY492 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY492 "CST_CCMPLX_ROM_ROMENTRY492"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY492 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY492 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry493
 *
 * CST Ccmplx Rom Romentry493 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry493
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry493_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry493_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry493 cavm_cst_ccmplx_rom_romentry493_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY493 CAVM_CST_CCMPLX_ROM_ROMENTRY493_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY493_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY493_FUNC(void)
{
    return 0x87a0000007b4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY493 cavm_cst_ccmplx_rom_romentry493_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY493 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY493 "CST_CCMPLX_ROM_ROMENTRY493"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY493 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY493 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry494
 *
 * CST Ccmplx Rom Romentry494 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry494
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry494_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry494_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry494 cavm_cst_ccmplx_rom_romentry494_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY494 CAVM_CST_CCMPLX_ROM_ROMENTRY494_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY494_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY494_FUNC(void)
{
    return 0x87a0000007b8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY494 cavm_cst_ccmplx_rom_romentry494_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY494 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY494 "CST_CCMPLX_ROM_ROMENTRY494"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY494 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY494 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry495
 *
 * CST Ccmplx Rom Romentry495 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry495
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry495_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry495_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry495 cavm_cst_ccmplx_rom_romentry495_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY495 CAVM_CST_CCMPLX_ROM_ROMENTRY495_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY495_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY495_FUNC(void)
{
    return 0x87a0000007bcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY495 cavm_cst_ccmplx_rom_romentry495_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY495 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY495 "CST_CCMPLX_ROM_ROMENTRY495"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY495 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY495 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry496
 *
 * CST Ccmplx Rom Romentry496 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry496
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry496_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry496_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry496 cavm_cst_ccmplx_rom_romentry496_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY496 CAVM_CST_CCMPLX_ROM_ROMENTRY496_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY496_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY496_FUNC(void)
{
    return 0x87a0000007c0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY496 cavm_cst_ccmplx_rom_romentry496_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY496 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY496 "CST_CCMPLX_ROM_ROMENTRY496"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY496 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY496 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry497
 *
 * CST Ccmplx Rom Romentry497 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry497
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry497_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry497_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry497 cavm_cst_ccmplx_rom_romentry497_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY497 CAVM_CST_CCMPLX_ROM_ROMENTRY497_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY497_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY497_FUNC(void)
{
    return 0x87a0000007c4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY497 cavm_cst_ccmplx_rom_romentry497_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY497 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY497 "CST_CCMPLX_ROM_ROMENTRY497"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY497 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY497 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry498
 *
 * CST Ccmplx Rom Romentry498 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry498
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry498_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry498_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry498 cavm_cst_ccmplx_rom_romentry498_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY498 CAVM_CST_CCMPLX_ROM_ROMENTRY498_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY498_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY498_FUNC(void)
{
    return 0x87a0000007c8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY498 cavm_cst_ccmplx_rom_romentry498_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY498 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY498 "CST_CCMPLX_ROM_ROMENTRY498"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY498 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY498 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry499
 *
 * CST Ccmplx Rom Romentry499 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry499
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry499_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry499_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry499 cavm_cst_ccmplx_rom_romentry499_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY499 CAVM_CST_CCMPLX_ROM_ROMENTRY499_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY499_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY499_FUNC(void)
{
    return 0x87a0000007ccll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY499 cavm_cst_ccmplx_rom_romentry499_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY499 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY499 "CST_CCMPLX_ROM_ROMENTRY499"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY499 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY499 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry5
 *
 * CST Ccmplx Rom Romentry5 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry5
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry5_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry5_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry5 cavm_cst_ccmplx_rom_romentry5_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY5 CAVM_CST_CCMPLX_ROM_ROMENTRY5_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY5_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY5_FUNC(void)
{
    return 0x87a000000014ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY5 cavm_cst_ccmplx_rom_romentry5_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY5 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY5 "CST_CCMPLX_ROM_ROMENTRY5"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY5 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY5 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry50
 *
 * CST Ccmplx Rom Romentry50 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry50
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry50_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry50_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry50 cavm_cst_ccmplx_rom_romentry50_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY50 CAVM_CST_CCMPLX_ROM_ROMENTRY50_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY50_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY50_FUNC(void)
{
    return 0x87a0000000c8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY50 cavm_cst_ccmplx_rom_romentry50_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY50 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY50 "CST_CCMPLX_ROM_ROMENTRY50"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY50 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY50 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry500
 *
 * CST Ccmplx Rom Romentry500 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry500
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry500_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry500_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry500 cavm_cst_ccmplx_rom_romentry500_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY500 CAVM_CST_CCMPLX_ROM_ROMENTRY500_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY500_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY500_FUNC(void)
{
    return 0x87a0000007d0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY500 cavm_cst_ccmplx_rom_romentry500_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY500 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY500 "CST_CCMPLX_ROM_ROMENTRY500"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY500 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY500 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry501
 *
 * CST Ccmplx Rom Romentry501 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry501
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry501_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry501_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry501 cavm_cst_ccmplx_rom_romentry501_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY501 CAVM_CST_CCMPLX_ROM_ROMENTRY501_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY501_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY501_FUNC(void)
{
    return 0x87a0000007d4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY501 cavm_cst_ccmplx_rom_romentry501_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY501 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY501 "CST_CCMPLX_ROM_ROMENTRY501"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY501 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY501 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry502
 *
 * CST Ccmplx Rom Romentry502 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry502
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry502_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry502_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry502 cavm_cst_ccmplx_rom_romentry502_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY502 CAVM_CST_CCMPLX_ROM_ROMENTRY502_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY502_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY502_FUNC(void)
{
    return 0x87a0000007d8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY502 cavm_cst_ccmplx_rom_romentry502_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY502 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY502 "CST_CCMPLX_ROM_ROMENTRY502"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY502 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY502 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry503
 *
 * CST Ccmplx Rom Romentry503 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry503
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry503_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry503_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry503 cavm_cst_ccmplx_rom_romentry503_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY503 CAVM_CST_CCMPLX_ROM_ROMENTRY503_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY503_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY503_FUNC(void)
{
    return 0x87a0000007dcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY503 cavm_cst_ccmplx_rom_romentry503_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY503 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY503 "CST_CCMPLX_ROM_ROMENTRY503"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY503 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY503 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry504
 *
 * CST Ccmplx Rom Romentry504 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry504
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry504_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry504_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry504 cavm_cst_ccmplx_rom_romentry504_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY504 CAVM_CST_CCMPLX_ROM_ROMENTRY504_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY504_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY504_FUNC(void)
{
    return 0x87a0000007e0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY504 cavm_cst_ccmplx_rom_romentry504_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY504 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY504 "CST_CCMPLX_ROM_ROMENTRY504"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY504 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY504 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry505
 *
 * CST Ccmplx Rom Romentry505 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry505
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry505_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry505_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry505 cavm_cst_ccmplx_rom_romentry505_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY505 CAVM_CST_CCMPLX_ROM_ROMENTRY505_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY505_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY505_FUNC(void)
{
    return 0x87a0000007e4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY505 cavm_cst_ccmplx_rom_romentry505_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY505 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY505 "CST_CCMPLX_ROM_ROMENTRY505"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY505 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY505 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry506
 *
 * CST Ccmplx Rom Romentry506 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry506
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry506_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry506_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry506 cavm_cst_ccmplx_rom_romentry506_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY506 CAVM_CST_CCMPLX_ROM_ROMENTRY506_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY506_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY506_FUNC(void)
{
    return 0x87a0000007e8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY506 cavm_cst_ccmplx_rom_romentry506_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY506 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY506 "CST_CCMPLX_ROM_ROMENTRY506"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY506 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY506 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry507
 *
 * CST Ccmplx Rom Romentry507 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry507
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry507_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry507_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry507 cavm_cst_ccmplx_rom_romentry507_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY507 CAVM_CST_CCMPLX_ROM_ROMENTRY507_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY507_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY507_FUNC(void)
{
    return 0x87a0000007ecll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY507 cavm_cst_ccmplx_rom_romentry507_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY507 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY507 "CST_CCMPLX_ROM_ROMENTRY507"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY507 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY507 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry508
 *
 * CST Ccmplx Rom Romentry508 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry508
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry508_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry508_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry508 cavm_cst_ccmplx_rom_romentry508_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY508 CAVM_CST_CCMPLX_ROM_ROMENTRY508_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY508_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY508_FUNC(void)
{
    return 0x87a0000007f0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY508 cavm_cst_ccmplx_rom_romentry508_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY508 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY508 "CST_CCMPLX_ROM_ROMENTRY508"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY508 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY508 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry509
 *
 * CST Ccmplx Rom Romentry509 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry509
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry509_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry509_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry509 cavm_cst_ccmplx_rom_romentry509_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY509 CAVM_CST_CCMPLX_ROM_ROMENTRY509_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY509_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY509_FUNC(void)
{
    return 0x87a0000007f4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY509 cavm_cst_ccmplx_rom_romentry509_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY509 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY509 "CST_CCMPLX_ROM_ROMENTRY509"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY509 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY509 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry51
 *
 * CST Ccmplx Rom Romentry51 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry51
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry51_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry51_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry51 cavm_cst_ccmplx_rom_romentry51_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY51 CAVM_CST_CCMPLX_ROM_ROMENTRY51_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY51_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY51_FUNC(void)
{
    return 0x87a0000000ccll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY51 cavm_cst_ccmplx_rom_romentry51_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY51 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY51 "CST_CCMPLX_ROM_ROMENTRY51"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY51 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY51 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry510
 *
 * CST Ccmplx Rom Romentry510 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry510
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry510_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry510_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry510 cavm_cst_ccmplx_rom_romentry510_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY510 CAVM_CST_CCMPLX_ROM_ROMENTRY510_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY510_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY510_FUNC(void)
{
    return 0x87a0000007f8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY510 cavm_cst_ccmplx_rom_romentry510_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY510 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY510 "CST_CCMPLX_ROM_ROMENTRY510"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY510 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY510 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry511
 *
 * CST Ccmplx Rom Romentry511 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry511
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry511_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry511_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry511 cavm_cst_ccmplx_rom_romentry511_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY511 CAVM_CST_CCMPLX_ROM_ROMENTRY511_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY511_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY511_FUNC(void)
{
    return 0x87a0000007fcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY511 cavm_cst_ccmplx_rom_romentry511_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY511 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY511 "CST_CCMPLX_ROM_ROMENTRY511"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY511 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY511 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry52
 *
 * CST Ccmplx Rom Romentry52 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry52
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry52_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry52_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry52 cavm_cst_ccmplx_rom_romentry52_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY52 CAVM_CST_CCMPLX_ROM_ROMENTRY52_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY52_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY52_FUNC(void)
{
    return 0x87a0000000d0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY52 cavm_cst_ccmplx_rom_romentry52_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY52 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY52 "CST_CCMPLX_ROM_ROMENTRY52"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY52 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY52 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry53
 *
 * CST Ccmplx Rom Romentry53 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry53
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry53_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry53_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry53 cavm_cst_ccmplx_rom_romentry53_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY53 CAVM_CST_CCMPLX_ROM_ROMENTRY53_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY53_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY53_FUNC(void)
{
    return 0x87a0000000d4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY53 cavm_cst_ccmplx_rom_romentry53_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY53 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY53 "CST_CCMPLX_ROM_ROMENTRY53"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY53 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY53 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry54
 *
 * CST Ccmplx Rom Romentry54 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry54
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry54_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry54_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry54 cavm_cst_ccmplx_rom_romentry54_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY54 CAVM_CST_CCMPLX_ROM_ROMENTRY54_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY54_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY54_FUNC(void)
{
    return 0x87a0000000d8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY54 cavm_cst_ccmplx_rom_romentry54_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY54 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY54 "CST_CCMPLX_ROM_ROMENTRY54"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY54 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY54 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry55
 *
 * CST Ccmplx Rom Romentry55 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry55
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry55_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry55_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry55 cavm_cst_ccmplx_rom_romentry55_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY55 CAVM_CST_CCMPLX_ROM_ROMENTRY55_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY55_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY55_FUNC(void)
{
    return 0x87a0000000dcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY55 cavm_cst_ccmplx_rom_romentry55_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY55 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY55 "CST_CCMPLX_ROM_ROMENTRY55"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY55 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY55 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry56
 *
 * CST Ccmplx Rom Romentry56 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry56
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry56_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry56_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry56 cavm_cst_ccmplx_rom_romentry56_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY56 CAVM_CST_CCMPLX_ROM_ROMENTRY56_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY56_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY56_FUNC(void)
{
    return 0x87a0000000e0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY56 cavm_cst_ccmplx_rom_romentry56_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY56 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY56 "CST_CCMPLX_ROM_ROMENTRY56"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY56 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY56 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry57
 *
 * CST Ccmplx Rom Romentry57 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry57
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry57_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry57_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry57 cavm_cst_ccmplx_rom_romentry57_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY57 CAVM_CST_CCMPLX_ROM_ROMENTRY57_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY57_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY57_FUNC(void)
{
    return 0x87a0000000e4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY57 cavm_cst_ccmplx_rom_romentry57_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY57 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY57 "CST_CCMPLX_ROM_ROMENTRY57"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY57 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY57 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry58
 *
 * CST Ccmplx Rom Romentry58 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry58
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry58_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry58_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry58 cavm_cst_ccmplx_rom_romentry58_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY58 CAVM_CST_CCMPLX_ROM_ROMENTRY58_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY58_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY58_FUNC(void)
{
    return 0x87a0000000e8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY58 cavm_cst_ccmplx_rom_romentry58_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY58 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY58 "CST_CCMPLX_ROM_ROMENTRY58"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY58 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY58 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry59
 *
 * CST Ccmplx Rom Romentry59 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry59
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry59_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry59_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry59 cavm_cst_ccmplx_rom_romentry59_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY59 CAVM_CST_CCMPLX_ROM_ROMENTRY59_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY59_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY59_FUNC(void)
{
    return 0x87a0000000ecll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY59 cavm_cst_ccmplx_rom_romentry59_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY59 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY59 "CST_CCMPLX_ROM_ROMENTRY59"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY59 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY59 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry6
 *
 * CST Ccmplx Rom Romentry6 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry6
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry6_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry6_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry6 cavm_cst_ccmplx_rom_romentry6_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY6 CAVM_CST_CCMPLX_ROM_ROMENTRY6_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY6_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY6_FUNC(void)
{
    return 0x87a000000018ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY6 cavm_cst_ccmplx_rom_romentry6_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY6 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY6 "CST_CCMPLX_ROM_ROMENTRY6"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY6 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY6 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry60
 *
 * CST Ccmplx Rom Romentry60 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry60
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry60_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry60_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry60 cavm_cst_ccmplx_rom_romentry60_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY60 CAVM_CST_CCMPLX_ROM_ROMENTRY60_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY60_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY60_FUNC(void)
{
    return 0x87a0000000f0ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY60 cavm_cst_ccmplx_rom_romentry60_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY60 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY60 "CST_CCMPLX_ROM_ROMENTRY60"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY60 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY60 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry61
 *
 * CST Ccmplx Rom Romentry61 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry61
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry61_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry61_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry61 cavm_cst_ccmplx_rom_romentry61_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY61 CAVM_CST_CCMPLX_ROM_ROMENTRY61_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY61_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY61_FUNC(void)
{
    return 0x87a0000000f4ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY61 cavm_cst_ccmplx_rom_romentry61_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY61 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY61 "CST_CCMPLX_ROM_ROMENTRY61"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY61 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY61 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry62
 *
 * CST Ccmplx Rom Romentry62 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry62
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry62_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry62_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry62 cavm_cst_ccmplx_rom_romentry62_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY62 CAVM_CST_CCMPLX_ROM_ROMENTRY62_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY62_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY62_FUNC(void)
{
    return 0x87a0000000f8ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY62 cavm_cst_ccmplx_rom_romentry62_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY62 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY62 "CST_CCMPLX_ROM_ROMENTRY62"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY62 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY62 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry63
 *
 * CST Ccmplx Rom Romentry63 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry63
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry63_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry63_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry63 cavm_cst_ccmplx_rom_romentry63_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY63 CAVM_CST_CCMPLX_ROM_ROMENTRY63_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY63_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY63_FUNC(void)
{
    return 0x87a0000000fcll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY63 cavm_cst_ccmplx_rom_romentry63_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY63 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY63 "CST_CCMPLX_ROM_ROMENTRY63"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY63 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY63 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry64
 *
 * CST Ccmplx Rom Romentry64 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry64
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry64_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry64_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry64 cavm_cst_ccmplx_rom_romentry64_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY64 CAVM_CST_CCMPLX_ROM_ROMENTRY64_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY64_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY64_FUNC(void)
{
    return 0x87a000000100ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY64 cavm_cst_ccmplx_rom_romentry64_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY64 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY64 "CST_CCMPLX_ROM_ROMENTRY64"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY64 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY64 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry65
 *
 * CST Ccmplx Rom Romentry65 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry65
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry65_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry65_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry65 cavm_cst_ccmplx_rom_romentry65_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY65 CAVM_CST_CCMPLX_ROM_ROMENTRY65_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY65_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY65_FUNC(void)
{
    return 0x87a000000104ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY65 cavm_cst_ccmplx_rom_romentry65_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY65 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY65 "CST_CCMPLX_ROM_ROMENTRY65"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY65 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY65 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry66
 *
 * CST Ccmplx Rom Romentry66 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry66
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry66_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry66_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry66 cavm_cst_ccmplx_rom_romentry66_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY66 CAVM_CST_CCMPLX_ROM_ROMENTRY66_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY66_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY66_FUNC(void)
{
    return 0x87a000000108ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY66 cavm_cst_ccmplx_rom_romentry66_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY66 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY66 "CST_CCMPLX_ROM_ROMENTRY66"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY66 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY66 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry67
 *
 * CST Ccmplx Rom Romentry67 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry67
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry67_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry67_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry67 cavm_cst_ccmplx_rom_romentry67_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY67 CAVM_CST_CCMPLX_ROM_ROMENTRY67_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY67_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY67_FUNC(void)
{
    return 0x87a00000010cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY67 cavm_cst_ccmplx_rom_romentry67_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY67 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY67 "CST_CCMPLX_ROM_ROMENTRY67"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY67 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY67 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry68
 *
 * CST Ccmplx Rom Romentry68 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry68
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry68_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry68_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry68 cavm_cst_ccmplx_rom_romentry68_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY68 CAVM_CST_CCMPLX_ROM_ROMENTRY68_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY68_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY68_FUNC(void)
{
    return 0x87a000000110ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY68 cavm_cst_ccmplx_rom_romentry68_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY68 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY68 "CST_CCMPLX_ROM_ROMENTRY68"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY68 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY68 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry69
 *
 * CST Ccmplx Rom Romentry69 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry69
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry69_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry69_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry69 cavm_cst_ccmplx_rom_romentry69_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY69 CAVM_CST_CCMPLX_ROM_ROMENTRY69_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY69_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY69_FUNC(void)
{
    return 0x87a000000114ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY69 cavm_cst_ccmplx_rom_romentry69_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY69 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY69 "CST_CCMPLX_ROM_ROMENTRY69"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY69 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY69 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry7
 *
 * CST Ccmplx Rom Romentry7 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry7
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry7_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry7_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry7 cavm_cst_ccmplx_rom_romentry7_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY7 CAVM_CST_CCMPLX_ROM_ROMENTRY7_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY7_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY7_FUNC(void)
{
    return 0x87a00000001cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY7 cavm_cst_ccmplx_rom_romentry7_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY7 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY7 "CST_CCMPLX_ROM_ROMENTRY7"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY7 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY7 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry70
 *
 * CST Ccmplx Rom Romentry70 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry70
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry70_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry70_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry70 cavm_cst_ccmplx_rom_romentry70_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY70 CAVM_CST_CCMPLX_ROM_ROMENTRY70_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY70_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY70_FUNC(void)
{
    return 0x87a000000118ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY70 cavm_cst_ccmplx_rom_romentry70_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY70 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY70 "CST_CCMPLX_ROM_ROMENTRY70"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY70 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY70 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry71
 *
 * CST Ccmplx Rom Romentry71 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry71
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry71_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry71_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry71 cavm_cst_ccmplx_rom_romentry71_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY71 CAVM_CST_CCMPLX_ROM_ROMENTRY71_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY71_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY71_FUNC(void)
{
    return 0x87a00000011cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY71 cavm_cst_ccmplx_rom_romentry71_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY71 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY71 "CST_CCMPLX_ROM_ROMENTRY71"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY71 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY71 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry72
 *
 * CST Ccmplx Rom Romentry72 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry72
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry72_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry72_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry72 cavm_cst_ccmplx_rom_romentry72_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY72 CAVM_CST_CCMPLX_ROM_ROMENTRY72_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY72_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY72_FUNC(void)
{
    return 0x87a000000120ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY72 cavm_cst_ccmplx_rom_romentry72_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY72 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY72 "CST_CCMPLX_ROM_ROMENTRY72"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY72 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY72 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry73
 *
 * CST Ccmplx Rom Romentry73 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry73
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry73_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry73_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry73 cavm_cst_ccmplx_rom_romentry73_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY73 CAVM_CST_CCMPLX_ROM_ROMENTRY73_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY73_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY73_FUNC(void)
{
    return 0x87a000000124ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY73 cavm_cst_ccmplx_rom_romentry73_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY73 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY73 "CST_CCMPLX_ROM_ROMENTRY73"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY73 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY73 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry74
 *
 * CST Ccmplx Rom Romentry74 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry74
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry74_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry74_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry74 cavm_cst_ccmplx_rom_romentry74_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY74 CAVM_CST_CCMPLX_ROM_ROMENTRY74_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY74_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY74_FUNC(void)
{
    return 0x87a000000128ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY74 cavm_cst_ccmplx_rom_romentry74_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY74 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY74 "CST_CCMPLX_ROM_ROMENTRY74"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY74 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY74 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry75
 *
 * CST Ccmplx Rom Romentry75 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry75
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry75_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry75_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry75 cavm_cst_ccmplx_rom_romentry75_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY75 CAVM_CST_CCMPLX_ROM_ROMENTRY75_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY75_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY75_FUNC(void)
{
    return 0x87a00000012cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY75 cavm_cst_ccmplx_rom_romentry75_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY75 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY75 "CST_CCMPLX_ROM_ROMENTRY75"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY75 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY75 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry76
 *
 * CST Ccmplx Rom Romentry76 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry76
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry76_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry76_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry76 cavm_cst_ccmplx_rom_romentry76_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY76 CAVM_CST_CCMPLX_ROM_ROMENTRY76_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY76_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY76_FUNC(void)
{
    return 0x87a000000130ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY76 cavm_cst_ccmplx_rom_romentry76_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY76 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY76 "CST_CCMPLX_ROM_ROMENTRY76"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY76 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY76 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry77
 *
 * CST Ccmplx Rom Romentry77 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry77
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry77_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry77_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry77 cavm_cst_ccmplx_rom_romentry77_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY77 CAVM_CST_CCMPLX_ROM_ROMENTRY77_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY77_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY77_FUNC(void)
{
    return 0x87a000000134ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY77 cavm_cst_ccmplx_rom_romentry77_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY77 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY77 "CST_CCMPLX_ROM_ROMENTRY77"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY77 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY77 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry78
 *
 * CST Ccmplx Rom Romentry78 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry78
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry78_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry78_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry78 cavm_cst_ccmplx_rom_romentry78_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY78 CAVM_CST_CCMPLX_ROM_ROMENTRY78_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY78_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY78_FUNC(void)
{
    return 0x87a000000138ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY78 cavm_cst_ccmplx_rom_romentry78_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY78 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY78 "CST_CCMPLX_ROM_ROMENTRY78"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY78 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY78 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry79
 *
 * CST Ccmplx Rom Romentry79 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry79
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry79_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry79_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry79 cavm_cst_ccmplx_rom_romentry79_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY79 CAVM_CST_CCMPLX_ROM_ROMENTRY79_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY79_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY79_FUNC(void)
{
    return 0x87a00000013cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY79 cavm_cst_ccmplx_rom_romentry79_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY79 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY79 "CST_CCMPLX_ROM_ROMENTRY79"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY79 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY79 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry8
 *
 * CST Ccmplx Rom Romentry8 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry8
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry8_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry8_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry8 cavm_cst_ccmplx_rom_romentry8_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY8 CAVM_CST_CCMPLX_ROM_ROMENTRY8_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY8_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY8_FUNC(void)
{
    return 0x87a000000020ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY8 cavm_cst_ccmplx_rom_romentry8_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY8 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY8 "CST_CCMPLX_ROM_ROMENTRY8"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY8 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY8 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry80
 *
 * CST Ccmplx Rom Romentry80 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry80
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry80_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry80_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry80 cavm_cst_ccmplx_rom_romentry80_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY80 CAVM_CST_CCMPLX_ROM_ROMENTRY80_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY80_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY80_FUNC(void)
{
    return 0x87a000000140ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY80 cavm_cst_ccmplx_rom_romentry80_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY80 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY80 "CST_CCMPLX_ROM_ROMENTRY80"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY80 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY80 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry81
 *
 * CST Ccmplx Rom Romentry81 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry81
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry81_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry81_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry81 cavm_cst_ccmplx_rom_romentry81_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY81 CAVM_CST_CCMPLX_ROM_ROMENTRY81_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY81_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY81_FUNC(void)
{
    return 0x87a000000144ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY81 cavm_cst_ccmplx_rom_romentry81_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY81 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY81 "CST_CCMPLX_ROM_ROMENTRY81"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY81 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY81 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry82
 *
 * CST Ccmplx Rom Romentry82 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry82
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry82_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry82_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry82 cavm_cst_ccmplx_rom_romentry82_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY82 CAVM_CST_CCMPLX_ROM_ROMENTRY82_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY82_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY82_FUNC(void)
{
    return 0x87a000000148ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY82 cavm_cst_ccmplx_rom_romentry82_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY82 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY82 "CST_CCMPLX_ROM_ROMENTRY82"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY82 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY82 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry83
 *
 * CST Ccmplx Rom Romentry83 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry83
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry83_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry83_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry83 cavm_cst_ccmplx_rom_romentry83_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY83 CAVM_CST_CCMPLX_ROM_ROMENTRY83_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY83_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY83_FUNC(void)
{
    return 0x87a00000014cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY83 cavm_cst_ccmplx_rom_romentry83_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY83 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY83 "CST_CCMPLX_ROM_ROMENTRY83"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY83 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY83 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry84
 *
 * CST Ccmplx Rom Romentry84 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry84
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry84_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry84_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry84 cavm_cst_ccmplx_rom_romentry84_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY84 CAVM_CST_CCMPLX_ROM_ROMENTRY84_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY84_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY84_FUNC(void)
{
    return 0x87a000000150ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY84 cavm_cst_ccmplx_rom_romentry84_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY84 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY84 "CST_CCMPLX_ROM_ROMENTRY84"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY84 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY84 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry85
 *
 * CST Ccmplx Rom Romentry85 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry85
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry85_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry85_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry85 cavm_cst_ccmplx_rom_romentry85_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY85 CAVM_CST_CCMPLX_ROM_ROMENTRY85_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY85_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY85_FUNC(void)
{
    return 0x87a000000154ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY85 cavm_cst_ccmplx_rom_romentry85_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY85 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY85 "CST_CCMPLX_ROM_ROMENTRY85"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY85 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY85 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry86
 *
 * CST Ccmplx Rom Romentry86 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry86
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry86_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry86_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry86 cavm_cst_ccmplx_rom_romentry86_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY86 CAVM_CST_CCMPLX_ROM_ROMENTRY86_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY86_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY86_FUNC(void)
{
    return 0x87a000000158ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY86 cavm_cst_ccmplx_rom_romentry86_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY86 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY86 "CST_CCMPLX_ROM_ROMENTRY86"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY86 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY86 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry87
 *
 * CST Ccmplx Rom Romentry87 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry87
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry87_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry87_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry87 cavm_cst_ccmplx_rom_romentry87_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY87 CAVM_CST_CCMPLX_ROM_ROMENTRY87_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY87_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY87_FUNC(void)
{
    return 0x87a00000015cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY87 cavm_cst_ccmplx_rom_romentry87_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY87 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY87 "CST_CCMPLX_ROM_ROMENTRY87"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY87 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY87 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry88
 *
 * CST Ccmplx Rom Romentry88 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry88
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry88_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry88_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry88 cavm_cst_ccmplx_rom_romentry88_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY88 CAVM_CST_CCMPLX_ROM_ROMENTRY88_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY88_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY88_FUNC(void)
{
    return 0x87a000000160ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY88 cavm_cst_ccmplx_rom_romentry88_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY88 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY88 "CST_CCMPLX_ROM_ROMENTRY88"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY88 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY88 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry89
 *
 * CST Ccmplx Rom Romentry89 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry89
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry89_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry89_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry89 cavm_cst_ccmplx_rom_romentry89_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY89 CAVM_CST_CCMPLX_ROM_ROMENTRY89_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY89_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY89_FUNC(void)
{
    return 0x87a000000164ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY89 cavm_cst_ccmplx_rom_romentry89_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY89 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY89 "CST_CCMPLX_ROM_ROMENTRY89"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY89 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY89 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry9
 *
 * CST Ccmplx Rom Romentry9 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry9
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry9_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry9_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry9 cavm_cst_ccmplx_rom_romentry9_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY9 CAVM_CST_CCMPLX_ROM_ROMENTRY9_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY9_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY9_FUNC(void)
{
    return 0x87a000000024ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY9 cavm_cst_ccmplx_rom_romentry9_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY9 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY9 "CST_CCMPLX_ROM_ROMENTRY9"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY9 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY9 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry90
 *
 * CST Ccmplx Rom Romentry90 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry90
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry90_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry90_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry90 cavm_cst_ccmplx_rom_romentry90_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY90 CAVM_CST_CCMPLX_ROM_ROMENTRY90_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY90_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY90_FUNC(void)
{
    return 0x87a000000168ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY90 cavm_cst_ccmplx_rom_romentry90_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY90 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY90 "CST_CCMPLX_ROM_ROMENTRY90"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY90 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY90 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry91
 *
 * CST Ccmplx Rom Romentry91 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry91
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry91_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry91_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry91 cavm_cst_ccmplx_rom_romentry91_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY91 CAVM_CST_CCMPLX_ROM_ROMENTRY91_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY91_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY91_FUNC(void)
{
    return 0x87a00000016cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY91 cavm_cst_ccmplx_rom_romentry91_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY91 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY91 "CST_CCMPLX_ROM_ROMENTRY91"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY91 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY91 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry92
 *
 * CST Ccmplx Rom Romentry92 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry92
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry92_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry92_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry92 cavm_cst_ccmplx_rom_romentry92_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY92 CAVM_CST_CCMPLX_ROM_ROMENTRY92_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY92_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY92_FUNC(void)
{
    return 0x87a000000170ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY92 cavm_cst_ccmplx_rom_romentry92_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY92 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY92 "CST_CCMPLX_ROM_ROMENTRY92"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY92 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY92 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry93
 *
 * CST Ccmplx Rom Romentry93 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry93
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry93_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry93_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry93 cavm_cst_ccmplx_rom_romentry93_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY93 CAVM_CST_CCMPLX_ROM_ROMENTRY93_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY93_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY93_FUNC(void)
{
    return 0x87a000000174ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY93 cavm_cst_ccmplx_rom_romentry93_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY93 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY93 "CST_CCMPLX_ROM_ROMENTRY93"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY93 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY93 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry94
 *
 * CST Ccmplx Rom Romentry94 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry94
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry94_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry94_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry94 cavm_cst_ccmplx_rom_romentry94_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY94 CAVM_CST_CCMPLX_ROM_ROMENTRY94_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY94_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY94_FUNC(void)
{
    return 0x87a000000178ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY94 cavm_cst_ccmplx_rom_romentry94_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY94 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY94 "CST_CCMPLX_ROM_ROMENTRY94"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY94 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY94 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry95
 *
 * CST Ccmplx Rom Romentry95 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry95
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry95_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry95_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry95 cavm_cst_ccmplx_rom_romentry95_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY95 CAVM_CST_CCMPLX_ROM_ROMENTRY95_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY95_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY95_FUNC(void)
{
    return 0x87a00000017cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY95 cavm_cst_ccmplx_rom_romentry95_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY95 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY95 "CST_CCMPLX_ROM_ROMENTRY95"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY95 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY95 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry96
 *
 * CST Ccmplx Rom Romentry96 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry96
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry96_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry96_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry96 cavm_cst_ccmplx_rom_romentry96_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY96 CAVM_CST_CCMPLX_ROM_ROMENTRY96_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY96_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY96_FUNC(void)
{
    return 0x87a000000180ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY96 cavm_cst_ccmplx_rom_romentry96_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY96 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY96 "CST_CCMPLX_ROM_ROMENTRY96"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY96 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY96 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry97
 *
 * CST Ccmplx Rom Romentry97 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry97
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry97_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry97_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry97 cavm_cst_ccmplx_rom_romentry97_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY97 CAVM_CST_CCMPLX_ROM_ROMENTRY97_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY97_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY97_FUNC(void)
{
    return 0x87a000000184ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY97 cavm_cst_ccmplx_rom_romentry97_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY97 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY97 "CST_CCMPLX_ROM_ROMENTRY97"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY97 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY97 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry98
 *
 * CST Ccmplx Rom Romentry98 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry98
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry98_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry98_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry98 cavm_cst_ccmplx_rom_romentry98_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY98 CAVM_CST_CCMPLX_ROM_ROMENTRY98_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY98_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY98_FUNC(void)
{
    return 0x87a000000188ll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY98 cavm_cst_ccmplx_rom_romentry98_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY98 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY98 "CST_CCMPLX_ROM_ROMENTRY98"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY98 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY98 -1,-1,-1,-1

/**
 * Register (NCB32b) cst_ccmplx_rom_romentry99
 *
 * CST Ccmplx Rom Romentry99 Register
 * Each register contains a descripter of a CoreSight component in the system. All ROM
 * table entries conform to the same format.
 */
union cavm_cst_ccmplx_rom_romentry99
{
    uint32_t u;
    struct cavm_cst_ccmplx_rom_romentry99_s
    {
#if __BYTE_ORDER == __BIG_ENDIAN /* Word 0 - Big Endian */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
#else /* Word 0 - Little Endian */
        uint32_t present               : 2;  /**< [  1:  0](RO) Indicates whether the ROM table entry is present. */
        uint32_t power_domain_id_valid : 1;  /**< [  2:  2](RO) Indicates whether there is a power domain ID specified in the ROM table entry. */
        uint32_t sbz_0                 : 1;  /**< [  3:  3](RO) Software should write the field as all 0s. */
        uint32_t power_domain_id       : 5;  /**< [  8:  4](RO) Indicates the power domain ID of the component. Only valid if bit 2 is set. If
                                                                 bit 2 is clear then this field has a value of 0. Possible values are 0 to 31,
                                                                 representing the 32 DBGPWRUPREQ/ACK interface pins of the component. */
        uint32_t sbz_1                 : 3;  /**< [ 11:  9](RO) Software should write the field as all 0s. */
        uint32_t base_addr             : 20; /**< [ 31: 12](RO) Base address of component. */
#endif /* Word 0 - End */
    } s;
    /* struct cavm_cst_ccmplx_rom_romentry99_s cn; */
};
typedef union cavm_cst_ccmplx_rom_romentry99 cavm_cst_ccmplx_rom_romentry99_t;

#define CAVM_CST_CCMPLX_ROM_ROMENTRY99 CAVM_CST_CCMPLX_ROM_ROMENTRY99_FUNC()
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY99_FUNC(void) __attribute__ ((pure, always_inline));
static inline uint64_t CAVM_CST_CCMPLX_ROM_ROMENTRY99_FUNC(void)
{
    return 0x87a00000018cll;
}

#define typedef_CAVM_CST_CCMPLX_ROM_ROMENTRY99 cavm_cst_ccmplx_rom_romentry99_t
#define bustype_CAVM_CST_CCMPLX_ROM_ROMENTRY99 CSR_TYPE_NCB32b
#define basename_CAVM_CST_CCMPLX_ROM_ROMENTRY99 "CST_CCMPLX_ROM_ROMENTRY99"
#define busnum_CAVM_CST_CCMPLX_ROM_ROMENTRY99 0
#define arguments_CAVM_CST_CCMPLX_ROM_ROMENTRY99 -1,-1,-1,-1

#endif /* __CAVM_CSRS_CST_CCMPLX_ROM_H__ */
